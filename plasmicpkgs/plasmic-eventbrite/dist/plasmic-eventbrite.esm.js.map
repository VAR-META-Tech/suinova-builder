{"version":3,"file":"plasmic-eventbrite.esm.js","sources":["../src/hooks/useEventBrite.ts","../src/eventbrite.tsx","../src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst TAG_ID = `EB_SCRIPT_${uuid()}`;\nconst SCRIPT_URL = \"https://www.eventbrite.com/static/widgets/eb_widgets.js\";\n\ninterface Props {\n    eventId?: string;\n    modal?: boolean;\n    onOrderComplete: () => void;\n    promoCode?: string;\n    iFrameHeight?: string;\n    iFrameAutoAdapt?: string;\n}\ntype Widget = {\n    widgetType?: string;\n    eventId?: string;\n    onOrderComplete: () => void;\n    modal?: boolean;\n    modalTriggerElementId?: string;\n    promoCode?: string;\n    iframeContainerId?: string;\n}\nconst useEventbrite = ({\n    eventId,\n    modal,\n    onOrderComplete,\n    promoCode,\n}: Props) => {\n    const id = `EB_${uuid()}`;\n    const [isLoaded, setLoaded] = React.useState(false);\n    const onLoad = React.useCallback(() => setLoaded(true), [setLoaded]);\n    const onErr = React.useCallback(\n        (e:any) => {\n            console.error(`Failed to load Eventbrite script from ${SCRIPT_URL}`);\n            console.error(e);\n\n            setLoaded(false);\n        },\n        [setLoaded]\n    );\n\n    React.useEffect(() => {\n        //@ts-ignore\n        if (globalThis.window?.EBWidgets) {\n            setLoaded(true);\n            return;\n        }\n        const existing = document.getElementById(TAG_ID);\n        if (existing) {\n            existing.remove();\n        }\n        const script = document.createElement(\"script\");\n        script.id = TAG_ID;\n        script.async = true;\n        script.src = SCRIPT_URL;\n        script.addEventListener(\"load\", onLoad);\n        script.addEventListener(\"error\", onErr);\n        script.addEventListener(\"abort\", onErr);\n        document.head.appendChild(script);\n\n        return () => {\n            script.removeEventListener(\"load\", onLoad);\n            script.removeEventListener(\"error\", onErr);\n            script.removeEventListener(\"abort\", onErr);\n            script.remove();\n            setLoaded(false);\n        };\n    }, [setLoaded, onLoad, onErr]);\n\n    React.useEffect(() => {\n        if (!isLoaded) {\n            return;\n        }\n\n        const config: Widget = {\n            widgetType: \"checkout\",\n            eventId,\n            onOrderComplete,\n            modal,\n        };\n\n        if (modal) {\n            config.modalTriggerElementId = id;\n        } else {\n            config.iframeContainerId = id;\n        }\n\n        if (promoCode) {\n            config.promoCode = promoCode;\n        }\n        //@ts-ignore\n        globalThis.window?.EBWidgets.createWidget(config);\n    }, [isLoaded]);\n\n    return isLoaded ? { id } : null;\n};\n\nexport default useEventbrite;\n","import { CodeComponentMeta } from \"@plasmicapp/host\";\n\nimport React from \"react\";\nimport useEventbrite from \"./hooks/useEventBrite\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-eventbrite\";\n\ninterface EventbriteProps {\n  className?: string;\n  eventId?: string;\n  text?: string;\n}\n\nexport const EventbriteMeta: CodeComponentMeta<EventbriteProps> = {\n  name: \"hostless-eventbrite\",\n  displayName: \"EventBrite\",\n  importName: \"Eventbrite\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Shows Eventbrite checkout on your website\",\n  defaultStyles: {\n    color: \"#ffffff\",\n    fontSize: \"12px\",\n    width: \"100px\",\n    height: \"25px\",\n    borderWidth: \"0px\",\n    backgroundColor: \"#19aee7\",\n    borderRadius: \"4px\",\n  },\n  props: {\n    eventId: {\n      type: \"string\",\n      displayName: \"Event ID\",\n      description: `Learn how to get event ID (\"https://www.eventbrite.com/platform/docs/events\")`,\n      defaultValue: \"463676879027\",\n      helpText:\n        \"In the URL field at the top, you see something like https://www.eventbrite.com/myevent?eid=123456789 . The number after eid= is the Event ID\",\n    },\n    text: {\n      type: \"string\",\n      displayName: \"Label\",\n      description: \"Label\",\n      defaultValue: \"Buy tickets\",\n    },\n  },\n};\n\nexport function Eventbrite({ className, text, eventId }: EventbriteProps) {\n  if (!eventId) {\n    return <div>Please enter Event Id</div>;\n  }\n\n  const handleOrderCompleted = React.useCallback(() => {\n    console.log(\"Order was completed successfully\");\n  }, []);\n\n  const modalButtonCheckout = useEventbrite({\n    eventId: `${eventId!}`,\n    modal: true,\n    onOrderComplete: handleOrderCompleted,\n  });\n\n  return (\n    <button className={className} id={modalButtonCheckout?.id} type=\"button\">\n      {text}\n    </button>\n  );\n}\n","import registerComponent, {\n  CodeComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport { Eventbrite, EventbriteMeta } from \"./eventbrite\";\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: CodeComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  _registerComponent(Eventbrite, EventbriteMeta);\n}\nexport * from \"./eventbrite\";\n"],"names":["TAG_ID","uuid","SCRIPT_URL","useEventbrite","_ref","eventId","modal","onOrderComplete","promoCode","id","_React$useState","React","useState","isLoaded","setLoaded","onLoad","useCallback","onErr","e","console","error","useEffect","_globalThis$window","globalThis","window","EBWidgets","existing","document","getElementById","remove","script","createElement","async","src","addEventListener","head","appendChild","removeEventListener","config","widgetType","modalTriggerElementId","iframeContainerId","_globalThis$window2","createWidget","ensure","x","undefined","Error","modulePath","EventbriteMeta","name","displayName","importName","importPath","providesData","description","defaultStyles","color","fontSize","width","height","borderWidth","backgroundColor","borderRadius","props","type","defaultValue","helpText","text","Eventbrite","className","handleOrderCompleted","log","modalButtonCheckout","registerAll","loader","_registerComponent","Component","defaultMeta","registerComponent"],"mappings":"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"}