{"version":3,"file":"plasmic-graphcms.cjs.production.min.js","sources":["../src/graphcms.tsx","../src/index.tsx"],"sourcesContent":["import {\n  ComponentMeta,\n  DataProvider,\n  GlobalContextMeta,\n  repeatedElement,\n  useSelector,\n} from \"@plasmicapp/host\";\nimport { usePlasmicQueryData } from \"@plasmicapp/query\";\nimport get from \"dlv\";\nimport React, { ReactNode, useContext } from \"react\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-graphcms\";\n\ninterface GraphCMSCredentialsProviderProps {\n  apiUrl: string;\n  authToken: string;\n}\n\nconst CredentialsContext = React.createContext<\n  GraphCMSCredentialsProviderProps | undefined\n>(undefined);\n\nexport const GraphCMSCredentialsProviderMeta: GlobalContextMeta<GraphCMSCredentialsProviderProps> =\n  {\n    name: \"GraphCMSCredentialsProvider\",\n    displayName: \"Hygraph Credentials Provider\",\n    description:\n      \"Permanent Auth Tokens are used for controlling access to querying, mutating content, and comes in the form of Bearer token authentication.[get your Auth Token](https://graphcms.com/docs/api-reference/basics/authorization#permanent-auth-tokens).\",\n    importName: \"GraphCMSCredentialsProvider\",\n    importPath: modulePath,\n    props: {\n      apiUrl: {\n        type: \"string\",\n        displayName: \"API url\",\n        description: \"API url of your Hygraph CMS \",\n        defaultValue:\n          \"https://api-us-west-2.graphcms.com/v2/cl3ua8gpwdni001z10ucc482i/master\",\n      },\n      authToken: {\n        type: \"string\",\n        displayName: \"Auth Token \",\n        description: \"Auth Token\",\n        defaultValue:\n          \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImdjbXMtbWFpbi1wcm9kdWN0aW9uIn0.eyJ2ZXJzaW9uIjozLCJpYXQiOjE2NTQwMDg5NzUsImF1ZCI6WyJodHRwczovL2FwaS11cy13ZXN0LTIuZ3JhcGhjbXMuY29tL3YyL2NsM3VhOGdwd2RuaTAwMXoxMHVjYzQ4MmkvbWFzdGVyIiwiaHR0cHM6Ly9tYW5hZ2VtZW50LW5leHQuZ3JhcGhjbXMuY29tIl0sImlzcyI6Imh0dHBzOi8vbWFuYWdlbWVudC5ncmFwaGNtcy5jb20vIiwic3ViIjoiMWU2NGY0ZDMtODE3Yy00OTdkLWE4YTQtNzA4OTY4Zjg3OTc3IiwianRpIjoiY2thNWoyZW9iMDN0YzAxd2gwZGZkNjdyeSJ9.bWr3rpqT7UmJ5NwoEVatkW_QsqxC8tB-zxdcTecIVR19oS5tcoxbbmwe946B-57Zmqrnc5rNntj9UjN065RqEDFM0iPhy4BCgDHCFfNUuHg5Mmq1qu8-j_ZSN90aJfwVmMNYH9GuOYFiOCd6uytLe8fPcQRWOKpXEcO8q4BusrreCvwkwXIaZV2dq-FOJ4LdBdKcRWwfQWeMdthVzBxrlrxogP_xEYQuMNdfbe5tGWgVsRVDN7eQjB1w9Srqc9T_NgY6x-aL8rPmobcZ1IMdUj9klPPm_dINMzrhZS4OR-HXHPwdnSFObgPeJDPI6YEo2SFAg78PMCNZNRT2DtfDVC4F7cLboxaNUNY4r6Z2d9uBu2N1o05zIXra6Q4JIA--0xBfELTUcmU06Ococioyui8PCI5r_QlRSSlnxrdb85Ht00yMDBRGHPtySGUNiEy9Lq5RcoW1a41bJRmZ-z1Q8zluOUHrgwcIb2DN8xKB9YThPce7ytnFcVajH0K3Hnd57m7SukCgZACmULt_EK0NYTUe1BBmTC8eg9ZBM3lplPWSUzBKWgajGTUNK50KRWokAke_UCEf0gssR3MYLIo5PVN131-bD57nccEPBkegYmmZUACRoYHyI_gQYC-0---MXCS6BV7cK1D-_yDbiBrCCixyKNBYCmhxuZOxVcWu4dk\",\n      },\n    },\n  };\n\nexport function GraphCMSCredentialsProvider({\n  apiUrl,\n  authToken,\n  children,\n}: React.PropsWithChildren<GraphCMSCredentialsProviderProps>) {\n  return (\n    <CredentialsContext.Provider value={{ apiUrl, authToken }}>\n      {children}\n    </CredentialsContext.Provider>\n  );\n}\n\ninterface GraphCMSFetcherProps {\n  children?: ReactNode;\n  className?: string;\n  noAutoRepeat?: boolean;\n  noLayout?: boolean;\n  query?: { query?: string; variables?: object };\n  varOverrides?: Record<string, any>;\n  setControlContextData?: (data: {\n    endpoint?: string;\n    headers?: HeadersInit;\n  }) => void;\n}\n\nexport const GraphCMSFetcherMeta: ComponentMeta<GraphCMSFetcherProps> = {\n  name: \"GraphCMSFetcher\",\n  displayName: \"Hygraph Fetcher\",\n  importName: \"GraphCMSFetcher\",\n  importPath: modulePath,\n  providesData: true,\n  description:\n    \"Fetches Hygraph data and repeats content of children once for every row fetched. \",\n  defaultStyles: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    gridRowGap: \"8px\",\n    gridColumnGap: \"8px\",\n    padding: \"8px\",\n    maxWidth: \"100%\",\n  },\n  props: {\n    children: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"vbox\",\n        styles: {\n          padding: \"8px\",\n        },\n        children: {\n          type: \"component\",\n          name: \"GraphCMSField\",\n        },\n      },\n    },\n    query: {\n      type: \"code\",\n      lang: \"graphql\",\n      endpoint: (props, ctx) => ctx?.endpoint ?? \"\",\n      headers: (props, ctx) => ctx?.headers ?? \"\",\n    },\n    varOverrides: {\n      type: \"object\",\n      description:\n        \"Pass in dynamic values for your query variables, as an object of key-values\",\n      defaultValue: {},\n    },\n    noAutoRepeat: {\n      type: \"boolean\",\n      displayName: \"No auto-repeat\",\n      description: \"Do not automatically repeat children for every entry.\",\n      defaultValue: false,\n    },\n    noLayout: {\n      type: \"boolean\",\n      displayName: \"No layout\",\n      description:\n        \"When set, GraphCMS Fetcher will not layout its children; instead, the layout set on its parent element will be used. Useful if you want to set flex gap or control container tag type.\",\n      defaultValue: false,\n    },\n  },\n};\n\nfunction compact(arr: any[]) {\n  return arr.filter((x) => !!x);\n}\n\nexport function GraphCMSFetcher({\n  query,\n  children,\n  className,\n  noLayout,\n  noAutoRepeat,\n  varOverrides,\n  setControlContextData,\n}: GraphCMSFetcherProps) {\n  const creds = ensure(useContext(CredentialsContext));\n  const cacheKey = JSON.stringify({\n    query,\n    creds,\n    varOverrides,\n  });\n\n  const headers = {\n    Authorization: `Bearer ${creds.authToken}`,\n  };\n\n  const { data, error, isLoading } = usePlasmicQueryData<any | null>(\n    cacheKey,\n    async () => {\n      if (!query) {\n        return null;\n      }\n\n      if (\n        varOverrides &&\n        typeof varOverrides === \"object\" &&\n        Object.keys(varOverrides).length > 0\n      ) {\n        query = {\n          ...query,\n          variables: {\n            ...query.variables,\n            ...varOverrides,\n          },\n        };\n      }\n\n      const data = await fetch(creds.apiUrl, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(query),\n      });\n\n      return await data.json();\n    }\n  );\n\n  setControlContextData?.({\n    endpoint: creds.apiUrl,\n    headers,\n  });\n\n  if (!query) {\n    return <div>Please make a query in order to fetch data </div>;\n  }\n\n  if (!creds.apiUrl || !creds.authToken) {\n    return (\n      <div>Please specify a valid API Credentials: API Url, Auth Token</div>\n    );\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (!data?.data || compact(Object.values(data?.data)).length === 0) {\n    return <div>Data not found</div>;\n  }\n\n  const renderedData = noAutoRepeat\n    ? children\n    : Object.values(data?.data)\n        .flatMap((model: any) => (Array.isArray(model) ? model : [model]))\n        .map((item: any, i: number) => (\n          <DataProvider\n            key={JSON.stringify(item)}\n            name={\"graphCmsItem\"}\n            data={item}\n          >\n            {repeatedElement(i, children)}\n          </DataProvider>\n        ));\n  return noLayout ? (\n    <> {renderedData} </>\n  ) : (\n    <div className={className}> {renderedData} </div>\n  );\n}\n\ninterface GraphCMSFieldProps {\n  className?: string;\n  path?: string;\n  setControlContextData?: (data: { data: any }) => void;\n  themeClassName?: string;\n}\nexport const GraphCMSFieldMeta: ComponentMeta<GraphCMSFieldProps> = {\n  name: \"GraphCMSField\",\n  displayName: \"Hygraph Field\",\n  importName: \"GraphCMSField\",\n  importPath: modulePath,\n  props: {\n    path: {\n      type: \"dataSelector\",\n      data: (props: any, ctx: any) => ctx?.data ?? {},\n      displayName: \"Field\",\n      description: \"Field to be displayed.\",\n    },\n    themeClassName: {\n      type: \"themeResetClass\",\n      targetAllTags: true,\n    },\n  },\n};\nexport function GraphCMSField({\n  className,\n  path,\n  themeClassName,\n  setControlContextData,\n}: GraphCMSFieldProps) {\n  const item = useSelector(\"graphCmsItem\");\n  if (!item) {\n    return <div>GraphCMSField must be used within a GraphCMSFetcher </div>;\n  }\n\n  setControlContextData?.({ data: item });\n\n  if (!path) {\n    return <div>Please specify a valid path or select a field.</div>;\n  }\n\n  // We need to improve this check by making an introspection query\n  const isRichText = (data: any) => \"html\" in data;\n\n  const data = get(item, path);\n  if (typeof data === \"object\" && data.mimeType?.startsWith(\"image\")) {\n    return <img src={data.url} className={className} />;\n  } else if (typeof data === \"object\" && isRichText(data)) {\n    return (\n      <div\n        className={`${themeClassName} ${className}`}\n        dangerouslySetInnerHTML={{ __html: data.html }}\n      />\n    );\n  } else if (!data || typeof data === \"object\") {\n    return <div className={className}>Please specify a valid field.</div>;\n  } else {\n    return <div className={className}>{data}</div>;\n  }\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n GraphCMSCredentialsProvider,\n GraphCMSCredentialsProviderMeta,\n GraphCMSFetcher,\n GraphCMSFetcherMeta,\n GraphCMSField,\n GraphCMSFieldMeta,\n} from \"./graphcms\";\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n    loader.registerGlobalContext(\n     GraphCMSCredentialsProvider,\n     GraphCMSCredentialsProviderMeta\n    );\n  } else {\n    registerGlobalContext(\n     GraphCMSCredentialsProvider,\n     GraphCMSCredentialsProviderMeta\n    );\n  }\n\n  _registerComponent(GraphCMSFetcher,GraphCMSFetcherMeta);\n  _registerComponent(GraphCMSField,GraphCMSFieldMeta);\n}\n\nexport * from \"./graphcms\";\n"],"names":["ensure","x","Error","modulePath","CredentialsContext","React","createContext","undefined","GraphCMSCredentialsProviderMeta","name","displayName","description","importName","importPath","props","apiUrl","type","defaultValue","authToken","GraphCMSCredentialsProvider","_ref","Provider","value","children","GraphCMSFetcherMeta","providesData","defaultStyles","display","gridTemplateColumns","gridRowGap","gridColumnGap","padding","maxWidth","styles","query","lang","endpoint","ctx","_ctx$endpoint","headers","_ctx$headers","varOverrides","noAutoRepeat","noLayout","GraphCMSFetcher","_ref2","arr","className","setControlContextData","creds","useContext","cacheKey","JSON","stringify","Authorization","_usePlasmicQueryData","usePlasmicQueryData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","abrupt","Object","keys","length","_extends","variables","fetch","method","body","sent","json","stop","error","isLoading","message","values","filter","renderedData","flatMap","model","Array","isArray","map","item","i","DataProvider","key","repeatedElement","GraphCMSFieldMeta","path","_ctx$data","themeClassName","targetAllTags","GraphCMSField","_ref4","useSelector","get","_data$mimeType","mimeType","startsWith","src","url","isRichText","dangerouslySetInnerHTML","__html","html","loader","_registerComponent","Component","defaultMeta","registerComponent","registerGlobalContext"],"mappings":"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"}