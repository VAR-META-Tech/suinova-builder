{"version":3,"file":"react-quill.cjs.production.min.js","sources":["../src/useIsClient.ts","../src/index.tsx","../src/utils.ts"],"sourcesContent":["import React from \"react\";\n\nexport function useIsClient() {\n    const [loaded, setLoaded] = React.useState(false);\n    useIsomorphicLayoutEffect(() => {\n        setLoaded(true);\n    });\n    return loaded;\n}\n\nconst isBrowser = typeof window !== \"undefined\";\nexport const useIsomorphicLayoutEffect = isBrowser\n    ? React.useLayoutEffect\n    : React.useEffect;","import React, { useMemo } from \"react\";\nimport { ReactQuillProps } from \"react-quill\";\nimport { Registerable, registerComponentHelper } from \"./utils\";\nimport { PropType } from \"@plasmicapp/host\";\nimport { useIsClient } from \"./useIsClient\";\nconst ReactQuill =\n  typeof window !== \"undefined\" ? require(\"react-quill\") : null;\n\ntype ToolbarOptionsType =\n  | \"textStyle\"\n  | \"script\"\n  | \"fontFamily\"\n  | \"heading\"\n  | \"fontSizes\"\n  | \"colors\"\n  | \"formatting\"\n  | \"inputTypes\";\n\nconst TEXT_STYLE_DICT = {\n  bold: \"bold\",\n  italic: \"italic\",\n  underline: \"underline\",\n  strikethrough: \"strike\",\n};\n\nconst HEADING_TYPES_DICT = {\n  \"Heading 1\": 1,\n  \"Heading 2\": 2,\n  \"Heading 3\": 3,\n  \"Heading 4\": 4,\n  \"Heading 5\": 5,\n  \"Heading 6\": 6,\n  Body: \"normal\",\n};\n\nconst FONT_SIZES = [\"small\", \"medium\", \"large\", \"huge\"];\n\nconst COLOR_TYPE_DICT = {\n  \"text color\": \"color\",\n  \"text background\": \"background\",\n};\n\nconst FORMATTING_TYPES_DICT = {\n  alignment: \"align\",\n  list: \"list\",\n  indentation: \"indent\",\n  \"text direction\": \"direction\",\n  \"clear formatting\": \"clean\",\n};\n\nconst INPUT_TYPES = [\n  \"link\",\n  \"blockquote\",\n  \"image\",\n  \"video\",\n  \"code-block\",\n  \"formula\",\n];\n\nexport function Quill(\n  props: ReactQuillProps & {\n    containerClassName: string;\n    customToolbar: any[];\n    toolbar: Record<ToolbarOptionsType, any>;\n  }\n) {\n  const isClient = useIsClient();\n\n  const { containerClassName, toolbar, customToolbar, ...rest } = props;\n\n  const modules = useMemo(() => {\n    if (customToolbar) {\n      return {\n        toolbar: customToolbar,\n      };\n    }\n\n    const {\n      textStyle,\n      fontFamily,\n      heading,\n      fontSizes,\n      colors,\n      script,\n      formatting,\n      inputTypes,\n    } = toolbar;\n\n    const textStyleControls = Object.keys(TEXT_STYLE_DICT)\n      .filter((key) => textStyle.includes(key))\n      .map((key) => TEXT_STYLE_DICT[key as keyof typeof TEXT_STYLE_DICT]);\n\n    const colorControls = Object.keys(COLOR_TYPE_DICT)\n      .filter((key) => colors.includes(key))\n      .map((key) => ({\n        [COLOR_TYPE_DICT[key as keyof typeof COLOR_TYPE_DICT]]: [],\n      }));\n\n    const scriptControls = script\n      ? [{ script: \"super\" }, { script: \"sub\" }]\n      : undefined;\n\n    const fontControls = [\n      fontFamily ? { font: [] } : undefined,\n      heading.length\n        ? {\n            header: Object.keys(HEADING_TYPES_DICT)\n              .filter((key) => heading.includes(key))\n              .map(\n                (key) =>\n                  HEADING_TYPES_DICT[key as keyof typeof HEADING_TYPES_DICT]\n              ),\n          }\n        : undefined,\n      fontSizes.length\n        ? { size: FONT_SIZES.filter((fs) => fontSizes.includes(fs)) }\n        : undefined,\n    ].filter((i) => i);\n\n    const listControlsGroup: any[] = [];\n    const indentationControlsGroup: any[] = [];\n    const otherFormattingControlsGroup: any[] = [];\n\n    formatting?.map((f: keyof typeof FORMATTING_TYPES_DICT) => {\n      switch (f) {\n        case \"list\":\n          listControlsGroup.push({\n            [FORMATTING_TYPES_DICT[\"list\"]]: \"ordered\",\n          });\n          listControlsGroup.push({ [FORMATTING_TYPES_DICT[\"list\"]]: \"bullet\" });\n          break;\n        case \"alignment\":\n          otherFormattingControlsGroup.push({\n            [FORMATTING_TYPES_DICT[\"alignment\"]]: [],\n          });\n          break;\n        case \"indentation\":\n          indentationControlsGroup.push({\n            [FORMATTING_TYPES_DICT[\"indentation\"]]: \"-1\",\n          });\n          indentationControlsGroup.push({\n            [FORMATTING_TYPES_DICT[\"indentation\"]]: \"+1\",\n          });\n          break;\n        case \"text direction\":\n          otherFormattingControlsGroup.push({\n            [FORMATTING_TYPES_DICT[\"text direction\"]]: \"rtl\",\n          });\n          break;\n        case \"clear formatting\":\n          otherFormattingControlsGroup.push(\n            FORMATTING_TYPES_DICT[\"clear formatting\"]\n          );\n          break;\n      }\n    });\n\n    const otherInputControls = inputTypes.length\n      ? INPUT_TYPES.filter((inp) => inputTypes.includes(inp))\n      : undefined;\n\n    return {\n      toolbar: [\n        textStyleControls,\n        colorControls,\n        scriptControls,\n        fontControls,\n        listControlsGroup,\n        indentationControlsGroup,\n        otherFormattingControlsGroup,\n        otherInputControls,\n      ].filter((i) => i?.length),\n    };\n  }, [toolbar, customToolbar]);\n\n  const key = useMemo(\n    () => JSON.stringify(modules) + String(rest.preserveWhitespace),\n    [rest.preserveWhitespace, modules]\n  );\n\n  if (!isClient) {\n    return null;\n  }\n\n  return (\n    <div className={containerClassName}>\n      <ReactQuill key={key} modules={modules} {...rest} />\n    </div>\n  );\n}\n\nexport const quillHelpers = {\n  states: {\n    value: {\n      onChangeArgsToValue: ((content, _delta, _source, _editor) => {\n        return content;\n      }) as ReactQuillProps[\"onChange\"],\n    },\n  },\n};\n\nconst toolbarFields: Record<ToolbarOptionsType, PropType<any>> = {\n  textStyle: {\n    type: \"choice\",\n    multiSelect: true,\n    options: Object.keys(TEXT_STYLE_DICT),\n    defaultValue: Object.keys(TEXT_STYLE_DICT),\n  },\n  colors: {\n    type: \"choice\",\n    multiSelect: true,\n    options: Object.keys(COLOR_TYPE_DICT),\n    defaultValue: Object.keys(COLOR_TYPE_DICT),\n  },\n  script: {\n    displayName: \"Super/Sub Script\",\n    type: \"boolean\",\n    defaultValue: true,\n  },\n  fontFamily: {\n    type: \"boolean\",\n    defaultValue: true,\n  },\n  heading: {\n    type: \"choice\",\n    multiSelect: true,\n    options: Object.keys(HEADING_TYPES_DICT),\n    defaultValue: Object.keys(HEADING_TYPES_DICT),\n  },\n  fontSizes: {\n    type: \"choice\",\n    multiSelect: true,\n    options: FONT_SIZES,\n    defaultValue: FONT_SIZES,\n  },\n  formatting: {\n    type: \"choice\",\n    multiSelect: true,\n    options: Object.keys(FORMATTING_TYPES_DICT),\n    defaultValue: Object.keys(FORMATTING_TYPES_DICT),\n  },\n  inputTypes: {\n    type: \"choice\",\n    multiSelect: true,\n    options: INPUT_TYPES,\n    defaultValue: INPUT_TYPES,\n  },\n} as const;\n\nexport function registerQuill(loader?: Registerable) {\n  registerComponentHelper(loader, Quill, {\n    name: \"hostless-react-quill\",\n    displayName: \"Rich Text Editor\",\n    classNameProp: \"containerClassName\",\n    defaultStyles: {\n      width: \"stretch\",\n    },\n    props: {\n      value: {\n        type: \"string\",\n        displayName: \"HTML Value\",\n        editOnly: true,\n        uncontrolledProp: \"defaultValue\",\n        description: \"Contents of the editor\",\n      },\n      toolbar: {\n        type: \"object\",\n        fields: { ...toolbarFields },\n        defaultValue: Object.keys(toolbarFields).reduce((acc: any, key) => {\n          acc[key] = (\n            toolbarFields[key as keyof typeof toolbarFields] as any\n          ).defaultValue;\n          return acc;\n        }, {}),\n        description: \"Customize the toolbar to show/hide controls\",\n      },\n      customToolbar: {\n        type: \"array\",\n        advanced: true,\n        description:\n          \"Custom toolbar configuration for Quill editor. Overrides the existing toolbar.\",\n        helpText:\n          \"Check toolbarOptions here: https://quilljs.com/docs/modules/toolbar\",\n      },\n      placeholder: \"string\",\n      preserveWhitespace: {\n        type: \"boolean\",\n        description:\n          \"Prevents Quill from collapsing continuous whitespaces on paste\",\n        advanced: true,\n        defaultValue: true,\n      },\n      readOnly: {\n        type: \"boolean\",\n        description: \"Prevents user from changing the contents of the editor\",\n        defaultValue: false,\n        advanced: true,\n      },\n      onChange: {\n        type: \"eventHandler\",\n        advanced: true,\n        argTypes: [\n          {\n            name: \"content\",\n            type: \"string\",\n          },\n          {\n            name: \"delta\",\n            type: \"object\",\n          },\n          {\n            name: \"source\",\n            type: \"string\",\n          },\n          {\n            name: \"editor\",\n            type: \"object\",\n          },\n        ],\n      },\n      onChangeSelection: {\n        type: \"eventHandler\",\n        advanced: true,\n        argTypes: [\n          {\n            name: \"range\",\n            type: \"object\",\n          },\n          {\n            name: \"source\",\n            type: \"string\",\n          },\n          {\n            name: \"editor\",\n            type: \"object\",\n          },\n        ],\n      },\n      onFocus: {\n        type: \"eventHandler\",\n        advanced: true,\n        argTypes: [\n          {\n            name: \"range\",\n            type: \"object\",\n          },\n          {\n            name: \"source\",\n            type: \"string\",\n          },\n          {\n            name: \"editor\",\n            type: \"object\",\n          },\n        ],\n      },\n      onBlur: {\n        type: \"eventHandler\",\n        advanced: true,\n        argTypes: [\n          {\n            name: \"previousRange\",\n            type: \"object\",\n          },\n          {\n            name: \"source\",\n            type: \"string\",\n          },\n          {\n            name: \"editor\",\n            type: \"object\",\n          },\n        ],\n      },\n      onKeyPress: {\n        type: \"eventHandler\",\n        advanced: true,\n        argTypes: [\n          {\n            name: \"event\",\n            type: \"object\",\n          },\n        ],\n      },\n      onKeyDown: {\n        type: \"eventHandler\",\n        advanced: true,\n        argTypes: [\n          {\n            name: \"event\",\n            type: \"object\",\n          },\n        ],\n      },\n      onKeyUp: {\n        type: \"eventHandler\",\n        advanced: true,\n        argTypes: [\n          {\n            name: \"event\",\n            type: \"object\",\n          },\n        ],\n      },\n    } as any,\n    states: {\n      value: {\n        type: \"writable\",\n        valueProp: \"value\",\n        onChangeProp: \"onChange\",\n        variableType: \"text\",\n        // initVal: \"\",\n        ...quillHelpers.states.value,\n      },\n    },\n    componentHelpers: {\n      helpers: quillHelpers,\n      importName: \"quillHelpers\",\n      importPath: \"@plasmicpkgs/react-quill\",\n    },\n    importName: \"Quill\",\n    importPath: \"@plasmicpkgs/react-quill\",\n  });\n}\n","import {\n  ComponentMeta,\n  default as registerComponent,\n} from \"@plasmicapp/host/registerComponent\";\nimport {\n  default as registerGlobalContext,\n  GlobalContextMeta,\n} from \"@plasmicapp/host/registerGlobalContext\";\nimport { default as registerToken } from \"@plasmicapp/host/registerToken\";\nimport React from \"react\";\n\nexport type Registerable = {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n  registerToken: typeof registerToken;\n};\n\nexport function makeRegisterComponent<T extends React.ComponentType<any>>(\n  component: T,\n  meta: ComponentMeta<React.ComponentProps<T>>\n) {\n  return function (loader?: Registerable) {\n    registerComponentHelper(loader, component, meta);\n  };\n}\n\nexport function makeRegisterGlobalContext<T extends React.ComponentType<any>>(\n  component: T,\n  meta: GlobalContextMeta<React.ComponentProps<T>>\n) {\n  return function (loader?: Registerable) {\n    if (loader) {\n      loader.registerGlobalContext(component, meta);\n    } else {\n      registerGlobalContext(component, meta);\n    }\n  };\n}\n\nexport function registerComponentHelper<T extends React.ComponentType<any>>(\n  loader: Registerable | undefined,\n  component: T,\n  meta: ComponentMeta<React.ComponentProps<T>>\n) {\n  if (loader) {\n    loader.registerComponent(component, meta);\n  } else {\n    registerComponent(component, meta);\n  }\n}\n\ntype ReactElt = {\n  children: ReactElt | ReactElt[];\n  props: {\n    children: ReactElt | ReactElt[];\n    [prop: string]: any;\n  } | null;\n  type: React.ComponentType<any> | null;\n  key: string | null;\n} | null;\n\nexport function traverseReactEltTree(\n  children: React.ReactNode,\n  callback: (elt: ReactElt) => void\n) {\n  const rec = (elts: ReactElt | ReactElt[] | null) => {\n    (Array.isArray(elts) ? elts : [elts]).forEach((elt) => {\n      if (elt) {\n        callback(elt);\n        if (elt.children) {\n          rec(elt.children);\n        }\n        if (elt.props?.children && elt.props.children !== elt.children) {\n          rec(elt.props.children);\n        }\n      }\n    });\n  };\n  rec(children as any);\n}\n\nexport function asArray<T>(x: T[] | T | undefined | null) {\n  if (Array.isArray(x)) {\n    return x;\n  } else if (x == null) {\n    return [];\n  } else {\n    return [x];\n  }\n}\n"],"names":["useIsomorphicLayoutEffect","window","React","useLayoutEffect","useEffect","ReactQuill","require","TEXT_STYLE_DICT","bold","italic","underline","strikethrough","HEADING_TYPES_DICT","Heading 1","Heading 2","Heading 3","Heading 4","Heading 5","Heading 6","Body","FONT_SIZES","COLOR_TYPE_DICT","text color","text background","FORMATTING_TYPES_DICT","alignment","list","indentation","text direction","clear formatting","INPUT_TYPES","Quill","props","_React$useState","loaded","setLoaded","isClient","useState","containerClassName","toolbar","customToolbar","rest","_objectWithoutPropertiesLoose","_excluded","modules","useMemo","textStyle","fontFamily","heading","fontSizes","colors","script","formatting","inputTypes","textStyleControls","Object","keys","filter","key","includes","map","colorControls","_ref","scriptControls","undefined","fontControls","font","length","header","size","fs","i","listControlsGroup","indentationControlsGroup","otherFormattingControlsGroup","f","push","_listControlsGroup$pu","_listControlsGroup$pu2","_otherFormattingContr","_indentationControlsG","_indentationControlsG2","_otherFormattingContr2","otherInputControls","inp","JSON","stringify","String","preserveWhitespace","className","quillHelpers","states","value","onChangeArgsToValue","content","_delta","_source","_editor","toolbarFields","type","multiSelect","options","defaultValue","displayName","loader","component","meta","registerComponent","registerComponentHelper","name","classNameProp","defaultStyles","width","editOnly","uncontrolledProp","description","fields","_extends","reduce","acc","advanced","helpText","placeholder","readOnly","onChange","argTypes","onChangeSelection","onFocus","onBlur","onKeyPress","onKeyDown","onKeyUp","valueProp","onChangeProp","variableType","componentHelpers","helpers","importName","importPath"],"mappings":"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"}