{"version":3,"file":"plasmic-typeform.esm.js","sources":["../src/typeform.tsx","../src/index.tsx"],"sourcesContent":["import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport { Widget } from \"@typeform/embed-react\";\nimport React from \"react\";\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-typeform\";\n\ninterface TypeformProps {\n  className?: string;\n  formId?: string;\n}\n\nexport const TypeformMeta: ComponentMeta<TypeformProps> = {\n  name: \"hostless-typeform\",\n  displayName: \"Typeform\",\n  importName: \"Typeform\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Embed Typeform on your website\",\n  defaultStyles: {\n    width: \"600px\",\n    height: \"700px\",\n  },\n  props: {\n    formId: {\n      type: \"string\",\n      displayName: \"Form ID\",\n      description: \"ID of your form in Typeform\",\n      defaultValue: \"R2s5BM\",\n    },\n  },\n};\n\nexport function Typeform({ className, formId }: TypeformProps) {\n  if (!formId) {\n    return <div>Please specify a Form ID</div>;\n  }\n\n  return (\n    <div className={className}>\n      <Widget\n        id={formId!}\n        style={{ width: \"100%\", height: \"100%\" }}\n        className={className}\n      />\n    </div>\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport { Typeform, TypeformMeta } from \"./typeform\";\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  _registerComponent(Typeform, TypeformMeta);\n}\n\nexport * from \"./typeform\";\n"],"names":["ensure","x","undefined","Error","modulePath","TypeformMeta","name","displayName","importName","importPath","providesData","description","defaultStyles","width","height","props","formId","type","defaultValue","Typeform","_ref","className","React","Widget","id","style","registerAll","loader","_registerComponent","Component","defaultMeta","registerComponent"],"mappings":";;;;SAIgBA,MAAMA,CAAIC,CAAuB;EAC/C,IAAIA,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKC,SAAS,EAAE;IACjC;IACA,MAAM,IAAIC,KAAK,sCAAsC,CAAC;GACvD,MAAM;IACL,OAAOF,CAAC;;AAEZ;AAEA,IAAMG,UAAU,GAAG,+BAA+B;IAOrCC,YAAY,GAAiC;EACxDC,IAAI,EAAE,mBAAmB;EACzBC,WAAW,EAAE,UAAU;EACvBC,UAAU,EAAE,UAAU;EACtBC,UAAU,EAAEL,UAAU;EACtBM,YAAY,EAAE,IAAI;EAClBC,WAAW,EAAE,gCAAgC;EAC7CC,aAAa,EAAE;IACbC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE;GACT;EACDC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAE,QAAQ;MACdV,WAAW,EAAE,SAAS;MACtBI,WAAW,EAAE,6BAA6B;MAC1CO,YAAY,EAAE;;;;SAKJC,QAAQA,CAAAC,IAAA;MAAGC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEL,MAAM,GAAAI,IAAA,CAANJ,MAAM;EAC1C,IAAI,CAACA,MAAM,EAAE;IACX,OAAOM,4DAAmC;;EAG5C,OACEA;IAAKD,SAAS,EAAEA;KACdC,oBAACC,MAAM;IACLC,EAAE,EAAER,MAAO;IACXS,KAAK,EAAE;MAAEZ,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;KAAQ;IACxCO,SAAS,EAAEA;IACX,CACE;AAEV;;SCjDgBK,WAAWA,CAACC,MAG3B;EACC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CACtBC,SAAY,EACZC,WAAmD;IAEnD,IAAIH,MAAM,EAAE;MACVA,MAAM,CAACI,iBAAiB,CAACF,SAAS,EAAEC,WAAW,CAAC;KACjD,MAAM;MACLC,iBAAiB,CAACF,SAAS,EAAEC,WAAW,CAAC;;GAE5C;EAEDF,kBAAkB,CAACT,QAAQ,EAAEd,YAAY,CAAC;AAC5C;;;;"}