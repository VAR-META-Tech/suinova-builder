{"version":3,"file":"plasmic-wordpress-graphql.cjs.production.min.js","sources":["../src/wordpress.tsx","../src/index.tsx"],"sourcesContent":["import {\n  ComponentMeta,\n  DataProvider,\n  GlobalContextMeta,\n  repeatedElement,\n  useSelector,\n} from \"@plasmicapp/host\";\nimport { usePlasmicQueryData } from \"@plasmicapp/query\";\nimport get from \"dlv\";\nimport React, { ReactNode, useContext } from \"react\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-wordpress-graphql\";\n\ninterface WordpressProviderProps {\n  graphqlEndpoint: string;\n}\n\nconst CredentialsContext = React.createContext<\n  WordpressProviderProps | undefined\n>(undefined);\n\nexport const WordpressProviderMeta: GlobalContextMeta<WordpressProviderProps> = {\n  name: \"WordpressGraphQLProvider\",\n  displayName: \"Wordpress GraphQL Provider\",\n  description: \"The GraphQL API Endpoint of your Wordpress\",\n  importName: \"WordpressProvider\",\n  importPath: modulePath,\n  props: {\n    graphqlEndpoint: {\n      type: \"string\",\n      displayName: \"GraphQL API Endpoint\",\n      description: \"GraphQL API Endpoint of your Wordpress\",\n      defaultValue: \"https://demo.wpgraphql.com/graphql\",\n    },\n  },\n};\n\nexport function WordpressProvider({\n  graphqlEndpoint,\n  children,\n}: React.PropsWithChildren<WordpressProviderProps>) {\n  return (\n    <CredentialsContext.Provider value={{ graphqlEndpoint }}>\n      {children}\n    </CredentialsContext.Provider>\n  );\n}\n\ninterface WordpressFetcherProps {\n  children?: ReactNode;\n  className?: string;\n  noLayout?: boolean;\n  noAutoRepeat?: boolean;\n  query?: string;\n  setControlContextData?: (data: { endpoint?: string }) => void;\n}\n\nexport const WordpressFetcherMeta: ComponentMeta<WordpressFetcherProps> = {\n  name: \"WordpressGraphQLFetcher\",\n  displayName: \"Wordpress Fetcher\",\n  importName: \"WordpressFetcher\",\n  importPath: modulePath,\n  providesData: true,\n  description:\n    \"Fetches Wordpress data and repeats content of children once for every row fetched. \",\n  defaultStyles: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    gridRowGap: \"8px\",\n    gridColumnGap: \"8px\",\n    padding: \"8px\",\n    maxWidth: \"100%\",\n  },\n  props: {\n    children: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"vbox\",\n        styles: {\n          padding: \"8px\",\n        },\n        children: {\n          type: \"component\",\n          name: \"WordpressGraphQLField\",\n        },\n      },\n    },\n    query: {\n      type: \"code\",\n      lang: \"graphql\",\n      endpoint: (props, ctx) => ctx?.endpoint ?? \"\",\n    },\n    noAutoRepeat: {\n      type: \"boolean\",\n      displayName: \"No auto-repeat\",\n      description: \"Do not automatically repeat children for every entry.\",\n      defaultValue: false,\n    },\n    noLayout: {\n      type: \"boolean\",\n      displayName: \"No layout\",\n      description:\n        \"When set, Wordpress Fetcher will not layout its children; instead, the layout set on its parent element will be used. Useful if you want to set flex gap or control container tag type.\",\n      defaultValue: false,\n    },\n  },\n};\n\nfunction compact(arr: any[]) {\n  return arr.filter((x) => !!x);\n}\n\nexport function WordpressFetcher({\n  query,\n  children,\n  className,\n  noLayout,\n  noAutoRepeat,\n  setControlContextData,\n}: WordpressFetcherProps) {\n  const creds = ensure(useContext(CredentialsContext));\n  const cacheKey = JSON.stringify({\n    query,\n    creds,\n  });\n  const { data } = usePlasmicQueryData<any | null>(cacheKey, async () => {\n    if (!query) {\n      return null;\n    }\n    const data = await fetch(creds.graphqlEndpoint, {\n      method: \"POST\",\n      body: JSON.stringify(query),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return await data.json();\n  });\n\n  setControlContextData?.({\n    endpoint: creds.graphqlEndpoint,\n  });\n\n  if (!query) {\n    return <div>Please make a query in order to fetch data</div>;\n  }\n\n  if (!creds.graphqlEndpoint) {\n    return (\n      <div>\n        Please specify a valid API Credentials: GraphQL Endpoint of your\n        Wordpress project\n      </div>\n    );\n  }\n\n  if (!data?.data || compact(Object.values(data?.data)).length === 0) {\n    return <div>Data not found</div>;\n  }\n\n  const renderedData = noAutoRepeat\n    ? children\n    : Object.values(data?.data).flatMap((model: any, i: number) =>\n        (Array.isArray(model) ? model : [model]).map((item: any, j: number) => (\n          <DataProvider\n            key={JSON.stringify(item)}\n            name={\"currentWordpressItem\"}\n            data={item}\n          >\n            {repeatedElement(i === 0 && j === 0, children)}\n          </DataProvider>\n        ))\n      );\n  return noLayout ? (\n    <> {renderedData} </>\n  ) : (\n    <div className={className}> {renderedData} </div>\n  );\n}\n\ninterface WordpressFieldProps {\n  className?: string;\n  path?: string;\n  setControlContextData?: (data: { data: any }) => void;\n}\nexport const WordpressFieldMeta: ComponentMeta<WordpressFieldProps> = {\n  name: \"WordpressGraphQLField\",\n  displayName: \"Wordpress Field\",\n  importName: \"WordpressField\",\n  importPath: modulePath,\n  props: {\n    path: {\n      type: \"dataSelector\",\n      data: (props: any, ctx: any) => ctx?.data ?? {},\n      displayName: \"Field\",\n      description: \"Field to be displayed.\",\n    },\n  },\n};\nexport function WordpressField({\n  className,\n  path,\n  setControlContextData,\n}: WordpressFieldProps) {\n  const item = useSelector(\"currentWordpressItem\");\n\n  if (!item) {\n    return <div>WordpressField must be used within a WordpressFetcher </div>;\n  }\n\n  setControlContextData?.({\n    data: item,\n  });\n\n  if (!path) {\n    return <div>Please specify a valid path or select a field.</div>;\n  }\n  const data = get(item, path as string);\n  if (typeof data === \"object\" && data.mediaType === \"image\") {\n    return (\n      <img className={className} src={data.mediaItemUrl} srcSet={data.srcSet} />\n    );\n  } else if (\n    path.slice(-1)[0] === \"content\" ||\n    path.slice(-1)[0] === \"excerpt\"\n  ) {\n    return (\n      <div className={className} dangerouslySetInnerHTML={{ __html: data }} />\n    );\n  } else if (!data || typeof data === \"object\") {\n    return <div className={className}>Please specify a valid field.</div>;\n  } else {\n    return <div className={className}> {data} </div>;\n  }\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  WordpressFetcher,\n  WordpressFetcherMeta,\n  WordpressField,\n  WordpressFieldMeta,\n  WordpressProvider,\n  WordpressProviderMeta,\n} from \"./wordpress\";\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n    loader.registerGlobalContext(WordpressProvider, WordpressProviderMeta);\n  } else {\n    registerGlobalContext(WordpressProvider, WordpressProviderMeta);\n  }\n\n  _registerComponent(WordpressFetcher, WordpressFetcherMeta);\n  _registerComponent(WordpressField, WordpressFieldMeta);\n}\n\nexport * from \"./wordpress\";\n"],"names":["ensure","x","Error","modulePath","CredentialsContext","React","createContext","undefined","WordpressProviderMeta","name","displayName","description","importName","importPath","props","graphqlEndpoint","type","defaultValue","WordpressProvider","_ref","Provider","value","children","WordpressFetcherMeta","providesData","defaultStyles","display","gridTemplateColumns","gridRowGap","gridColumnGap","padding","maxWidth","styles","query","lang","endpoint","ctx","_ctx$endpoint","noAutoRepeat","noLayout","WordpressFetcher","_ref2","arr","className","setControlContextData","creds","useContext","cacheKey","JSON","stringify","data","usePlasmicQueryData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","fetch","method","body","headers","Content-Type","sent","json","stop","Object","values","filter","length","renderedData","flatMap","model","i","Array","isArray","map","item","j","DataProvider","key","repeatedElement","WordpressFieldMeta","path","_ctx$data","WordpressField","_ref4","useSelector","get","mediaType","src","mediaItemUrl","srcSet","slice","dangerouslySetInnerHTML","__html","loader","_registerComponent","Component","defaultMeta","registerComponent","registerGlobalContext"],"mappings":"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"}