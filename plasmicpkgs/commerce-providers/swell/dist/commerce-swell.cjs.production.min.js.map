{"version":3,"file":"commerce-swell.cjs.production.min.js","sources":["../src/const.ts","../src/utils/normalize.ts","../src/utils/handle-fetch-response.ts","../src/cart/utils/checkout-to-cart.ts","../src/cart/utils/checkout-create.ts","../src/cart/use-cart.tsx","../src/cart/use-add-item.tsx","../src/utils/get-checkout-id.ts","../src/cart/use-remove-item.tsx","../src/cart/use-update-item.tsx","../src/utils/common.ts","../src/utils/category-tree.ts","../src/product/use-search.tsx","../src/product/use-product.tsx","../src/site/use-categories.ts","../src/site/use-brands.ts","../src/fetcher.ts","../src/swell.ts","../src/provider.ts","../src/registerCommerceProvider.tsx","../src/index.tsx"],"sourcesContent":["/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: Removed store id and public key\n*/\nexport const SWELL_CHECKOUT_ID_COOKIE = 'SWELL_checkoutId'\n\nexport const SWELL_CHECKOUT_URL_COOKIE = 'swell_checkoutUrl'\n\nexport const SWELL_CUSTOMER_TOKEN_COOKIE = 'swell_customerToken'\n\nexport const SWELL_COOKIE_EXPIRE = 30\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: Added \"Default Variant\" to default title when there's no product variant\n*/\nimport { MoneyV2 } from \"../schema\";\nimport type {\n  Cart,\n  CartLineItem,\n  LineItem,\n  ProductOptionValue,\n  SwellCart,\n  SwellImage,\n  SwellProduct,\n  SwellProductOptionValue,\n  SwellVariant,\n} from \"../types\";\nimport { Product, ProductOption } from \"../types/product\";\nimport { Category, SwellCategoryChildren } from \"../types/site\";\n\nconst money = ({ amount, currencyCode }: MoneyV2) => {\n  return {\n    value: +amount,\n    currencyCode,\n  };\n};\n\ntype swellProductOption = {\n  id: string;\n  name: string;\n  values: any[];\n};\n\ntype normalizedProductOption = {\n  id: string;\n  displayName: string;\n  values: ProductOptionValue[];\n};\n\nconst normalizeProductOption = ({\n  id,\n  name: displayName = \"\",\n  values = [],\n}: swellProductOption): ProductOption => {\n  let returnValues = values.map((value) => {\n    let output: any = {\n      label: value.name,\n      // id: value?.id || id,\n    };\n    if (displayName.match(/colou?r/gi)) {\n      output = {\n        ...output,\n        hexColors: [value.name],\n      };\n    }\n    return output;\n  });\n  return {\n    __typename: \"MultipleChoiceOption\",\n    id,\n    displayName,\n    values: returnValues,\n  };\n};\n\nconst normalizeProductImages = (images: SwellImage[]) => {\n  if (!images || images.length < 1) {\n    return [{ url: \"/\" }];\n  }\n  return images?.map(({ file, ...rest }: SwellImage) => ({\n    url: file?.url + \"\",\n    height: Number(file?.height),\n    width: Number(file?.width),\n    ...rest,\n  }));\n};\n\nconst normalizeProductVariants = (\n  variants: SwellVariant[],\n  productOptions: swellProductOption[]\n) => {\n  return variants?.map(\n    ({ id, name, price, option_value_ids: optionValueIds = [] }) => {\n      const values = name\n        .split(\",\")\n        .map((i) => ({ name: i.trim(), label: i.trim() }));\n\n      const options = optionValueIds.map((id) => {\n        const matchingOption = productOptions.find((option) => {\n          return option.values.find(\n            (value: SwellProductOptionValue) => value.id == id\n          );\n        });\n        return normalizeProductOption({\n          id,\n          name: matchingOption?.name ?? \"\",\n          values,\n        });\n      });\n\n      return {\n        id,\n        name,\n        // sku: sku ?? id,\n        price: price ?? undefined,\n        // listPrice: price ?? null,\n        // requiresShipping: true,\n        options,\n      };\n    }\n  );\n};\n\nexport function normalizeProduct(swellProduct: SwellProduct): Product {\n  const {\n    id,\n    name,\n    description,\n    images,\n    options,\n    slug,\n    variants,\n    price: value,\n    currency: currencyCode,\n  } = swellProduct;\n  // ProductView accesses variants for each product\n  const emptyVariants = [{ options: [], id, name: \"Default variant\" }];\n\n  const productOptions = options\n    ? options.map((o) => normalizeProductOption(o))\n    : [];\n  const productVariants = variants\n    ? normalizeProductVariants(variants.results, options)\n    : [];\n\n  const productImages = normalizeProductImages(images);\n  const product = {\n    ...swellProduct,\n    description,\n    id,\n    vendor: \"\",\n    path: `/${slug}`,\n    images: productImages,\n    variants:\n      productVariants && productVariants.length\n        ? productVariants\n        : emptyVariants,\n    options: productOptions,\n    price: {\n      value,\n      currencyCode,\n    },\n  };\n  return product;\n}\n\nexport function normalizeCart({\n  id,\n  account_id,\n  date_created,\n  currency,\n  tax_included_total,\n  items,\n  sub_total,\n  grand_total,\n  discounts,\n}: SwellCart) {\n  const cart: Cart = {\n    id: id,\n    customerId: account_id + \"\",\n    email: \"\",\n    createdAt: date_created,\n    currency: { code: currency },\n    taxesIncluded: tax_included_total > 0,\n    lineItems: items?.map(normalizeLineItem) ?? [],\n    lineItemsSubtotalPrice: +sub_total,\n    subtotalPrice: +sub_total,\n    totalPrice: grand_total,\n    discounts: discounts?.map((discount) => ({ value: discount.amount })),\n  };\n  return cart;\n}\n/*\nexport function normalizeCustomer(customer: SwellCustomer): Customer {\n  const { first_name: firstName, last_name: lastName } = customer\n  return {\n    ...customer,\n    firstName,\n    lastName,\n  }\n}\n*/\nfunction normalizeLineItem({\n  id,\n  product,\n  price,\n  variant,\n  quantity,\n}: CartLineItem): LineItem {\n  const item = {\n    id,\n    variantId: variant?.id,\n    productId: product.id ?? \"\",\n    name: product?.name ?? \"\",\n    quantity,\n    variant: {\n      id: variant?.id ?? \"\",\n      sku: variant?.sku ?? \"\",\n      name: variant?.name!,\n      image: {\n        url:\n          product?.images && product.images.length > 0\n            ? product?.images[0].file.url\n            : \"/\",\n      },\n      requiresShipping: false,\n      price: price,\n      listPrice: price,\n    },\n    path: \"\",\n    discounts: [],\n    options: [\n      {\n        value: variant?.name,\n      },\n    ],\n  };\n  return item;\n}\n\nexport function normalizeChildren(children: SwellCategoryChildren) {\n  return children?.results.map((ch) => ch.id);\n}\n\nexport function normalizeCategory({\n  id,\n  name,\n  slug,\n  products,\n  images,\n  depth,\n  children,\n  parent_id,\n}: any): Category {\n  return {\n    id,\n    name,\n    slug,\n    path: `/${slug}`,\n    isEmpty: products?.length === 0,\n    images: images?.map((image: any) => ({\n      url: image.file.url,\n    })),\n    depth,\n    children: normalizeChildren(children),\n    parentId: parent_id,\n  };\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: None\n*/\nimport { CommerceError } from '@plasmicpkgs/commerce'\n\ntype SwellFetchResponse = {\n  error: {\n    message: string\n    code?: string\n  }\n}\n\nconst handleFetchResponse = async (res: SwellFetchResponse) => {\n  if (res) {\n    if (res.error) {\n      throw new CommerceError(res.error)\n    }\n    return res\n  }\n  return null;\n}\n\nexport default handleFetchResponse\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: None\n*/\nimport { CommerceError } from '@plasmicpkgs/commerce'\nimport { CartType } from '@plasmicpkgs/commerce'\n\nimport {\n  CheckoutLineItemsAddPayload,\n  CheckoutLineItemsRemovePayload,\n  CheckoutLineItemsUpdatePayload,\n  Maybe,\n} from '../../schema'\nimport { normalizeCart } from '../../utils'\nexport type CheckoutPayload =\n  | CheckoutLineItemsAddPayload\n  | CheckoutLineItemsUpdatePayload\n  | CheckoutLineItemsRemovePayload\n\nconst checkoutToCart = (checkoutPayload?: Maybe<CheckoutPayload>): CartType.Cart => {\n  if (!checkoutPayload) {\n    throw new CommerceError({\n      message: 'Invalid response from Swell',\n    })\n  }\n  return normalizeCart(checkoutPayload as any)\n}\n\nexport default checkoutToCart\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes:\n    - Added sameSite and secure to the cookie options to allow third-party cookies.\n\t    We need this to make work on the studio\n*/\nimport { SWELL_CHECKOUT_URL_COOKIE, SWELL_COOKIE_EXPIRE } from '../../const'\n\nimport Cookies from 'js-cookie'\n\nexport const checkoutCreate = async (fetch: any) => {\n  const cart = await fetch({\n    query: 'cart',\n    method: 'get',\n  })\n\n  if (!cart) {\n    await fetch({\n      query: 'cart',\n      method: 'setItems',\n      variables: [[]],\n    })\n  }\n\n  const checkoutUrl = cart?.checkout_url\n  const options: Cookies.CookieAttributes = {\n    expires: SWELL_COOKIE_EXPIRE,\n    sameSite: \"none\",\n    secure: true\n  }\n  if (checkoutUrl) {\n    Cookies.set(SWELL_CHECKOUT_URL_COOKIE, checkoutUrl, options)\n  }\n\n  return cart\n}\n\nexport default checkoutCreate\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: None\n*/\nimport { useCart, UseCart } from '@plasmicpkgs/commerce'\nimport { SWRHook } from '@plasmicpkgs/commerce'\nimport { useMemo } from 'react'\nimport { normalizeCart } from '../utils/normalize'\nimport { checkoutCreate, checkoutToCart } from './utils'\nimport type { CartType } from '@plasmicpkgs/commerce'\n\nexport default useCart as UseCart<typeof handler>\n\ntype GetCartHook = CartType.GetCartHook;\n\nexport const handler: SWRHook<GetCartHook> = {\n  fetchOptions: {\n    query: 'cart',\n    method: 'get',\n  },\n  async fetcher({ fetch }) {\n    const cart = await checkoutCreate(fetch)\n\n    return cart ? normalizeCart(cart) : null\n  },\n  useHook:\n    ({ useData }) =>\n    (input) => {\n      const response = useData({\n        swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n      })\n      return useMemo(\n        () =>\n          Object.create(response, {\n            isEmpty: {\n              get() {\n                return (response.data?.lineItems.length ?? 0) <= 0\n              },\n              enumerable: true,\n            },\n          }),\n        [response]\n      )\n    },\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: None\n*/\nimport type { MutationHook } from '@plasmicpkgs/commerce'\nimport { CommerceError } from '@plasmicpkgs/commerce'\nimport { useAddItem,  UseAddItem } from '@plasmicpkgs/commerce'\nimport useCart from './use-cart'\nimport { checkoutToCart } from './utils'\nimport { getCheckoutId } from '../utils'\nimport { useCallback } from 'react'\nimport { AddItemHook } from '../types/cart'\n\nexport default useAddItem as UseAddItem<typeof handler>\n\nexport const handler: MutationHook<AddItemHook> = {\n  fetchOptions: {\n    query: 'cart',\n    method: 'addItem',\n  },\n  async fetcher({ input: item, options, fetch }) {\n    if (\n      item.quantity &&\n      (!Number.isInteger(item.quantity) || item.quantity! < 1)\n    ) {\n      throw new CommerceError({\n        message: 'The item quantity has to be a valid integer greater than 0',\n      })\n    }\n    const variables: {\n      product_id: string | undefined\n      variant_id?: string\n      checkoutId?: string\n      quantity?: number\n    } = {\n      checkoutId: getCheckoutId(),\n      product_id: item.productId,\n      quantity: item.quantity,\n    }\n    if (item.productId !== item.variantId) {\n      variables.variant_id = item.variantId\n    }\n\n    const response = await fetch({\n      ...options,\n      variables,\n    })\n\n    return checkoutToCart(response) as any\n  },\n  useHook:\n    ({ fetch }) =>\n    () => {\n      const { mutate } = useCart()\n\n      return useCallback(\n        async function addItem(input) {\n          const data = await fetch({ input })\n          await mutate(data, false)\n          return data\n        },\n        [fetch, mutate]\n      )\n    },\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: None\n*/\nimport Cookies from 'js-cookie'\nimport { SWELL_CHECKOUT_ID_COOKIE } from '../const'\n\nconst getCheckoutId = (id?: string) => {\n  return id ?? Cookies.get(SWELL_CHECKOUT_ID_COOKIE)\n}\n\nexport default getCheckoutId\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: None\n*/\nimport type {\n  HookFetcherContext,\n  MutationHookContext,\n} from \"@plasmicpkgs/commerce\";\nimport { useCallback } from \"react\";\n\nimport { CartType, useRemoveItem, UseRemoveItem } from \"@plasmicpkgs/commerce\";\nimport useCart from \"./use-cart\";\nimport { checkoutToCart } from \"./utils\";\n\ntype Cart = CartType.Cart;\ntype LineItem = CartType.LineItem;\ntype RemoveItemHook = CartType.RemoveItemHook;\n\nexport type RemoveItemFn<T = any> = T extends LineItem\n  ? (input?: RemoveItemActionInput<T>) => Promise<Cart | null | undefined>\n  : (input: RemoveItemActionInput<T>) => Promise<Cart | null>;\n\nexport type RemoveItemActionInput<T = any> = T extends LineItem\n  ? Partial<RemoveItemHook[\"actionInput\"]>\n  : RemoveItemHook[\"actionInput\"];\n\nexport default useRemoveItem as UseRemoveItem<typeof handler>;\n\nexport const handler = {\n  fetchOptions: {\n    query: \"cart\",\n    method: \"removeItem\",\n  },\n  async fetcher({\n    input: { itemId },\n    options,\n    fetch,\n  }: HookFetcherContext<RemoveItemHook>) {\n    const response = await fetch({ ...options, variables: [itemId] });\n\n    return checkoutToCart(response);\n  },\n  useHook: ({ fetch }: MutationHookContext<RemoveItemHook>) => () => {\n    const { mutate } = useCart();\n\n    return useCallback(\n      async function removeItem(input: { id: string }) {\n        const data = await fetch({ input: { itemId: input.id } });\n        await mutate(data, false);\n\n        return data;\n      },\n      [fetch, mutate]\n    );\n  },\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: None\n*/\nimport type {\n  HookFetcherContext,\n  MutationHookContext,\n} from \"@plasmicpkgs/commerce\";\nimport { ValidationError } from \"@plasmicpkgs/commerce\";\nimport debounce from \"debounce\";\nimport { useCallback } from \"react\";\n// import useUpdateItem, {\n//   UpdateItemInput as UpdateItemInputBase,\n//   UseUpdateItem,\n// } from '@vercel/commerce/cart/use-update-item'\nimport { CartType, useUpdateItem, UseUpdateItem } from \"@plasmicpkgs/commerce\";\nimport { UpdateItemHook } from \"../types/cart\";\nimport useCart from \"./use-cart\";\nimport { handler as removeItemHandler } from \"./use-remove-item\";\nimport { checkoutToCart } from \"./utils\";\n// export type UpdateItemInput<T = any> = T extends LineItem\n//   ? Partial<UpdateItemInputBase<LineItem>>\n//   : UpdateItemInputBase<LineItem>\n\nexport default useUpdateItem as UseUpdateItem<typeof handler>;\n\ntype CartItemBody = CartType.CartItemBody;\ntype LineItem = CartType.LineItem;\n\nexport type UpdateItemActionInput<T = any> = T extends LineItem\n  ? Partial<UpdateItemHook[\"actionInput\"]>\n  : UpdateItemHook[\"actionInput\"];\n\nexport const handler = {\n  fetchOptions: {\n    query: \"cart\",\n    method: \"updateItem\",\n  },\n  async fetcher({\n    input: { itemId, item },\n    options,\n    fetch,\n  }: HookFetcherContext<UpdateItemHook>) {\n    if (Number.isInteger(item.quantity)) {\n      // Also allow the update hook to remove an item if the quantity is lower than 1\n      if (item.quantity! < 1) {\n        return removeItemHandler.fetcher({\n          options: removeItemHandler.fetchOptions,\n          input: { itemId },\n          fetch,\n        });\n      }\n    } else if (item.quantity) {\n      throw new ValidationError({\n        message: \"The item quantity has to be a valid integer\",\n      });\n    }\n    const response = await fetch({\n      ...options,\n      variables: [itemId, { quantity: item.quantity }],\n    });\n\n    return checkoutToCart(response);\n  },\n  useHook:\n    ({ fetch }: MutationHookContext<UpdateItemHook>) =>\n    <T extends LineItem | undefined = undefined>(\n      ctx: {\n        item?: T;\n        wait?: number;\n      } = {}\n    ) => {\n      const { item } = ctx;\n      const { mutate, data: cartData } = useCart() as any;\n\n      return useCallback(\n        debounce(async (input: UpdateItemActionInput) => {\n          const itemId = input.id ?? item?.id;\n          if (!itemId) {\n            throw new ValidationError({\n              message: \"Invalid input used for this operation\",\n            });\n          }\n\n          const data = await fetch({\n            input: {\n              item: {\n                quantity: input.quantity,\n              },\n              itemId,\n            },\n          });\n          await mutate(data, false);\n          return data;\n        }, ctx.wait ?? 500),\n        [fetch, mutate]\n      );\n    },\n};\n","export function ensure<T>(x: T | null | undefined, msg = \"\"): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(\n      `Value must not be undefined or null${msg ? `- ${msg}` : \"\"}`\n    );\n  } else {\n    return x;\n  }\n}\n\nexport const ensureNoNilFields = (\n  o: Record<string, any>\n): Record<string, any> =>\n  Object.fromEntries(Object.entries(o).filter(([k, v]) => v != null));\n","import { Category } from \"../types/site\";\nimport { ensure } from \"./common\";\n\nexport const walkCategoryTree = (\n  category?: Category,\n  categories?: Category[]\n) => {\n  if (!category || !categories) {\n    return [];\n  }\n\n  const queue: Category[] = [category];\n  const result: Category[] = [];\n  while (queue.length > 0) {\n    const curr = ensure(queue.shift());\n    result.push(curr);\n    queue.push(\n      ...(curr.children?.map((child) =>\n        ensure(\n          categories.find((category) => category.id === child),\n          \"The child category must always exist in the categories list\"\n        )\n      ) ?? [])\n    );\n  }\n  return result;\n};\n\nexport const topologicalSortForCategoryTree = (categories: Category[]) => {\n  return categories\n    .filter((category) => !category.parentId)\n    .flatMap((category) => walkCategoryTree(category, categories));\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: Added count as a parameter to input\n*/\nimport type { SearchProductsHook } from \"@plasmicpkgs/commerce\";\nimport {\n  HookSWRInput,\n  SWRHook,\n  useSearch,\n  UseSearch,\n} from \"@plasmicpkgs/commerce\";\nimport { SwellProduct } from \"../types\";\nimport { Category } from \"../types/site\";\nimport { normalizeProduct } from \"../utils\";\nimport { walkCategoryTree } from \"../utils/category-tree\";\nimport { ensureNoNilFields } from \"../utils/common\";\n\nexport type SearchProductsInput = {\n  search?: string;\n  categoryId?: string;\n  brandId?: string;\n  sort?: string;\n  count?: number;\n  includeSubCategories?: boolean;\n  categories?: Category[];\n};\n\nconst useSearchTyped: UseSearch<typeof handler> = useSearch;\nexport default useSearchTyped;\n\nexport const handler: SWRHook<SearchProductsHook> = {\n  fetchOptions: {\n    query: \"products\",\n    method: \"list\",\n  },\n  async fetcher({ input, options, fetch }) {\n    const sortMap = new Map([\n      [\"latest-desc\", \"\"],\n      [\"price-asc\", \"price asc\"],\n      [\"price-desc\", \"price desc\"],\n      [\"trending-desc\", \"popularity\"],\n    ]);\n    const {\n      categoryId,\n      includeSubCategories,\n      categories,\n      brandId,\n      search,\n      sort = \"latest-desc\",\n      count,\n    } = input;\n    const mappedSort = sortMap.get(sort);\n\n    const includedCategories = includeSubCategories\n      ? walkCategoryTree(\n          categories?.find((category) => category.id === categoryId),\n          categories\n        )\n      : undefined;\n\n    const { results: products } = await fetch({\n      query: options.query,\n      method: options.method,\n      variables: ensureNoNilFields({\n        category: !includeSubCategories ? categoryId : undefined,\n        brand: brandId,\n        search,\n        sort: mappedSort,\n        expand: [\"variants\"],\n        limit: count,\n        $filters: {\n          ...(includeSubCategories\n            ? { category: includedCategories?.map((c) => c.id) }\n            : {}),\n        },\n      }),\n    });\n\n    return {\n      products: products.map((product: SwellProduct) =>\n        normalizeProduct(product)\n      ),\n      found: products.length > 0,\n    };\n  },\n  useHook:\n    ({ useData }) =>\n    (input = {}) => {\n      return useData({\n        input: [\n          [\"search\", input.search],\n          [\"categoryId\", input.categoryId],\n          [\"includeSubCategories\", input.includeSubCategories],\n          [\"categories\", input.categories],\n          [\"brandId\", input.brandId],\n          [\"sort\", input.sort],\n          [\"count\", input.count],\n        ] as HookSWRInput,\n        swrOptions: {\n          revalidateOnFocus: false,\n          ...input.swrOptions,\n        },\n      });\n    },\n};\n","import { GetProductHook, SWRHook, UseProduct, useProduct } from '@plasmicpkgs/commerce'\nimport { normalizeProduct } from '../utils'\nimport { SwellProduct } from '../types'\n\nexport type GetProductInput = {\n  id?: string;\n}\n\nexport default useProduct as UseProduct<typeof handler>\n\nexport const handler: SWRHook<GetProductHook> = {\n  fetchOptions: {\n    query: 'products',\n    method: 'get',\n  },\n  async fetcher({ input, options, fetch }) {\n    const { id } = input;\n    const product = await fetch({\n      query: options.query,\n      method: options.method,\n      variables: [id],\n    });\n    if (!product) {\n      return null;\n    }\n    return normalizeProduct(product);\n  },\n  useHook:\n    ({ useData }) =>\n    (input = {}) => {\n      return useData({\n        input: [\n          ['id', input.id],\n        ],\n        swrOptions: {\n          revalidateOnFocus: false,\n          ...input.swrOptions,\n        },\n      })\n    },\n}\n","import {\n  SiteTypes,\n  SWRHook,\n  useCategories,\n  UseCategories,\n} from \"@plasmicpkgs/commerce\";\nimport { useMemo } from \"react\";\nimport { Category } from \"../types/site\";\nimport { normalizeCategory } from \"../utils\";\nimport { topologicalSortForCategoryTree } from \"../utils/category-tree\";\nimport { ensureNoNilFields } from \"../utils/common\";\n\nexport default useCategories as UseCategories<typeof handler>;\n\ntype GetCategoriesHook = SiteTypes.GetCategoriesHook;\n\nexport const handler: SWRHook<GetCategoriesHook> = {\n  fetchOptions: {\n    query: \"categories\",\n    method: \"get\",\n  },\n  async fetcher({ input, options, fetch }) {\n    const { addIsEmptyField, categoryId } = input;\n\n    const data = await fetch({\n      query: options.query,\n      method: options.method,\n      variables: ensureNoNilFields({\n        expand: [\"children\", \"parent_id\"],\n        id: categoryId,\n      }),\n    });\n\n    let categories = data?.results ?? [];\n    if (addIsEmptyField) {\n      categories = await Promise.all(\n        categories.map(async (category: any) => ({\n          ...category,\n          products: (\n            await fetch({\n              query: \"products\",\n              method: \"list\",\n              variables: ensureNoNilFields({\n                limit: 1,\n                category: category.id,\n              }),\n            })\n          ).results,\n        }))\n      );\n    }\n\n    const normalizedCategories: Category[] = !categoryId\n      ? topologicalSortForCategoryTree(categories.map(normalizeCategory))\n      : categories.map(normalizeCategory);\n\n    for (const category of normalizedCategories) {\n      category.depth =\n        (normalizedCategories.find((c) => c.id === category.parentId)?.depth ??\n          -1) + 1;\n    }\n    return normalizedCategories;\n  },\n  useHook: ({ useData }) => (input) => {\n    const response = useData({\n      input: [\n        [\"addIsEmptyField\", input?.addIsEmptyField],\n        [\"categoryId\", input?.categoryId],\n      ],\n      swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n    });\n    return useMemo(\n      () =>\n        Object.create(response, {\n          isEmpty: {\n            get() {\n              return (response.data?.length ?? 0) <= 0;\n            },\n            enumerable: true,\n          },\n        }),\n      [response]\n    );\n  },\n};\n","import {\n  SiteTypes,\n  SWRHook,\n  useBrands,\n  UseBrands,\n} from \"@plasmicpkgs/commerce\";\nimport { useMemo } from \"react\";\n\nexport default useBrands as UseBrands<typeof handler>;\n\ntype GetBrandsHook = SiteTypes.GetBrandsHook;\n\nexport const handler: SWRHook<GetBrandsHook> = {\n  fetchOptions: {\n    query: \"attributes\",\n    method: \"get\",\n  },\n  async fetcher({ fetch }) {\n    const vendors: [string] =\n      (\n        await fetch({\n          query: \"attributes\",\n          method: \"get\",\n          variables: \"brand\",\n        })\n      )?.values ?? [];\n    return Array.from(new Set(vendors).values()).map((v) => ({\n      entityId: v,\n      name: v,\n      path: `brands/${v}`,\n    }));\n  },\n  useHook: ({ useData }) => (input) => {\n    const response = useData({\n      swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n    });\n    return useMemo(\n      () =>\n        Object.create(response, {\n          isEmpty: {\n            get() {\n              return (response.data?.length ?? 0) <= 0;\n            },\n            enumerable: true,\n          },\n        }),\n      [response]\n    );\n  },\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: None\n*/\nimport { Fetcher } from '@plasmicpkgs/commerce'\nimport { CommerceError } from '@plasmicpkgs/commerce'\nimport { handleFetchResponse } from './utils'\nimport swell from './provider'\n\nconst fetcher: Fetcher = async ({ method = 'get', variables, query }) => {\n  async function callSwell() {\n    if (Array.isArray(variables)) {\n      const arg1 = variables[0]\n      const arg2 = variables[1]\n      const response = await swell[query!][method](arg1, arg2)\n      return handleFetchResponse(response)\n    } else {\n      const response = await swell[query!][method](variables)\n      return handleFetchResponse(response)\n    }\n  }\n\n  if (query && query in swell) {\n    return await callSwell()\n  } else {\n    throw new CommerceError({ message: 'Invalid query argument!' })\n  }\n}\n\nexport default fetcher\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: None\n*/\nimport {\n  CommerceAPIConfig,\n  getCommerceProvider as getCoreCommerceProvider,\n  useCommerce as useCoreCommerce,\n} from '@plasmicpkgs/commerce'\nimport { SWELL_CHECKOUT_ID_COOKIE, SWELL_COOKIE_EXPIRE, SWELL_CUSTOMER_TOKEN_COOKIE } from './const'\nimport { getSwellProvider, SwellProvider } from './provider'\nimport fetchApi from './utils/fetch-swell-api'\n\nexport type { SwellProvider }\n\nexport const getCommerceProvider = (storeId: string, publicKey: string) => \n  getCoreCommerceProvider(getSwellProvider(storeId, publicKey))\n\nexport const useCommerce = () => useCoreCommerce<SwellProvider>()\n\n\nexport interface SwellConfig extends CommerceAPIConfig {\n  fetch: any\n}\n\nconst config: SwellConfig = {\n  locale: 'en-US',\n  commerceUrl: '',\n  apiToken: ''!,\n  cartCookie: SWELL_CHECKOUT_ID_COOKIE,\n  cartCookieMaxAge: SWELL_COOKIE_EXPIRE,\n  fetch: fetchApi,\n  customerCookie: SWELL_CUSTOMER_TOKEN_COOKIE,\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/swell/src\n  Changes: Added storeId and publicKey parameters\n*/\n// @ts-ignore\nimport swell, { init } from \"swell-js\";\n\nimport { CommerceExtraFeatures, Provider } from \"@plasmicpkgs/commerce\";\nimport { SWELL_CHECKOUT_ID_COOKIE } from \"./const\";\nimport { handler as useCart } from \"./cart/use-cart\";\nimport { handler as useAddItem } from \"./cart/use-add-item\";\nimport { handler as useUpdateItem } from \"./cart/use-update-item\";\nimport { handler as useRemoveItem } from \"./cart/use-remove-item\";\nimport { handler as useSearch } from \"./product/use-search\";\nimport { handler as useProduct } from \"./product/use-product\";\nimport { handler as useCategories } from \"./site/use-categories\";\nimport { handler as useBrands } from \"./site/use-brands\";\nimport fetcher from \"./fetcher\";\nimport { Fetcher } from \"@plasmicpkgs/commerce\";\n\nexport const getSwellProvider = (storeId: string, publicKey: string) => {\n  init(storeId, publicKey);\n\n  return {\n    locale: \"en-us\",\n    cartCookie: SWELL_CHECKOUT_ID_COOKIE,\n    swell,\n    fetcher,\n    cart: { useCart, useAddItem, useUpdateItem, useRemoveItem },\n    products: { useSearch, useProduct },\n    site: { useCategories, useBrands },\n    extraFeatures: {\n      includeSubCategories: true,\n    },\n  };\n};\n\nexport type SwellProvider = {\n  locale: string;\n  cartCookie: string;\n  fetcher: Fetcher;\n  cart: {\n    useCart: typeof useCart;\n    useAddItem: typeof useAddItem;\n    useUpdateItem: typeof useUpdateItem;\n    useRemoveItem: typeof useRemoveItem;\n  };\n  products: {\n    useSearch: typeof useSearch;\n  };\n  site: {\n    useCategories: typeof useCategories;\n    useBrands: typeof useBrands;\n  };\n  extraFeatures: CommerceExtraFeatures;\n  swell: any;\n};\n\nexport default swell as any;\n","import { GlobalContextMeta } from \"@plasmicapp/host\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  CartActionsProvider,\n  globalActionsRegistrations,\n} from \"@plasmicpkgs/commerce\";\nimport React from \"react\";\nimport { Registerable } from \"./registerable\";\nimport { getCommerceProvider } from \"./swell\";\n\ninterface CommerceProviderProps {\n  children?: React.ReactNode;\n  storeId: string;\n  publicKey: string;\n}\n\nconst globalContextName = \"plasmic-commerce-swell-provider\";\n\nexport const commerceProviderMeta: GlobalContextMeta<CommerceProviderProps> = {\n  name: \"plasmic-commerce-swell-provider\",\n  displayName: \"Swell Provider\",\n  props: {\n    storeId: {\n      type: \"string\",\n      defaultValue: \"plasmic-sandbox\",\n    },\n    publicKey: {\n      type: \"string\",\n      defaultValue: \"pk_QaZeGhtpQaVbNQnWJdRlE1abE6Ezf9U9\",\n    },\n  },\n  ...{ globalActions: globalActionsRegistrations },\n  description: `Get your store ID and public storefront API key from the Swell admin UI under Developer > API Keys.\n\n[Watch how to use this integration](https://www.youtube.com/watch?v=b2mgOTbP2_8).`,\n  importPath: \"@plasmicpkgs/commerce-swell\",\n  importName: \"CommerceProviderComponent\",\n};\n\nexport function CommerceProviderComponent(props: CommerceProviderProps) {\n  const { storeId, publicKey, children } = props;\n\n  const CommerceProvider = React.useMemo(\n    () => getCommerceProvider(storeId, publicKey),\n    [storeId, publicKey]\n  );\n\n  return (\n    <CommerceProvider>\n      <CartActionsProvider globalContextName={globalContextName}>\n        {children}\n      </CartActionsProvider>\n    </CommerceProvider>\n  );\n}\n\nexport function registerCommerceProvider(\n  loader?: Registerable,\n  customCommerceProviderMeta?: GlobalContextMeta<CommerceProviderProps>\n) {\n  const doRegisterComponent: typeof registerGlobalContext = (...args) =>\n    loader\n      ? loader.registerGlobalContext(...args)\n      : registerGlobalContext(...args);\n  doRegisterComponent(\n    CommerceProviderComponent,\n    customCommerceProviderMeta ?? commerceProviderMeta\n  );\n}\n","import { Registerable } from \"./registerable\";\nimport { registerCommerceProvider } from \"./registerCommerceProvider\";\nexport * from \"./registerable\";\nexport * from \"./registerCommerceProvider\";\nexport * from \"./swell\";\nexport { registerCommerceProvider };\n\nexport function registerAll(loader?: Registerable) {\n  registerCommerceProvider(loader);\n}\n"],"names":["normalizeProductOption","_ref2","id","_ref2$name","name","displayName","_ref2$values","values","returnValues","map","value","output","label","match","_extends","hexColors","__typename","normalizeProduct","swellProduct","description","images","options","slug","variants","price","currencyCode","currency","emptyVariants","productOptions","o","productVariants","_ref4","_ref4$option_value_id","option_value_ids","optionValueIds","split","i","trim","undefined","matchingOption","find","option","_matchingOption$name","normalizeProductVariants","results","productImages","length","url","_ref3","file","rest","_objectWithoutPropertiesLoose","_excluded","height","Number","width","normalizeProductImages","vendor","path","normalizeCart","_ref5","items","sub_total","grand_total","discounts","customerId","account_id","email","createdAt","date_created","code","taxesIncluded","tax_included_total","lineItems","_items$map","normalizeLineItem","lineItemsSubtotalPrice","subtotalPrice","totalPrice","discount","amount","_ref6","product","variant","variantId","productId","_product$id","_product$name","quantity","_variant$id","sku","_variant$sku","image","requiresShipping","listPrice","normalizeChildren","children","ch","normalizeCategory","_ref7","products","depth","parent_id","isEmpty","parentId","handleFetchResponse","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","error","CommerceError","abrupt","stop","_x","apply","arguments","checkoutToCart","checkoutPayload","message","checkoutCreate","fetch","cart","checkoutUrl","query","method","sent","variables","expires","sameSite","secure","checkout_url","Cookies","set","handler","fetchOptions","fetcher","useHook","useData","input","response","swrOptions","revalidateOnFocus","useMemo","Object","create","get","_response$data$lineIt","_response$data","data","enumerable","item","isInteger","checkoutId","product_id","variant_id","mutate","useCart","useCallback","_addItem","_callee2","_context2","itemId","_removeItem","_ref$input","removeItemHandler","ValidationError","ctx","debounce","_input$id","_ctx$wait","wait","ensure","x","msg","Error","ensureNoNilFields","fromEntries","entries","filter","walkCategoryTree","category","categories","queue","result","_curr$children$map","_curr$children","curr","shift","push","child","topologicalSortForCategoryTree","flatMap","sortMap","Map","categoryId","includeSubCategories","brandId","search","count","mappedSort","_input$sort","sort","includedCategories","brand","expand","limit","$filters","c","found","addIsEmptyField","_context3","_data$results","Promise","all","t0","t1","t2","t3","t4","normalizedCategories","_loop","_normalizedCategories","_normalizedCategories2","_step","_iterator","_createForOfIteratorHelperLoose","done","delegateYield","_response$data$length","_yield$fetch","_yield$fetch$values","Array","from","Set","v","entityId","_ref$method","callSwell","_callSwell","arg1","arg2","isArray","swell","getCommerceProvider","storeId","publicKey","getCoreCommerceProvider","init","locale","cartCookie","useAddItem","useUpdateItem","useRemoveItem","useSearch","useProduct","site","useCategories","useBrands","extraFeatures","getSwellProvider","commerceProviderMeta","props","type","defaultValue","globalActions","globalActionsRegistrations","importPath","importName","CommerceProviderComponent","CommerceProvider","React","CartActionsProvider","globalContextName","registerCommerceProvider","loader","customCommerceProviderMeta","registerGlobalContext","doRegisterComponent","useCoreCommerce"],"mappings":"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"}