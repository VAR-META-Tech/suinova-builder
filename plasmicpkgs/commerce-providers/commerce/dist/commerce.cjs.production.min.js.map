{"version":3,"file":"commerce.cjs.production.min.js","sources":["../src/commerce.tsx","../src/utils/errors.ts","../src/utils/use-hook.ts","../src/utils/use-data.tsx","../src/utils/define-property.ts","../src/utils/default-fetcher.ts","../src/cart/use-add-item.tsx","../src/cart/use-remove-item.tsx","../src/cart/use-update-item.tsx","../src/utils/default-product.ts","../src/contexts.tsx","../src/registerAddToCartButton.tsx","../src/cart/use-cart.tsx","../src/product/use-price.tsx","../src/registerCart.tsx","../src/registerCartProvider.tsx","../src/site/use-categories.ts","../src/registerCategoryCollection.tsx","../src/registerCategoryField.tsx","../src/registerCategoryLink.tsx","../src/registerCategoryMedia.tsx","../src/product/use-product.tsx","../src/product/use-search.tsx","../src/registerProductBox.tsx","../src/site/use-brands.ts","../src/registerProductCollection.tsx","../src/utils/use-extra-features.ts","../src/registerProductLink.tsx","../src/registerProductMedia.tsx","../src/registerProductMediaCollection.tsx","../src/utils/get-product-price.ts","../src/registerProductPrice.tsx","../src/registerProductQuantity.tsx","../src/registerProductSlider.tsx","../src/registerProductTextField.tsx","../src/registerProductVariantPicker.tsx","../src/index.tsx"],"sourcesContent":["/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: Removed authentication, customer and wishlist hooks\n*/\nimport React, {\n  ReactNode,\n  MutableRefObject,\n  createContext,\n  useContext,\n  useMemo,\n  useRef,\n} from 'react';\nimport type {\n  Product,\n  Cart,\n  Site\n} from './types'\nimport type { Fetcher, SWRHook, MutationHook, CommerceExtraFeatures } from './utils/types';\n\nconst Commerce = createContext<CommerceContextValue<any> | {}>({})\n\nexport type Provider = CommerceConfig & {\n  fetcher: Fetcher\n  cart?: {\n    useCart?: SWRHook<Cart.GetCartHook>\n    useAddItem?: MutationHook<Cart.AddItemHook>\n    useUpdateItem?: MutationHook<Cart.UpdateItemHook>\n    useRemoveItem?: MutationHook<Cart.RemoveItemHook>\n  }\n  products?: {\n    useSearch?: SWRHook<Product.SearchProductsHook>,\n    useProduct?: SWRHook<Product.GetProductHook>,\n  }\n  site?: {\n    useCategories?: SWRHook<Site.GetCategoriesHook>\n    useBrands?: SWRHook<Site.GetBrandsHook>\n  }\n  extraFeatures?: CommerceExtraFeatures\n}\n\nexport type CommerceConfig = {\n  locale: string\n  cartCookie: string\n}\n\nexport type CommerceContextValue<P extends Provider> = {\n  providerRef: MutableRefObject<P>\n  fetcherRef: MutableRefObject<Fetcher>\n} & CommerceConfig\n\nexport type CommerceProps<P extends Provider> = {\n  children?: ReactNode\n  provider: P\n}\n\n/**\n * These are the properties every provider should allow when implementing\n * the core commerce provider\n */\nexport type CommerceProviderProps = {\n  children?: ReactNode\n} & Partial<CommerceConfig>\n\nexport function CoreCommerceProvider<P extends Provider>({\n  provider,\n  children,\n}: CommerceProps<P>) {\n  const providerRef = useRef(provider)\n  // TODO: Remove the fetcherRef\n  const fetcherRef = useRef(provider.fetcher)\n  // If the parent re-renders this provider will re-render every\n  // consumer unless we memoize the config\n  const { locale, cartCookie } = providerRef.current\n  const cfg = useMemo(\n    () => ({ providerRef, fetcherRef, locale, cartCookie }),\n    [locale, cartCookie]\n  )\n\n  return <Commerce.Provider value={cfg}>{children}</Commerce.Provider>\n}\n\nexport function getCommerceProvider<P extends Provider>(provider: P) {\n  return function CommerceProvider({\n    children,\n    ...props\n  }: CommerceProviderProps) {\n    return (\n      <CoreCommerceProvider provider={{ ...provider, ...props }}>\n        {children}\n      </CoreCommerceProvider>\n    )\n  }\n}\n\nexport function useCommerce<P extends Provider>() {\n  return useContext(Commerce) as CommerceContextValue<P>\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: None\n*/\nexport type ErrorData = {\n  message: string\n  code?: string\n}\n\nexport type ErrorProps = {\n  code?: string\n} & (\n  | { message: string; errors?: never }\n  | { message?: never; errors: ErrorData[] }\n)\n\nexport class CommerceError extends Error {\n  code?: string\n  errors: ErrorData[]\n\n  constructor({ message, code, errors }: ErrorProps) {\n    const error: ErrorData = message\n      ? { message, ...(code ? { code } : {}) }\n      : errors![0]\n\n    super(error.message)\n    this.errors = message ? [error] : errors!\n\n    if (error.code) this.code = error.code\n  }\n}\n\n// Used for errors that come from a bad implementation of the hooks\nexport class ValidationError extends CommerceError {\n  constructor(options: ErrorProps) {\n    super(options)\n    this.code = 'validation_error'\n  }\n}\n\nexport class FetcherError extends CommerceError {\n  status: number\n\n  constructor(\n    options: {\n      status: number\n    } & ErrorProps\n  ) {\n    super(options)\n    this.status = options.status\n  }\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: Add provider to useSWRHook and useMutationHook\n*/\nimport { useCallback } from 'react'\nimport { Provider, useCommerce } from '../commerce'\nimport type { MutationHook, PickRequired, SWRHook } from './types'\nimport useData from './use-data'\n\nexport function useFetcher() {\n  const { providerRef, fetcherRef } = useCommerce()\n  return providerRef.current.fetcher ?? fetcherRef.current\n}\n\nexport function useProvider() {\n  const { providerRef } = useCommerce()\n  return providerRef.current;\n}\n\nexport function useHook<\n  P extends Provider,\n  H extends MutationHook<any> | SWRHook<any>\n>(fn: (provider: P) => H) {\n  const { providerRef } = useCommerce<P>();\n  const provider = providerRef.current\n  return fn(provider)\n}\n\nexport function useSWRHook<H extends SWRHook<any>>(\n  hook: PickRequired<H, 'fetcher'>\n) {\n  const fetcher = useFetcher()\n  const provider = useProvider()\n\n  return hook.useHook({\n    useData(ctx) {\n      const response = useData(hook, ctx?.input ?? [], fetcher, ctx?.swrOptions, provider)\n      return response\n    },\n  })\n}\n\nexport function useMutationHook<H extends MutationHook<any>>(\n  hook: PickRequired<H, 'fetcher'>\n) {\n  const fetcher = useFetcher()\n  const provider = useProvider()\n\n  return hook.useHook({\n    fetch: useCallback(\n      ({ input } = {}) => {\n        return hook.fetcher({\n          input,\n          options: hook.fetchOptions,\n          fetch: fetcher,\n          provider\n        })\n      },\n      [fetcher, hook.fetchOptions]\n    ),\n  })\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: Replaced useSWR for useMutablePlasmicQueryData and add provider to useData\n*/\nimport { useMutablePlasmicQueryData } from \"@plasmicapp/query\";\nimport { SWRResponse } from \"swr\";\nimport { Provider } from \"../commerce\";\nimport defineProperty from \"./define-property\";\nimport { CommerceError } from \"./errors\";\nimport type {\n  Fetcher,\n  HookFetcherFn,\n  HookFetcherOptions,\n  HookFetchInput,\n  HookSWRInput,\n  SWRHookSchemaBase,\n  SwrOptions,\n} from \"./types\";\n\nexport type ResponseState<Result> = SWRResponse<Result, CommerceError> & {\n  isLoading: boolean;\n};\n\nexport type UseData = <H extends SWRHookSchemaBase>(\n  options: {\n    fetchOptions: HookFetcherOptions;\n    fetcher: HookFetcherFn<H>;\n  },\n  input: HookFetchInput | HookSWRInput,\n  fetcherFn: Fetcher,\n  swrOptions?: SwrOptions<H[\"data\"], H[\"fetcherInput\"]>,\n  provider?: Provider\n) => ResponseState<H[\"data\"]>;\n\nconst useData: UseData = (options, input, fetcherFn, swrOptions, provider) => {\n  const hookInput = Array.isArray(input) ? input : Object.entries(input);\n  const fetcher = async (\n    url: string,\n    query?: string,\n    method?: string,\n    ...args: any[]\n  ) => {\n    try {\n      return await options.fetcher({\n        options: { url, query, method },\n        // Transform the input array into an object\n        input: args.reduce((obj, val, i) => {\n          obj[hookInput[i][0]!] = val;\n          return obj;\n        }, {}),\n        fetch: fetcherFn,\n        provider\n      });\n    } catch (error) {\n      // SWR will not log errors, but any error that's not an instance\n      // of CommerceError is not welcomed by this hook\n      if (!(error instanceof CommerceError)) {\n        console.error(error);\n      }\n      throw error;\n    }\n  };\n  const response = useMutablePlasmicQueryData(\n    () => {\n      const opts = options.fetchOptions;\n      return opts\n        ? [opts.url, opts.query, opts.method, ...hookInput.map((e) => e[1])]\n        : null;\n    },\n    fetcher,\n    swrOptions\n  );\n\n  if (!(\"isLoading\" in response)) {\n    defineProperty(response, \"isLoading\", {\n      get() {\n        return response.data === undefined;\n      },\n      enumerable: true,\n    });\n  }\n\n  return response as typeof response & { isLoading: boolean };\n};\n\nexport default useData;\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: None\n*/\n// Taken from https://fettblog.eu/typescript-assertion-signatures/\n\ntype InferValue<Prop extends PropertyKey, Desc> = Desc extends {\n  get(): any\n  value: any\n}\n  ? never\n  : Desc extends { value: infer T }\n  ? Record<Prop, T>\n  : Desc extends { get(): infer T }\n  ? Record<Prop, T>\n  : never\n\ntype DefineProperty<\n  Prop extends PropertyKey,\n  Desc extends PropertyDescriptor\n> = Desc extends { writable: any; set(val: any): any }\n  ? never\n  : Desc extends { writable: any; get(): any }\n  ? never\n  : Desc extends { writable: false }\n  ? Readonly<InferValue<Prop, Desc>>\n  : Desc extends { writable: true }\n  ? InferValue<Prop, Desc>\n  : Readonly<InferValue<Prop, Desc>>\n\nexport default function defineProperty<\n  Obj extends object,\n  Key extends PropertyKey,\n  PDesc extends PropertyDescriptor\n>(\n  obj: Obj,\n  prop: Key,\n  val: PDesc\n): asserts obj is Obj & DefineProperty<Key, PDesc> {\n  Object.defineProperty(obj, prop, val)\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: None\n*/\nimport type { HookFetcherFn } from './types'\n\nexport const SWRFetcher: HookFetcherFn<any> = ({ options, fetch }) =>\n  fetch(options)\n\nexport const mutationFetcher: HookFetcherFn<any> = ({\n  input,\n  options,\n  fetch,\n}) => fetch({ ...options, body: input })\n\nexport default SWRFetcher\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: None\n*/\nimport { useHook, useMutationHook } from '../utils/use-hook'\nimport { mutationFetcher } from '../utils/default-fetcher'\nimport type { HookFetcherFn, MutationHook } from '../utils/types'\nimport type { AddItemHook } from '../types/cart'\nimport type { Provider } from '../commerce'\n\nexport type UseAddItem<\n  H extends MutationHook<AddItemHook<any>> = MutationHook<AddItemHook>\n> = ReturnType<H['useHook']>\n\nconst fetcher: HookFetcherFn<AddItemHook> = mutationFetcher\n\nconst fn = (provider: Provider) => provider.cart?.useAddItem!\n\nconst useAddItem: UseAddItem = (...args) => {\n  const hook = useHook(fn)\n  return useMutationHook({ fetcher, ...hook })(...args)\n}\n\nexport default useAddItem\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: None\n*/\nimport { useHook, useMutationHook } from '../utils/use-hook'\nimport { mutationFetcher } from '../utils/default-fetcher'\nimport type { HookFetcherFn, MutationHook } from '../utils/types'\nimport type { RemoveItemHook } from '../types/cart'\nimport type { Provider } from '../commerce'\n\nexport type UseRemoveItem<\n  H extends MutationHook<RemoveItemHook<any>> = MutationHook<RemoveItemHook>\n> = ReturnType<H['useHook']>\n\nconst fetcher: HookFetcherFn<RemoveItemHook> = mutationFetcher\n\nconst fn = (provider: Provider) => provider.cart?.useRemoveItem!\n\nconst useRemoveItem: UseRemoveItem = (input) => {\n  const hook = useHook(fn)\n  return useMutationHook({ fetcher, ...hook })(input)\n}\n\nexport default useRemoveItem\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: None\n*/\nimport { useHook, useMutationHook } from '../utils/use-hook'\nimport { mutationFetcher } from '../utils/default-fetcher'\nimport type { HookFetcherFn, MutationHook } from '../utils/types'\nimport type { UpdateItemHook } from '../types/cart'\nimport type { Provider } from '../commerce'\n\nexport type UseUpdateItem<\n  H extends MutationHook<UpdateItemHook<any>> = MutationHook<UpdateItemHook>\n> = ReturnType<H['useHook']>\n\nconst fetcher: HookFetcherFn<UpdateItemHook> = mutationFetcher\n\nconst fn = (provider: Provider) => provider.cart?.useUpdateItem!\n\nconst useUpdateItem: UseUpdateItem = (input) => {\n  const hook = useHook(fn)\n  return useMutationHook({ fetcher, ...hook })(input)\n}\n\nexport default useUpdateItem\n","import { Product } from \"../types/product\";\nexport const defaultProduct: Product = {\n  id: \"123456789\",\n  name: \"Product name\",\n  description: \"\",\n  descriptionHtml: `\n    <p>This is a <strong>placeholder</strong>.</p>\n  `,\n  images: [\n    {\n      url: \"https://static1.plasmic.app/commerce/lightweight-jacket-0.png\",\n      alt: \"Lightweight Jacket\",\n    },\n    {\n      url: \"https://static1.plasmic.app/commerce/lightweight-jacket-1.png\",\n      alt: \"Lightweight Jacket\",\n    },\n    {\n      url: \"https://static1.plasmic.app/commerce/lightweight-jacket-2.png\",\n      alt: \"Lightweight Jacket\",\n    },\n  ],\n  variants: [\n    {\n      id: \"variant1\",\n      name: \"Variant 1\",\n      options: [],\n    },\n    {\n      id: \"variant2\",\n      name: \"Variant 2\",\n      options: [],\n    },\n  ],\n  price: {\n    value: 0,\n    currencyCode: \"USD\",\n  },\n  options: [],\n};\n","import {\n  DataProvider,\n  GlobalActionDict,\n  GlobalActionsProvider,\n  useSelector,\n} from \"@plasmicapp/host\";\nimport { GlobalActionRegistration } from \"@plasmicapp/host/registerGlobalContext\";\nimport React, { useContext } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport useAddItem from \"./cart/use-add-item\";\nimport useRemoveItem from \"./cart/use-remove-item\";\nimport useUpdateItem from \"./cart/use-update-item\";\nimport { Product } from \"./types/product\";\nimport { Category } from \"./types/site\";\nimport { defaultProduct } from \"./utils/default-product\";\n\nconst productSelector = \"currentProduct\";\n\nexport function ProductProvider({\n  product,\n  children,\n}: {\n  product: Product;\n  children: React.ReactNode;\n}) {\n  const methods = useForm();\n  return (\n    <DataProvider name={productSelector} data={product} key={product.id}>\n      <FormProvider {...methods}>{children}</FormProvider>\n    </DataProvider>\n  );\n}\n\nexport const useProduct = () => {\n  const product = useSelector(productSelector) as Product | undefined;\n  return product ?? defaultProduct;\n};\n\nexport const PrimaryCategoryContext = React.createContext<Category | undefined>(\n  undefined\n); //used to render correctly the defaultValueHint in ProductCollection\n\nconst categorySelector = \"currentCategory\";\n\nexport function CategoryProvider({\n  category,\n  children,\n}: {\n  category: Category;\n  children: React.ReactNode;\n}) {\n  return (\n    <DataProvider name={categorySelector} data={category} key={category.id}>\n      {children}\n    </DataProvider>\n  );\n}\n\nexport const useCategoryContext = () =>\n  useSelector(categorySelector) as Category | undefined;\nexport const usePrimaryCategory = () => useContext(PrimaryCategoryContext);\n\nconst mediaSelector = \"currentMedia\";\nexport function ProductMediaProvider({\n  mediaIndex,\n  onClick,\n  children,\n}: {\n  mediaIndex: number;\n  children: React.ReactNode;\n  onClick?: () => void;\n}) {\n  return (\n    <DataProvider name={mediaSelector} data={mediaIndex} key={mediaIndex}>\n      {React.cloneElement(React.isValidElement(children) ? children : <></>, {\n        onClick,\n      })}\n    </DataProvider>\n  );\n}\nexport const useProductMediaContext = () =>\n  useSelector(mediaSelector) as number | undefined;\n\ninterface CartActions extends GlobalActionDict {\n  addItem: (productId: string, variantId: string, quantity: number) => void;\n  updateItem: (lineItemId: string, quantity: number) => void;\n  removeItem: (lineItemId: string) => void;\n}\n\nexport function CartActionsProvider(\n  props: React.PropsWithChildren<{\n    globalContextName: string;\n  }>\n) {\n  const addItem = useAddItem();\n  const removeItem = useRemoveItem();\n  const updateItem = useUpdateItem();\n\n  const actions: CartActions = React.useMemo(\n    () => ({\n      addItem(productId, variantId, quantity) {\n        addItem({ productId, variantId, quantity });\n      },\n      updateItem(lineItemId, quantity) {\n        updateItem({ id: lineItemId, quantity });\n      },\n      removeItem(lineItemId) {\n        removeItem({ id: lineItemId });\n      },\n    }),\n    [addItem, removeItem, updateItem]\n  );\n\n  return (\n    <GlobalActionsProvider\n      contextName={props.globalContextName}\n      actions={actions}\n    >\n      {props.children}\n    </GlobalActionsProvider>\n  );\n}\n\nexport const globalActionsRegistrations: Record<\n  string,\n  GlobalActionRegistration<any>\n> = {\n  addItem: {\n    displayName: \"Add item to cart\",\n    parameters: [\n      {\n        name: \"productId\",\n        displayName: \"Product Id\",\n        type: \"string\",\n      },\n      {\n        name: \"variantId\",\n        displayName: \"Variant Id\",\n        type: \"string\",\n      },\n      {\n        name: \"quantity\",\n        displayName: \"Quantity\",\n        type: \"number\",\n      },\n    ],\n  },\n  updateItem: {\n    displayName: \"Update item in cart\",\n    parameters: [\n      {\n        name: \"lineItemId\",\n        displayName: \"Line Item Id\",\n        type: \"string\",\n      },\n      {\n        name: \"quantity\",\n        displayName: \"New Quantity\",\n        type: \"number\",\n      },\n    ],\n  },\n  removeItem: {\n    displayName: \"Remove item from cart\",\n    parameters: [\n      {\n        name: \"lineItemId\",\n        displayName: \"Line Item Id\",\n        type: \"string\",\n      },\n    ],\n  },\n};\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport useAddItem from \"./cart/use-add-item\";\nimport { useProduct } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\nimport { CommerceError } from \"./utils/errors\";\n\ninterface AddToCartButtonProps {\n  children?: React.ReactNode;\n}\n\nexport const addToCartButtonMeta: ComponentMeta<AddToCartButtonProps> = {\n  name: \"plasmic-commerce-add-to-cart-button\",\n  displayName: \"Add To Cart Button\",\n  props: {\n    children: {\n      type: \"slot\",\n      defaultValue: [\n        {\n          type: \"button\",\n          value: \"Add To Cart\",\n        },\n      ],\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"AddToCartButton\",\n};\n\nexport function AddToCartButton(props: AddToCartButtonProps) {\n  const { children } = props;\n\n  const product = useProduct();\n  const form = useFormContext();\n  const addItem = useAddItem();\n\n  const addToCart = async () => {\n    const quantity = +(form.getValues()[\"ProductQuantity\"] ?? 1);\n    if (isNaN(quantity) || quantity < 1) {\n      throw new CommerceError({\n        message: \"The item quantity has to be a valid integer greater than 0\",\n      });\n    }\n    if (product) {\n      const variantId =\n        form.getValues()[\"ProductVariant\"] ?? product.variants[0].id;\n      await addItem({\n        productId: product.id,\n        variantId: variantId,\n        quantity: quantity,\n      });\n    }\n  };\n\n  return React.isValidElement(children)\n    ? React.cloneElement(children, {\n        onClick: (e: MouseEvent) => {\n          if (\n            children.props.onClick &&\n            typeof children.props.onClick === \"function\"\n          ) {\n            children.props.onClick(e);\n          }\n          addToCart();\n        },\n      } as Partial<unknown> & React.Attributes)\n    : null;\n}\n\nexport function registerAddToCartButton(\n  loader?: Registerable,\n  customAddToCartButtonMeta?: ComponentMeta<AddToCartButtonProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    AddToCartButton,\n    customAddToCartButtonMeta ?? addToCartButtonMeta\n  );\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: None\n*/\nimport Cookies from 'js-cookie'\nimport { useHook, useSWRHook } from '../utils/use-hook'\nimport type { SWRHook, HookFetcherFn } from '../utils/types'\nimport type { GetCartHook } from '../types/cart'\nimport { Provider, useCommerce } from '../commerce'\n\nexport type UseCart<\n  H extends SWRHook<GetCartHook<any>> = SWRHook<GetCartHook>\n> = ReturnType<H['useHook']>\n\nconst fetcher: HookFetcherFn<GetCartHook> = async ({\n  options,\n  input: { cartId },\n  fetch,\n}) => {\n  return cartId ? await fetch(options) : null\n}\n\nconst fn = (provider: Provider) => provider.cart?.useCart!\n\nconst useCart: UseCart = (input) => {\n  const hook = useHook(fn)\n  const { cartCookie } = useCommerce()\n  const fetcherFn = hook.fetcher ?? fetcher\n  const wrapper: typeof fetcher = (context) => {\n    context.input.cartId = Cookies.get(cartCookie);\n    return fetcherFn(context)\n  }\n  return useSWRHook({ ...hook, fetcher: wrapper })(input)\n}\n\nexport default useCart\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: None\n*/\nimport { useMemo } from 'react'\nimport { useCommerce } from '../commerce'\n\nexport function formatPrice({\n  amount,\n  currencyCode,\n  locale,\n}: {\n  amount: number\n  currencyCode: string\n  locale: string\n}) {\n  const formatCurrency = new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency: currencyCode,\n  })\n\n  return formatCurrency.format(amount)\n}\n\nexport function formatVariantPrice({\n  amount,\n  baseAmount,\n  currencyCode,\n  locale,\n}: {\n  baseAmount: number\n  amount: number\n  currencyCode: string\n  locale: string\n}) {\n  const hasDiscount = baseAmount > amount\n  const formatDiscount = new Intl.NumberFormat(locale, { style: 'percent' })\n  const discount = hasDiscount\n    ? formatDiscount.format((baseAmount - amount) / baseAmount)\n    : null\n\n  const price = formatPrice({ amount, currencyCode, locale })\n  const basePrice = hasDiscount\n    ? formatPrice({ amount: baseAmount, currencyCode, locale })\n    : null\n\n  return { price, basePrice, discount }\n}\n\nexport default function usePrice(\n  data?: {\n    amount: number\n    baseAmount?: number\n    currencyCode: string\n  } | null\n) {\n  const { amount, baseAmount, currencyCode } = data ?? {}\n  const { locale } = useCommerce()\n  const value = useMemo(() => {\n    if (typeof amount !== 'number' || !currencyCode) return ''\n\n    return baseAmount\n      ? formatVariantPrice({ amount, baseAmount, currencyCode, locale })\n      : formatPrice({ amount, currencyCode, locale })\n  }, [amount, baseAmount, currencyCode])\n\n  return typeof value === 'string' ? { price: value } : value\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport useCart from \"./cart/use-cart\";\nimport usePrice from \"./product/use-price\";\nimport { Registerable } from \"./registerable\";\n\ninterface CartProps {\n  className?: string;\n  field: string;\n  hideIfIsEmpty?: boolean;\n}\n\nexport const cartMeta: ComponentMeta<CartProps> = {\n  name: \"plasmic-commerce-cart\",\n  displayName: \"Cart\",\n  description:\n    \"Show the size or total of the cart. See Cart Provider component to access more cart data.\",\n  props: {\n    field: {\n      type: \"choice\",\n      options: [\"Size\", \"Total Price\"],\n    },\n    hideIfIsEmpty: {\n      type: \"boolean\",\n      defaultValue: false,\n      description: \"You can hide this component if the cart is empty\",\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"CartComponent\",\n};\n\nexport function CartComponent(props: CartProps) {\n  const { className, field, hideIfIsEmpty } = props;\n\n  const { data } = useCart();\n  const { price } = usePrice({\n    amount: data?.totalPrice ?? 0,\n    currencyCode: data?.currency.code ?? \"USD\",\n  });\n  if (!field) {\n    return <p>You must set the field prop</p>;\n  }\n\n  let value;\n  if (field === \"Size\") {\n    value = data?.lineItems.length ?? 0;\n  } else if (field === \"Total Price\") {\n    value = price ?? 0;\n  }\n\n  return hideIfIsEmpty && value === 0 ? null : (\n    <span className={className}>{value}</span>\n  );\n}\n\nexport function registerCart(\n  loader?: Registerable,\n  customCartMeta?: ComponentMeta<CartProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(CartComponent, customCartMeta ?? cartMeta);\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React, { Children } from \"react\";\nimport useCart from \"./cart/use-cart\";\nimport usePrice from \"./product/use-price\";\nimport { Registerable } from \"./registerable\";\nimport { DataProvider } from \"@plasmicapp/host\";\n\nexport const cartProviderMeta: ComponentMeta<React.PropsWithChildren<object>> =\n  {\n    name: \"plasmic-commerce-cart-provider\",\n    displayName: \"Cart Provider\",\n    description:\n      \"Use this to create bespoke cart UI. Inside Cart Provider, use dynamic values to access cart data.\",\n    props: {\n      children: \"slot\",\n    },\n    providesData: true,\n    importPath: \"@plasmicpkgs/commerce\",\n    importName: \"CartProvider\",\n  };\n\nexport function CartProvider(props: React.PropsWithChildren<object>) {\n  const { data } = useCart();\n  return (\n    <DataProvider data={data} name=\"cart\">\n      {props.children}\n    </DataProvider>\n  );\n}\n\nexport function registerCartProvider(\n  loader?: Registerable,\n  customCartProviderMeta?: ComponentMeta<React.PropsWithChildren<object>>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(CartProvider, customCartProviderMeta ?? cartProviderMeta);\n}\n","import { useHook, useSWRHook } from '../utils/use-hook'\nimport { SWRFetcher } from '../utils/default-fetcher'\nimport type { SWRHook, HookFetcherFn } from '../utils/types'\nimport { Provider } from '../commerce'\nimport { GetCategoriesHook } from '../types/site'\n\nexport type UseCategories<\n  H extends SWRHook<GetCategoriesHook<any>> = SWRHook<GetCategoriesHook>\n> = ReturnType<H['useHook']>\n\nconst fetcher: HookFetcherFn<GetCategoriesHook> = SWRFetcher\n\nconst fn = (provider: Provider) => provider.site?.useCategories!;\n\nconst useCategories: UseCategories = (input) => {\n  const hook = useHook(fn)\n  return useSWRHook({ fetcher, ...hook })(input)\n}\n\nexport default useCategories\n","import {\n  DataProvider,\n  PlasmicCanvasContext,\n  repeatedElement,\n} from \"@plasmicapp/host\";\nimport registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { CategoryProvider, PrimaryCategoryContext } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\nimport useCategories from \"./site/use-categories\";\nimport { Category } from \"./types/site\";\n\ninterface CategoryCollectionProps {\n  className?: string;\n  children?: React.ReactNode;\n  emptyMessage?: React.ReactNode;\n  loadingMessage?: React.ReactNode;\n  noLayout?: boolean;\n  noAutoRepeat?: boolean;\n  category?: string;\n  setControlContextData?: (data: { categories: Category[] }) => void;\n}\n\nexport const categoryCollectionMeta: ComponentMeta<CategoryCollectionProps> = {\n  name: \"plasmic-commerce-category-collection\",\n  displayName: \"Category Collection\",\n  props: {\n    children: {\n      type: \"slot\",\n      defaultValue: [\n        {\n          type: \"vbox\",\n          children: [\n            {\n              type: \"component\",\n              name: \"plasmic-commerce-category-field\",\n              props: {\n                field: \"name\",\n              },\n            },\n            {\n              type: \"component\",\n              name: \"plasmic-commerce-product-collection\",\n            },\n          ],\n          styles: {\n            width: \"100%\",\n            minWidth: 0,\n          },\n        },\n      ],\n    },\n    emptyMessage: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"text\",\n        value: \"No collection found!\",\n      },\n    },\n    loadingMessage: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"text\",\n        value: \"Loading...\",\n      },\n    },\n    category: {\n      type: \"choice\",\n      options: (props, ctx) => {\n        return (\n          ctx?.categories.map((category) => ({\n            label: `${\"  \".repeat(category.depth ?? 0)}${category.name}`,\n            value: category.id,\n          })) ?? []\n        );\n      },\n    },\n    noLayout: {\n      type: \"boolean\",\n      displayName: \"No layout\",\n      description: \"Do not render a container element.\",\n    },\n    noAutoRepeat: {\n      type: \"boolean\",\n      displayName: \"No auto-repeat\",\n      description: \"Do not automatically repeat children for every category.\",\n    },\n  },\n  defaultStyles: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr\",\n    gridRowGap: \"8px\",\n    padding: \"8px\",\n    maxWidth: \"100%\",\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"CategoryCollection\",\n  providesData: true,\n};\n\nexport function CategoryCollection(props: CategoryCollectionProps) {\n  const {\n    children,\n    noLayout,\n    noAutoRepeat,\n    className,\n    loadingMessage,\n    emptyMessage,\n    category: selectedCategory,\n    setControlContextData,\n  } = props;\n\n  const inEditor = React.useContext(PlasmicCanvasContext);\n\n  const {\n    data: allCategories,\n    isLoading: isAllCategoriesLoading,\n  } = useCategories();\n\n  const { data: categories, isLoading } = useCategories({\n    categoryId: selectedCategory,\n    addIsEmptyField: !!inEditor,\n  });\n\n  if (allCategories) {\n    setControlContextData?.({\n      categories: allCategories,\n    });\n  }\n\n  const firstCategoryNotEmpty = categories?.find(\n    (category) => !category.isEmpty\n  );\n  const firstCategoryNotEmptyIndex =\n    categories?.findIndex((category) => !category.isEmpty) ?? -1;\n\n  const renderedData = noAutoRepeat\n    ? children\n    : categories?.map((category, i) => (\n        <CategoryProvider category={category} key={category.id}>\n          {repeatedElement(\n            i < firstCategoryNotEmptyIndex\n              ? i + 1\n              : i === firstCategoryNotEmptyIndex\n              ? 0\n              : i,\n            children\n          )}\n        </CategoryProvider>\n      ));\n\n  if ([isAllCategoriesLoading, isLoading].includes(true)) {\n    return React.isValidElement(loadingMessage) ? loadingMessage : null;\n  }\n\n  if (!categories || categories.length === 0) {\n    return React.isValidElement(emptyMessage) ? emptyMessage : null;\n  }\n\n  return (\n    <DataProvider name=\"categories\" data={categories}>\n      <PrimaryCategoryContext.Provider\n        value={firstCategoryNotEmpty ?? categories[0]}\n      >\n        {noLayout ? (\n          <React.Fragment>{renderedData}</React.Fragment>\n        ) : (\n          <div className={className}>{renderedData}</div>\n        )}\n      </PrimaryCategoryContext.Provider>\n    </DataProvider>\n  );\n}\n\nexport function registerCategoryCollection(\n  loader?: Registerable,\n  customCategoryCollectionMeta?: ComponentMeta<CategoryCollectionProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    CategoryCollection,\n    customCategoryCollectionMeta ?? categoryCollectionMeta\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { useCategoryContext } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\n\ninterface CategoryFieldProps {\n  className?: string;\n  field?: string;\n}\nexport const categoryFieldMeta: ComponentMeta<CategoryFieldProps> = {\n  name: \"plasmic-commerce-category-field\",\n  displayName: \"Category Field\",\n  props: {\n    field: {\n      type: \"choice\",\n      options: [\"id\", \"name\", \"slug\", \"path\"],\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"CategoryField\",\n};\n\nexport function CategoryField(props: CategoryFieldProps) {\n  const { className, field } = props;\n\n  const category = useCategoryContext();\n\n  if (!field) {\n    return <span>You must set the field prop</span>;\n  }\n\n  let data = category ? (category as any)[field] : \"Category field placeholder\";\n\n  return <span className={className}>{data}</span>;\n}\n\nexport function registerCategoryField(\n  loader?: Registerable,\n  customCategoryFieldMeta?: ComponentMeta<CategoryFieldProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    CategoryField,\n    customCategoryFieldMeta ?? categoryFieldMeta\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { useCategoryContext } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\n\ninterface CategoryLinkProps {\n  className?: string;\n  children?: React.ReactNode;\n  linkDest?: string;\n}\n\nexport const categoryLinkMeta: ComponentMeta<CategoryLinkProps> = {\n  name: \"plasmic-commerce-category-link\",\n  displayName: \"Category Link\",\n  props: {\n    children: \"slot\",\n    linkDest: {\n      type: \"string\",\n      defaultValueHint: \"category/{slug}\",\n      description:\n        \"Set the link destination. You can use {slug} to replace by the category slug\",\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"CategoryLink\",\n};\n\nexport function CategoryLink(props: CategoryLinkProps) {\n  const { className, children, linkDest } = props;\n\n  const category = useCategoryContext();\n\n  const resolveLink = (linkDest: string | undefined) => {\n    if (!linkDest) {\n      return undefined;\n    }\n    const regex = /{[^}]*}/;\n    const regexAll = new RegExp(regex, \"g\");\n    const matches = linkDest.match(regexAll) ?? [];\n    let resolvedLink = linkDest;\n    for (const match of matches) {\n      const field = match.slice(1, -1);\n      if (!category || !(field in category)) {\n        return undefined;\n      }\n      resolvedLink = resolvedLink.replace(regex, (category as any)[field]);\n    }\n    return resolvedLink;\n  };\n\n  return (\n    <a\n      className={className}\n      href={resolveLink(linkDest)}\n      style={{\n        color: \"inherit\",\n        textDecoration: \"inherit\",\n      }}\n    >\n      {children}\n    </a>\n  );\n}\n\nexport function registerCategoryLink(\n  loader?: Registerable,\n  customCategoryLinkMeta?: ComponentMeta<CategoryLinkProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(CategoryLink, customCategoryLinkMeta ?? categoryLinkMeta);\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { useCategoryContext } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\n\ninterface CategoryMediaProps {\n  className: string;\n  mediaIndex?: number;\n}\n\nexport const categoryMediaMeta: ComponentMeta<CategoryMediaProps> = {\n  name: \"plasmic-commerce-category-media\",\n  displayName: \"Category Media\",\n  props: {\n    mediaIndex: \"number\",\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"CategoryMedia\",\n};\n\nexport const CategoryMedia = React.forwardRef(\n  (props: CategoryMediaProps, ref: React.ForwardedRef<HTMLImageElement>) => {\n    const { className, mediaIndex = 0 } = props;\n\n    const category = useCategoryContext();\n\n    const image = category?.images ? category.images[mediaIndex] : undefined;\n    return (\n      <img\n        ref={ref}\n        alt={category?.name || \"Category Image\"}\n        src={image?.url ?? \"\"}\n        loading={\"lazy\"}\n        className={className}\n      />\n    );\n  }\n);\n\nexport function registerCategoryMedia(\n  loader?: Registerable,\n  customCategoryMediaMeta?: ComponentMeta<CategoryMediaProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    CategoryMedia,\n    customCategoryMediaMeta ?? categoryMediaMeta\n  );\n}\n","import { useHook, useSWRHook } from '../utils/use-hook'\nimport { SWRFetcher } from '../utils/default-fetcher'\nimport type { HookFetcherFn, SWRHook } from '../utils/types'\nimport type { GetProductHook, } from '../types/product'\nimport type { Provider } from '../commerce'\n\nexport type UseProduct<\n  H extends SWRHook<GetProductHook<any>> = SWRHook<GetProductHook>\n> = ReturnType<H['useHook']>\n\nconst fetcher: HookFetcherFn<GetProductHook> = SWRFetcher\n\nconst fn = (provider: Provider) => provider.products?.useProduct!\n\nconst useProduct: UseProduct = (input) => {\n  const hook = useHook(fn)\n  return useSWRHook({ fetcher, ...hook })(input)\n}\n\nexport default useProduct\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/commerce/src\n  Changes: None\n*/\nimport { useHook, useSWRHook } from '../utils/use-hook'\nimport { SWRFetcher } from '../utils/default-fetcher'\nimport type { HookFetcherFn, SWRHook } from '../utils/types'\nimport type { SearchProductsHook } from '../types/product'\nimport type { Provider } from '../commerce'\n\nexport type UseSearch<\n  H extends SWRHook<SearchProductsHook<any>> = SWRHook<SearchProductsHook>\n> = ReturnType<H['useHook']>\n\nexport const fetcher: HookFetcherFn<SearchProductsHook> = SWRFetcher\n\nconst fn = (provider: Provider) => provider.products?.useSearch!\n\nconst useSearch: UseSearch = (input) => {\n  const hook = useHook(fn)\n  return useSWRHook({ fetcher, ...hook })(input)\n}\n\nexport default useSearch\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport debounce from \"debounce\";\nimport React from \"react\";\nimport { ProductProvider } from \"./contexts\";\nimport useProduct from \"./product/use-product\";\nimport useSearch from \"./product/use-search\";\nimport { Registerable } from \"./registerable\";\nimport { Product } from \"./types/product\";\nimport { CommerceError } from \"./utils/errors\";\n\ninterface ProductBoxProps {\n  className?: string;\n  children?: React.ReactNode;\n  id?: string;\n  noLayout?: boolean;\n  setControlContextData?: (data: {\n    products: Product[];\n    onSearch?: (value: string) => void;\n  }) => void;\n}\n\nexport const productBoxMeta: ComponentMeta<ProductBoxProps> = {\n  name: \"plasmic-commerce-product-box\",\n  displayName: \"Product Box\",\n  description:\n    \"Show a single product. [See commerce tutorial video](https://www.youtube.com/watch?v=1OJ_gXmta2Q)\",\n  props: {\n    children: {\n      type: \"slot\",\n      defaultValue: [\n        {\n          type: \"vbox\",\n          children: [\n            {\n              type: \"component\",\n              name: \"plasmic-commerce-product-text-field\",\n              props: {\n                field: \"name\",\n              },\n            },\n            {\n              type: \"component\",\n              name: \"plasmic-commerce-product-media\",\n            },\n          ],\n          styles: {\n            width: \"100%\",\n            minWidth: 0,\n          },\n        },\n      ],\n    },\n    noLayout: \"boolean\",\n    id: {\n      type: \"cardPicker\",\n      modalTitle: \"Product\",\n      onSearch: (props, ctx) => ctx?.onSearch,\n      showInput: true,\n      options: (props, ctx) =>\n        ctx?.products.map((product) => ({\n          imgUrl: product.images?.[0]?.url,\n          value: product.id,\n          label: product.slug ?? product.name,\n          footer: (\n            <div>\n              <div>\n                <strong>{product.name}</strong>\n              </div>\n              <div>{product.slug}</div>\n            </div>\n          ),\n        })) ?? [],\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductBox\",\n  providesData: true,\n};\n\nexport function ProductBox(props: ProductBoxProps) {\n  const { className, children, noLayout, id, setControlContextData } = props;\n\n  const [productSearch, setProductSearch] = React.useState(\"\");\n\n  const { data: allProducts } = useSearch({\n    search: productSearch !== \"\" ? productSearch : undefined,\n  });\n  const onSearch = React.useCallback(\n    debounce((value: string) => setProductSearch(value), 300),\n    []\n  );\n  if (allProducts) {\n    setControlContextData?.({\n      products: allProducts.products,\n      onSearch,\n    });\n  }\n\n  const { data, error, isLoading } = useProduct({\n    id,\n  });\n\n  if (!id) {\n    return <span>You must set the id prop</span>;\n  }\n\n  if (error) {\n    throw new CommerceError({\n      message: error.message,\n      code: error.code,\n    });\n  }\n\n  if (isLoading) {\n    return <span>Loading...</span>;\n  }\n\n  if (!data) {\n    throw new Error(\"Product not found!\");\n  }\n\n  const renderedData = (\n    <ProductProvider product={data}>{children}</ProductProvider>\n  );\n\n  return noLayout ? (\n    <React.Fragment>{renderedData}</React.Fragment>\n  ) : (\n    <div className={className}>{renderedData}</div>\n  );\n}\n\nexport function registerProductBox(\n  loader?: Registerable,\n  customProductBoxMeta?: ComponentMeta<ProductBoxProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(ProductBox, customProductBoxMeta ?? productBoxMeta);\n}\n","import { useHook, useSWRHook } from '../utils/use-hook'\nimport { SWRFetcher } from '../utils/default-fetcher'\nimport type { SWRHook, HookFetcherFn } from '../utils/types'\nimport { Provider } from '../commerce'\nimport { GetBrandsHook } from '../types/site'\n\nexport type UseBrands<\n  H extends SWRHook<GetBrandsHook<any>> = SWRHook<GetBrandsHook>\n> = ReturnType<H['useHook']>\n\nconst fetcher: HookFetcherFn<GetBrandsHook> = SWRFetcher\n\nconst fn = (provider: Provider) => provider.site?.useBrands!;\n\nconst useBrands: UseBrands = (input) => {\n  const hook = useHook(fn)\n  return useSWRHook({ fetcher, ...hook })(input)\n}\n\nexport default useBrands\n","import { DataProvider, repeatedElement } from \"@plasmicapp/host\";\nimport registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport {\n  ProductProvider,\n  useCategoryContext,\n  usePrimaryCategory,\n} from \"./contexts\";\nimport useSearch from \"./product/use-search\";\nimport { Registerable } from \"./registerable\";\nimport useBrands from \"./site/use-brands\";\nimport useCategories from \"./site/use-categories\";\nimport { Product } from \"./types/product\";\nimport { Brand, Category } from \"./types/site\";\nimport { CommerceExtraFeatures } from \"./utils/types\";\nimport { useCommerceExtraFeatures } from \"./utils/use-extra-features\";\n\ninterface ProductCollectionProps {\n  className?: string;\n  children?: React.ReactNode;\n  emptyMessage?: React.ReactNode;\n  loadingMessage?: React.ReactNode;\n  count?: number;\n  category: string;\n  includeSubCategories?: boolean;\n  brand?: string;\n  noLayout?: boolean;\n  noAutoRepeat?: boolean;\n  search?: string;\n  sort?: string;\n  setControlContextData?: (data: {\n    categories: Category[];\n    brands: Brand[];\n    features?: CommerceExtraFeatures;\n    categoryCtx?: Category;\n  }) => void;\n}\n\nexport const productCollectionMeta: ComponentMeta<ProductCollectionProps> = {\n  name: \"plasmic-commerce-product-collection\",\n  displayName: \"Product Collection\",\n  description:\n    \"Show a product category. [See commerce tutorial video](https://www.youtube.com/watch?v=1OJ_gXmta2Q)\",\n  props: {\n    children: {\n      type: \"slot\",\n      defaultValue: [\n        {\n          type: \"vbox\",\n          children: [\n            {\n              type: \"component\",\n              name: \"plasmic-commerce-product-text-field\",\n              props: {\n                field: \"name\",\n              },\n            },\n            {\n              type: \"component\",\n              name: \"plasmic-commerce-product-media\",\n            },\n          ],\n          styles: {\n            width: \"100%\",\n            minWidth: 0,\n          },\n        },\n      ],\n    },\n    emptyMessage: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"text\",\n        value: \"No product found!\",\n      },\n    },\n    loadingMessage: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"text\",\n        value: \"Loading...\",\n      },\n    },\n    count: \"number\",\n    category: {\n      type: \"choice\",\n      options: (props, ctx) => {\n        return (\n          ctx?.categories.map((category) => ({\n            label: `${\"  \".repeat(category.depth ?? 0)}${category.name}`,\n            value: category.id,\n          })) ?? []\n        );\n      },\n      defaultValueHint: (props, ctx) => ctx?.categoryCtx?.name,\n      readOnly: (props, ctx) => !!ctx?.categoryCtx,\n    },\n    includeSubCategories: {\n      type: \"boolean\",\n      hidden: (props, ctx) => !ctx?.features?.includeSubCategories,\n    },\n    brand: {\n      type: \"choice\",\n      options: (props, ctx) => {\n        return (\n          ctx?.brands.map((brand: Brand) => ({\n            label: brand.name,\n            value: brand.entityId,\n          })) ?? []\n        );\n      },\n    },\n    search: {\n      type: \"string\",\n    },\n    sort: {\n      type: \"choice\",\n      options: [\n        {\n          label: \"Trending\",\n          value: \"trending-desc\",\n        },\n        {\n          label: \"New Arrivals\",\n          value: \"latest-desc\",\n        },\n        {\n          label: \"Price: Low to High\",\n          value: \"price-asc\",\n        },\n        {\n          label: \"Price: High to Low\",\n          value: \"price-desc\",\n        },\n      ],\n    },\n    noLayout: {\n      type: \"boolean\",\n      displayName: \"No layout\",\n      description: \"Do not render a container element.\",\n    },\n    noAutoRepeat: {\n      type: \"boolean\",\n      displayName: \"No auto-repeat\",\n      description: \"Do not automatically repeat children for every category.\",\n    },\n  },\n  defaultStyles: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    gridRowGap: \"8px\",\n    gridColumnGap: \"8px\",\n    padding: \"8px\",\n    maxWidth: \"100%\",\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductCollection\",\n  providesData: true,\n};\n\nexport function ProductCollection(props: ProductCollectionProps) {\n  const {\n    className,\n    children,\n    count,\n    category,\n    includeSubCategories,\n    brand,\n    noLayout,\n    noAutoRepeat,\n    setControlContextData,\n    emptyMessage,\n    loadingMessage,\n    search,\n    sort,\n  } = props;\n\n  const { data: categories, isLoading: isCategoriesLoading } = useCategories();\n\n  const { data: brands, isLoading: isBrandsLoading } = useBrands();\n\n  const categoryCtx = useCategoryContext();\n\n  const { data, isLoading: isSearchLoading } = useSearch({\n    categoryId: categoryCtx?.id ?? category,\n    brandId: brand,\n    count,\n    categories: categories ?? [],\n    includeSubCategories,\n    search,\n    sort,\n  });\n\n  const features = useCommerceExtraFeatures();\n  const primaryCategory = usePrimaryCategory();\n  if (categories && brands) {\n    setControlContextData?.({\n      categories,\n      brands,\n      features,\n      categoryCtx: primaryCategory,\n    });\n  }\n\n  const renderedData = noAutoRepeat\n    ? children\n    : data?.products.map((product: Product, i: number) => (\n        <ProductProvider product={product} key={product.id}>\n          {repeatedElement(i, children)}\n        </ProductProvider>\n      ));\n\n  if ([isSearchLoading, isBrandsLoading, isCategoriesLoading].includes(true)) {\n    return React.isValidElement(loadingMessage) ? loadingMessage : null;\n  }\n\n  if (!data || data.products.length === 0) {\n    return React.isValidElement(emptyMessage) ? emptyMessage : null;\n  }\n\n  return (\n    <DataProvider name=\"products\" data={data?.products}>\n      {noLayout ? (\n        <React.Fragment>{renderedData}</React.Fragment>\n      ) : (\n        <div className={className}>{renderedData}</div>\n      )}\n    </DataProvider>\n  );\n}\n\nexport function registerProductCollection(\n  loader?: Registerable,\n  customProductCollectionMeta?: ComponentMeta<ProductCollectionProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    ProductCollection,\n    customProductCollectionMeta ?? productCollectionMeta\n  );\n}\n","import { useCommerce } from \"../commerce\";\n\nexport const useCommerceExtraFeatures = () => {\n  const { providerRef } = useCommerce()\n  return providerRef.current.extraFeatures;\n}","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { useProduct } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\n\ninterface ProductLinkProps {\n  className?: string;\n  children?: React.ReactNode;\n  linkDest?: string;\n}\n\nexport const productLinkMeta: ComponentMeta<ProductLinkProps> = {\n  name: \"plasmic-commerce-product-link\",\n  displayName: \"Product Link\",\n  props: {\n    children: \"slot\",\n    linkDest: {\n      type: \"string\",\n      defaultValueHint: \"products/{slug}\",\n      description:\n        \"Set the link destination. You can use {slug} to replace by the product slug\",\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductLink\",\n};\n\nexport function ProductLink(props: ProductLinkProps) {\n  const { className, children, linkDest } = props;\n\n  const product = useProduct();\n\n  const resolveLink = (linkDest: string | undefined) => {\n    if (!linkDest) {\n      return undefined;\n    }\n    const regex = /{[^}]*}/;\n    const regexAll = new RegExp(regex, \"g\");\n    const matches = linkDest.match(regexAll) ?? [];\n    let resolvedLink = linkDest;\n    for (const match of matches) {\n      const field = match.slice(1, -1);\n      if (!product || !(field in product)) {\n        return undefined;\n      }\n      resolvedLink = resolvedLink.replace(regex, (product as any)[field]);\n    }\n    return resolvedLink;\n  };\n\n  return (\n    <a\n      className={className}\n      href={resolveLink(linkDest)}\n      style={{\n        color: \"inherit\",\n        textDecoration: \"inherit\",\n      }}\n    >\n      {children}\n    </a>\n  );\n}\n\nexport function registerProductLink(\n  loader?: Registerable,\n  customProductLinkMeta?: ComponentMeta<ProductLinkProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(ProductLink, customProductLinkMeta ?? productLinkMeta);\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { useProduct, useProductMediaContext } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\n\nconst placeholderImage =\n  \"https://static1.plasmic.app/commerce/lightweight-jacket-0.png\";\n\ninterface ProductMediaProps {\n  className: string;\n  mediaIndex?: number;\n  setControlContextData: (data: { inMediaContext: boolean }) => void;\n}\n\nexport const productMediaMeta: ComponentMeta<ProductMediaProps> = {\n  name: \"plasmic-commerce-product-media\",\n  displayName: \"Product Media\",\n  props: {\n    mediaIndex: {\n      type: \"number\",\n      min: 0,\n      hidden: (_, ctx) => !!ctx?.inMediaContext,\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductMedia\",\n};\n\nexport const ProductMedia = React.forwardRef(\n  (props: ProductMediaProps, ref: React.ForwardedRef<HTMLImageElement>) => {\n    const { className, mediaIndex = 0, setControlContextData } = props;\n\n    const product = useProduct();\n    const mediaContext = useProductMediaContext();\n\n    setControlContextData?.({\n      inMediaContext: mediaContext !== undefined,\n    });\n\n    const image = product?.images[mediaContext ?? mediaIndex];\n    return (\n      <img\n        ref={ref}\n        alt={product?.name || \"Product Image\"}\n        src={product ? image?.url ?? \"\" : placeholderImage}\n        loading={\"lazy\"}\n        className={className}\n      />\n    );\n  }\n);\n\nexport function registerProductMedia(\n  loader?: Registerable,\n  customProductMediaMeta?: ComponentMeta<ProductMediaProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(ProductMedia, customProductMediaMeta ?? productMediaMeta);\n}\n","import { repeatedElement } from \"@plasmicapp/host\";\nimport registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { ProductMediaProvider, useProduct } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\n\nconst placeholderImage =\n  \"https://static1.plasmic.app/commerce/lightweight-jacket-0.png\";\n\ninterface ProductMediaCollectionProps {\n  className: string;\n  media: React.ReactNode;\n}\n\nexport const productMediaCollectionMeta: ComponentMeta<ProductMediaCollectionProps> = {\n  name: \"plasmic-commerce-product-media-collection\",\n  displayName: \"Product Media Collection\",\n  props: {\n    media: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"component\",\n        name: \"plasmic-commerce-product-media\",\n      },\n      allowedComponents: [\"plasmic-commerce-product-media\"],\n    },\n  },\n  defaultStyles: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gridRowGap: \"8px\",\n    gridColumnGap: \"8px\",\n    padding: \"8px\",\n    maxWidth: \"100%\",\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductMediaCollection\",\n  providesData: true,\n};\n\nexport function ProductMediaCollection(props: ProductMediaCollectionProps) {\n  const { media, className } = props;\n\n  const product = useProduct();\n  return (\n    <div className={className}>\n      {product?.images.map((image, i) =>\n        repeatedElement(\n          i,\n          <ProductMediaProvider mediaIndex={i} children={media} />\n        )\n      )}\n    </div>\n  );\n}\n\nexport function registerProductMediaCollection(\n  loader?: Registerable,\n  customProductMediaCollectionMeta?: ComponentMeta<ProductMediaCollectionProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    ProductMediaCollection,\n    customProductMediaCollectionMeta ?? productMediaCollectionMeta\n  );\n}\n","import { Product } from \"../types/product\";\n\nexport const getProductPrice = (product: Product, variantId: string) =>\n  product.variants.find(variant => variant.id === variantId)?.price ?? product.price.value","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useProduct } from \"./contexts\";\nimport usePrice from \"./product/use-price\";\nimport { Registerable } from \"./registerable\";\nimport { getProductPrice } from \"./utils/get-product-price\";\n\ninterface ProductPriceProps {\n  className: string;\n}\n\nexport const productPriceMeta: ComponentMeta<ProductPriceProps> = {\n  name: \"plasmic-commerce-product-price\",\n  displayName: \"Product Price\",\n  props: {},\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductPriceComponent\",\n};\n\nexport function ProductPriceComponent(props: ProductPriceProps) {\n  const { className } = props;\n\n  const product = useProduct();\n  const form = useFormContext();\n\n  const watchProductVariant = form?.watch(\n    \"ProductVariant\",\n    product.price ?? \"\"\n  );\n\n  const { price } = usePrice({\n    amount: product ? getProductPrice(product, watchProductVariant) : 0,\n    currencyCode: product ? product.price.currencyCode! : \"USD\",\n  });\n\n  return <span className={className}>{price}</span>;\n}\n\nexport function registerProductPrice(\n  loader?: Registerable,\n  customProductPriceMeta?: ComponentMeta<ProductPriceProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    ProductPriceComponent,\n    customProductPriceMeta ?? productPriceMeta\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { Registerable } from \"./registerable\";\n\ninterface ProductQuantityProps {\n  className: string;\n  children?: React.ReactNode;\n}\n\nexport const productQuantityMeta: ComponentMeta<ProductQuantityProps> = {\n  name: \"plasmic-commerce-product-quantity\",\n  displayName: \"Product Quantity\",\n  props: {\n    children: {\n      type: \"slot\",\n      defaultValue: [\n        {\n          type: \"input\",\n          attrs: {\n            value: \"1\",\n          },\n        },\n      ],\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductQuantity\",\n};\n\nexport function ProductQuantity(props: ProductQuantityProps) {\n  const { className, children } = props;\n\n  const form = useFormContext();\n\n  return (\n    <div className={className}>\n      <Controller\n        name={\"ProductQuantity\"}\n        defaultValue={1}\n        control={form?.control}\n        render={({ field }) =>\n          React.isValidElement(children) ? (\n            React.cloneElement(children, {\n              ...children.props,\n              ...field,\n              name: \"ProductQuantity\",\n            })\n          ) : (\n            <></>\n          )\n        }\n      />\n    </div>\n  );\n}\n\nexport function registerProductQuantity(\n  loader?: Registerable,\n  customProductQuantityMeta?: ComponentMeta<ProductQuantityProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    ProductQuantity,\n    customProductQuantityMeta ?? productQuantityMeta\n  );\n}\n","import { repeatedElement } from \"@plasmicapp/host\";\nimport registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { ProductMediaProvider, useProduct } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\n\ninterface ProductSliderProps {\n  className: string;\n  slideContainer?: React.ReactNode;\n  thumbsContainer?: React.ReactNode;\n  thumbsVisible?: number;\n  slideSelected?: number;\n}\n\nexport const productSliderMeta: ComponentMeta<ProductSliderProps> = {\n  name: \"plasmic-commerce-product-slider\",\n  displayName: \"Product Slider\",\n  providesData: true,\n  props: {\n    thumbsVisible: {\n      type: \"number\",\n      description: \"Number of thumbs visible\",\n      defaultValue: 4,\n      defaultValueHint: 4,\n    },\n    slideContainer: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"vbox\",\n        children: [\n          {\n            type: \"component\",\n            name: \"plasmic-commerce-product-media\",\n          },\n        ],\n      },\n    },\n    thumbsContainer: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"hbox\",\n        children: [\n          {\n            type: \"component\",\n            name: \"plasmic-commerce-product-media\",\n          },\n        ],\n      },\n    },\n    slideSelected: {\n      type: \"number\",\n      defaultValue: 0,\n      defaultValueHint: 0,\n      description: \"Current slide selected\",\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductSlider\",\n};\n\nexport function ProductSlider(props: ProductSliderProps) {\n  const {\n    className,\n    slideContainer,\n    thumbsContainer,\n    thumbsVisible = 4,\n    slideSelected = 0,\n  } = props;\n\n  const product = useProduct();\n\n  const [selected, setSelected] = React.useState<number>(slideSelected);\n\n  const maximumLeft = Math.max(0, product.images.length - thumbsVisible);\n  const leftIndex = Math.min(maximumLeft, Math.max(0, selected - 1));\n  return (\n    <div className={className}>\n      {<ProductMediaProvider mediaIndex={selected} children={slideContainer} />}\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: `repeat(${thumbsVisible}, 1fr)`,\n        }}\n      >\n        {product.images\n          .slice(leftIndex, leftIndex + thumbsVisible)\n          .map((image, i) =>\n            repeatedElement(\n              i,\n              <ProductMediaProvider\n                mediaIndex={leftIndex + i}\n                children={thumbsContainer}\n                onClick={() => setSelected(leftIndex + i)}\n              />\n            )\n          )}\n      </div>\n    </div>\n  );\n}\n\nexport function registerProductSlider(\n  loader?: Registerable,\n  customProductSliderMeta?: ComponentMeta<ProductSliderProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    ProductSlider,\n    customProductSliderMeta ?? productSliderMeta\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { useProduct } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\n\ninterface ProductTextFieldProps {\n  className: string;\n  field: string;\n}\n\nexport const productTextFieldMeta: ComponentMeta<ProductTextFieldProps> = {\n  name: \"plasmic-commerce-product-text-field\",\n  displayName: \"Product Text Field\",\n  props: {\n    field: {\n      type: \"choice\",\n      options: [\"id\", \"name\", \"description\", \"sku\", \"slug\", \"path\"],\n    },\n  },\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductTextField\",\n};\n\nexport function ProductTextField(props: ProductTextFieldProps) {\n  const { className, field } = props;\n\n  const product = useProduct();\n\n  if (!product) {\n    return <span className={className}>Fake Product Field</span>;\n  }\n  if (!field) {\n    return <span className={className}>Unknown Product Field</span>;\n  }\n\n  let value;\n  if (field === \"description\") {\n    return (\n      <div\n        className={className}\n        dangerouslySetInnerHTML={{\n          __html: product.descriptionHtml ?? product.description,\n        }}\n      />\n    );\n  } else {\n    value = (product as any)[field];\n  }\n  return <span className={className}>{value}</span>;\n}\n\nexport function registerTextField(\n  loader?: Registerable,\n  customProductTextFieldMeta?: ComponentMeta<ProductTextFieldProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    ProductTextField,\n    customProductTextFieldMeta ?? productTextFieldMeta\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport { Controller, useForm, useFormContext } from \"react-hook-form\";\nimport { useProduct } from \"./contexts\";\nimport { Registerable } from \"./registerable\";\n\ninterface ProductVariantPickerProps {\n  className: string;\n}\n\nexport const productVariantPickerMeta: ComponentMeta<ProductVariantPickerProps> = {\n  name: \"plasmic-commerce-product-variant-picker\",\n  displayName: \"Product Variant Picker\",\n  props: {},\n  importPath: \"@plasmicpkgs/commerce\",\n  importName: \"ProductVariantPicker\",\n};\n\nexport function ProductVariantPicker(props: ProductVariantPickerProps) {\n  const { className } = props;\n\n  const product = useProduct();\n  const form = useFormContext() ?? useForm();\n\n  return (\n    <Controller\n      name={\"ProductVariant\"}\n      control={form?.control}\n      defaultValue={\n        product?.variants.find((v) => v.price === product.price.value)?.id\n      }\n      render={({ field }) => (\n        <select className={className} {...field}>\n          {product?.variants.map((variant) => (\n            <option value={variant.id}>{variant.name}</option>\n          )) ?? <option>Product Variant Placeholder</option>}\n        </select>\n      )}\n    />\n  );\n}\n\nexport function registerProductVariantPicker(\n  loader?: Registerable,\n  customProductVariantPickerMeta?: ComponentMeta<ProductVariantPickerProps>\n) {\n  const doRegisterComponent: typeof registerComponent = (...args) =>\n    loader ? loader.registerComponent(...args) : registerComponent(...args);\n  doRegisterComponent(\n    ProductVariantPicker,\n    customProductVariantPickerMeta ?? productVariantPickerMeta\n  );\n}\n","import { Registerable } from \"./registerable\";\nimport { registerAddToCartButton } from \"./registerAddToCartButton\";\nimport { registerCart } from \"./registerCart\";\nimport { registerCartProvider } from \"./registerCartProvider\";\nimport { registerCategoryCollection } from \"./registerCategoryCollection\";\nimport { registerCategoryField } from \"./registerCategoryField\";\nimport { registerCategoryLink } from \"./registerCategoryLink\";\nimport { registerCategoryMedia } from \"./registerCategoryMedia\";\nimport { registerProductBox } from \"./registerProductBox\";\nimport { registerProductCollection } from \"./registerProductCollection\";\nimport { registerProductLink } from \"./registerProductLink\";\nimport { registerProductMedia } from \"./registerProductMedia\";\nimport { registerProductMediaCollection } from \"./registerProductMediaCollection\";\nimport { registerProductPrice } from \"./registerProductPrice\";\nimport { registerProductQuantity } from \"./registerProductQuantity\";\nimport { registerProductSlider } from \"./registerProductSlider\";\nimport { registerTextField } from \"./registerProductTextField\";\nimport { registerProductVariantPicker } from \"./registerProductVariantPicker\";\n\nexport { CommerceAPIConfig } from \"./api/index\";\nexport * from \"./cart/use-add-item\";\nexport { default as useAddItem } from \"./cart/use-add-item\";\nexport * from \"./cart/use-cart\";\nexport { default as useCart } from \"./cart/use-cart\";\nexport * from \"./cart/use-remove-item\";\nexport { default as useRemoveItem } from \"./cart/use-remove-item\";\nexport * from \"./cart/use-update-item\";\nexport { default as useUpdateItem } from \"./cart/use-update-item\";\nexport * from \"./commerce\";\nexport * from \"./product/use-product\";\nexport { default as useProduct } from \"./product/use-product\";\nexport * from \"./product/use-search\";\nexport { default as useSearch } from \"./product/use-search\";\nexport * from \"./registerable\";\nexport * from \"./registerAddToCartButton\";\nexport * from \"./registerCart\";\nexport * from \"./registerCartProvider\";\nexport * from \"./registerCategoryCollection\";\nexport * from \"./registerCategoryField\";\nexport * from \"./registerCategoryLink\";\nexport * from \"./registerCategoryMedia\";\nexport * from \"./registerProductBox\";\nexport * from \"./registerProductCollection\";\nexport * from \"./registerProductLink\";\nexport * from \"./registerProductMedia\";\nexport * from \"./registerProductMediaCollection\";\nexport * from \"./registerProductPrice\";\nexport * from \"./registerProductQuantity\";\nexport * from \"./registerProductSlider\";\nexport * from \"./registerProductTextField\";\nexport * from \"./registerProductVariantPicker\";\nexport * from \"./site/use-brands\";\nexport { default as useBrands } from \"./site/use-brands\";\nexport * from \"./site/use-categories\";\nexport { default as useCategories } from \"./site/use-categories\";\nexport * as CartType from \"./types/cart\";\nexport * from \"./types/product\";\nexport * as ProductTypes from \"./types/product\";\nexport * as SiteTypes from \"./types/site\";\nexport { defaultProduct as ProductPlaceholder } from \"./utils/default-product\";\nexport * from \"./utils/errors\";\nexport * from \"./utils/types\";\nexport { globalActionsRegistrations, CartActionsProvider } from \"./contexts\";\n\nexport function registerAll(loader?: Registerable) {\n  registerProductCollection(loader);\n  registerTextField(loader);\n  registerProductPrice(loader);\n  registerProductMedia(loader);\n  registerProductMediaCollection(loader);\n  registerCart(loader);\n  registerCartProvider(loader);\n  registerAddToCartButton(loader);\n  registerProductQuantity(loader);\n  registerProductVariantPicker(loader);\n  registerProductBox(loader);\n  registerProductSlider(loader);\n  registerProductLink(loader);\n  registerCategoryCollection(loader);\n  registerCategoryField(loader);\n  registerCategoryLink(loader);\n  registerCategoryMedia(loader);\n}\n"],"names":["Commerce","createContext","CoreCommerceProvider","_ref","provider","children","providerRef","useRef","fetcherRef","fetcher","_providerRef$current","current","locale","cartCookie","cfg","useMemo","React","Provider","value","useCommerce","useContext","CommerceError","_Error","message","code","errors","error","_extends","_this","call","_inheritsLoose","_wrapNativeSuper","Error","ValidationError","_CommerceError","options","_this2","FetcherError","_CommerceError2","_this3","status","useFetcher","_useCommerce","_providerRef$current$","useProvider","useHook","fn","useSWRHook","hook","useData","ctx","input","fetcherFn","swrOptions","hookInput","Array","isArray","Object","entries","response","useMutablePlasmicQueryData","opts","fetchOptions","url","query","method","concat","map","e","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_len","args","_key","_args","arguments","wrap","_context","prev","next","length","reduce","obj","val","i","fetch","abrupt","sent","t0","console","stop","_x","_x2","_x3","apply","defineProperty","get","undefined","data","enumerable","_ctx$input","useMutationHook","useCallback","_temp","SWRFetcher","mutationFetcher","_ref2","body","_provider$cart","cart","useAddItem","useRemoveItem","useUpdateItem","defaultProduct","id","name","description","descriptionHtml","images","alt","variants","price","currencyCode","ProductProvider","product","methods","useForm","DataProvider","key","FormProvider","useProduct","useSelector","PrimaryCategoryContext","CategoryProvider","category","useCategoryContext","ProductMediaProvider","_ref3","mediaIndex","onClick","cloneElement","isValidElement","addToCartButtonMeta","displayName","props","type","defaultValue","importPath","importName","AddToCartButton","form","useFormContext","addItem","addToCart","_form$getValues$Produ","quantity","_form$getValues$Produ2","variantId","getValues","isNaN","productId","registerAddToCartButton","loader","customAddToCartButtonMeta","registerComponent","doRegisterComponent","cartId","useCart","_hook$fetcher","context","Cookies","formatPrice","amount","Intl","NumberFormat","style","currency","format","usePrice","baseAmount","hasDiscount","formatDiscount","discount","basePrice","formatVariantPrice","cartMeta","field","hideIfIsEmpty","CartComponent","_data$lineItems$lengt","className","_data$totalPrice","totalPrice","_data$currency$code","lineItems","registerCart","customCartMeta","cartProviderMeta","providesData","CartProvider","_useCart","registerCartProvider","customCartProviderMeta","_provider$site","site","useCategories","categoryCollectionMeta","styles","width","minWidth","emptyMessage","loadingMessage","_ctx$categories$map","categories","_category$depth","label","repeat","depth","noLayout","noAutoRepeat","defaultStyles","display","gridTemplateColumns","gridRowGap","padding","maxWidth","CategoryCollection","selectedCategory","setControlContextData","inEditor","PlasmicCanvasContext","_useCategories","allCategories","isAllCategoriesLoading","isLoading","_useCategories2","categoryId","addIsEmptyField","firstCategoryNotEmpty","find","isEmpty","firstCategoryNotEmptyIndex","_categories$findIndex","findIndex","renderedData","repeatedElement","includes","Fragment","registerCategoryCollection","customCategoryCollectionMeta","categoryFieldMeta","CategoryField","registerCategoryField","customCategoryFieldMeta","categoryLinkMeta","linkDest","defaultValueHint","CategoryLink","href","_step","regex","regexAll","RegExp","matches","_linkDest$match","match","resolvedLink","_iterator","_createForOfIteratorHelperLoose","done","slice","replace","resolveLink","color","textDecoration","registerCategoryLink","customCategoryLinkMeta","categoryMediaMeta","CategoryMedia","forwardRef","ref","_props$mediaIndex","image","src","_image$url","loading","registerCategoryMedia","customCategoryMediaMeta","_provider$products","products","useSearch","productBoxMeta","modalTitle","onSearch","showInput","_ctx$products$map","_product$images","_product$slug","imgUrl","slug","footer","ProductBox","_React$useState","useState","productSearch","setProductSearch","allProducts","search","debounce","_useProduct","registerProductBox","customProductBoxMeta","useBrands","productCollectionMeta","count","_ctx$categoryCtx","categoryCtx","readOnly","includeSubCategories","hidden","_ctx$features","features","brand","_ctx$brands$map","brands","entityId","sort","gridColumnGap","ProductCollection","isCategoriesLoading","_useBrands","isBrandsLoading","_useSearch","_categoryCtx$id","brandId","isSearchLoading","extraFeatures","primaryCategory","registerProductCollection","customProductCollectionMeta","productLinkMeta","ProductLink","registerProductLink","customProductLinkMeta","productMediaMeta","min","_","inMediaContext","ProductMedia","mediaContext","registerProductMedia","customProductMediaMeta","productMediaCollectionMeta","media","allowedComponents","ProductMediaCollection","registerProductMediaCollection","customProductMediaCollectionMeta","getProductPrice","_product$variants$fin","_product$variants$fin2","variant","productPriceMeta","ProductPriceComponent","watchProductVariant","watch","_product$price","_usePrice","registerProductPrice","customProductPriceMeta","productQuantityMeta","attrs","ProductQuantity","Controller","control","render","registerProductQuantity","customProductQuantityMeta","productSliderMeta","thumbsVisible","slideContainer","thumbsContainer","slideSelected","ProductSlider","_props$thumbsVisible","_props$slideSelected","selected","setSelected","maximumLeft","Math","max","leftIndex","registerProductSlider","customProductSliderMeta","productTextFieldMeta","ProductTextField","_product$descriptionH","dangerouslySetInnerHTML","__html","registerTextField","customProductTextFieldMeta","productVariantPickerMeta","ProductVariantPicker","_useFormContext","v","_product$variants$map","registerProductVariantPicker","customProductVariantPickerMeta","removeItem","updateItem","actions","lineItemId","GlobalActionsProvider","contextName","globalContextName","_objectWithoutPropertiesLoose","_excluded","parameters"],"mappings":"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"}