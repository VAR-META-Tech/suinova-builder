{"version":3,"file":"commerce-local.cjs.production.min.js","sources":["../src/fetcher.ts","../src/utils/cart.ts","../src/const.ts","../src/utils/sort-product.ts","../src/provider.ts","../src/cart/use-cart.tsx","../src/cart/use-add-item.tsx","../src/cart/use-update-item.tsx","../src/cart/use-remove-item.tsx","../src/product/use-search.tsx","../src/product/use-product.tsx","../src/site/use-categories.ts","../src/site/use-brands.ts","../src/local.ts","../src/registerCommerceProvider.tsx","../src/index.tsx"],"sourcesContent":["import { Fetcher } from '@plasmicpkgs/commerce';\n\nexport const fetcher: Fetcher = async () => {\n  console.log('FETCHER')\n  const res = await fetch('./data.json')\n  if (res.ok) {\n    const { data } = await res.json()\n    return data\n  }\n  throw res\n}\n","import { CartType } from \"@plasmicpkgs/commerce\";\nimport Cookies from \"js-cookie\";\nimport { LOCAL_CART_ID, LOCAL_CART_OBJ } from \"../const\";\n\nconst options: Cookies.CookieAttributes = {\n  sameSite: \"none\",\n  secure: true,\n};\n\nexport const createCart: () => CartType.Cart = () => {\n  const cart = {\n    id: \"\",\n    createdAt: \"\",\n    currency: { code: \"USD\" },\n    taxesIncluded: false,\n    lineItems: [],\n    lineItemsSubtotalPrice: 0,\n    subtotalPrice: 0,\n    totalPrice: 0,\n  };\n\n  const cartId = Date.now().toString();\n\n  Cookies.set(LOCAL_CART_ID, cartId);\n  Cookies.set(\n    LOCAL_CART_OBJ,\n    JSON.stringify({\n      id: cartId,\n      cart,\n    })\n  );\n\n  return cart;\n};\n\nexport const getCart: (cartId?: string) => CartType.Cart = (\n  cartId?: string\n) => {\n  cartId = cartId ?? Cookies.get(LOCAL_CART_ID);\n  const cartStr = Cookies.get(LOCAL_CART_OBJ);\n  const cart = cartStr ? JSON.parse(cartStr) : undefined;\n\n  if (!cart || cart.id !== cartId) {\n    return createCart();\n  } else {\n    return cart.cart;\n  }\n};\n\nexport const cartUpdate = (newCart: CartType.Cart) => {\n  Cookies.set(\n    LOCAL_CART_OBJ,\n    JSON.stringify({\n      id: Cookies.get(LOCAL_CART_ID),\n      cart: newCart,\n    })\n  );\n\n  return newCart;\n};\n","export const LOCAL_CART_OBJ = \"localCartObj\";\n\nexport const LOCAL_CART_ID = \"localCartId\";\n","import data from \"../data.json\";\n\nexport const sortProduct = (\n  a: typeof data.products[0],\n  b: typeof data.products[0],\n  sortKey: string\n) => {\n  switch (sortKey) {\n    case \"price-asc\":\n      return a.price.value < b.price.value ? -1 : 1;\n    case \"price-desc\":\n      return a.price.value < b.price.value ? 1 : -1;\n    case \"trending-desc\":\n      return a.id.localeCompare(b.id);\n    case \"latest-desc\":\n      return a.id.localeCompare(b.id) * -1;\n    default:\n      return 0;\n  }\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/local/src\n  Changes: Removed authentication, customer and wishlist hooks\n*/\nimport { fetcher } from './fetcher'\nimport { handler as useCart } from './cart/use-cart'\nimport { handler as useAddItem } from './cart/use-add-item'\nimport { handler as useUpdateItem } from './cart/use-update-item'\nimport { handler as useRemoveItem } from './cart/use-remove-item'\nimport { handler as useSearch } from './product/use-search'\nimport { handler as useProduct } from './product/use-product'\nimport { handler as useCategories } from './site/use-categories'\nimport { handler as useBrands } from './site/use-brands'\nimport { LOCAL_CART_ID } from './const'\nexport const localProvider = {\n  locale: 'en-us',\n  cartCookie: LOCAL_CART_ID,\n  fetcher: fetcher,\n  cart: { useCart, useAddItem, useUpdateItem, useRemoveItem },\n  products: { useSearch, useProduct },\n  site: { useCategories, useBrands }\n}\n\nexport type LocalProvider = typeof localProvider\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/local/src\n  Changes:\n    - Before: just returned an empty cart.\n    - Now: Read cart from local storage.\n*/\nimport { SWRHook, useCart, UseCart } from \"@plasmicpkgs/commerce\";\nimport React from \"react\";\nimport { getCart } from \"../utils/cart\";\n\nexport default useCart as UseCart<typeof handler>;\n\nexport const handler: SWRHook<any> = {\n  fetchOptions: {\n    query: \"use-cart\",\n  },\n  async fetcher({ input, options, fetch }) {\n    return getCart(input.cartId);\n  },\n  useHook: ({ useData }) => (input) => {\n    const response = useData({\n      swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n    });\n    return React.useMemo(\n      () =>\n        Object.create(response, {\n          isEmpty: {\n            get() {\n              return (response.data?.lineItems.length ?? 0) <= 0;\n            },\n            enumerable: true,\n          },\n        }),\n      [response]\n    );\n  },\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/local/src\n  Changes:\n    - Implemented a local cart\n    - The items are added to local storage.\n*/\nimport {\n  CommerceError,\n  MutationHook,\n  useAddItem,\n  UseAddItem,\n} from \"@plasmicpkgs/commerce\";\nimport { useCallback } from \"react\";\nimport data from \"../data.json\";\nimport { cartUpdate, getCart } from \"../utils/cart\";\nimport useCart from \"./use-cart\";\n\nexport default useAddItem as UseAddItem<typeof handler>;\nexport const handler: MutationHook<any> = {\n  fetchOptions: {\n    query: \"use-add-item\",\n  },\n  async fetcher({ input: item, options, fetch }) {\n    if (\n      item.quantity &&\n      (!Number.isInteger(item.quantity) || item.quantity! < 1)\n    ) {\n      throw new CommerceError({\n        message: \"The item quantity has to be a valid integer greater than 0\",\n      });\n    }\n\n    const lineItem = {\n      variantId: item.variantId,\n      quantity: item.quantity ?? 1,\n    };\n\n    const cart = getCart();\n    for (const product of data.products) {\n      const variant = (product.variants as any[]).find(\n        (variant) => variant.id === item.variantId\n      );\n      if (variant) {\n        cart.totalPrice += variant.price * (item.quantity ?? 1);\n        cart.currency.code = product.price.currencyCode;\n        const currentLineItem = cart.lineItems.find(\n          (item) => item.variantId === lineItem.variantId\n        );\n        if (!currentLineItem) {\n          cart.lineItems.push(lineItem as any);\n        } else {\n          currentLineItem.quantity += lineItem.quantity;\n        }\n      }\n    }\n\n    return cartUpdate(cart);\n  },\n  useHook: ({ fetch }) => () => {\n    const { mutate } = useCart();\n    return useCallback(\n      async function addItem(input) {\n        const data = await fetch({ input });\n        await mutate(data, false);\n        return data;\n      },\n      [fetch, mutate]\n    );\n  },\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/local/src\n  Changes: None\n*/\nimport { MutationHook } from '@plasmicpkgs/commerce'\nimport { useUpdateItem,\n  UseUpdateItem,\n} from '@plasmicpkgs/commerce'\n\nexport default useUpdateItem as UseUpdateItem<any>\n\nexport const handler: MutationHook<any> = {\n  fetchOptions: {\n    query: '',\n  },\n  async fetcher({ input, options, fetch }) {},\n  useHook:\n    ({ fetch }) =>\n    () => {\n      return async function addItem() {\n        return {}\n      }\n    },\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/local/src\n  Changes: None\n*/\nimport { MutationHook } from '@plasmicpkgs/commerce'\nimport {useRemoveItem,\n  UseRemoveItem,\n} from '@plasmicpkgs/commerce'\n\nexport default useRemoveItem as UseRemoveItem<typeof handler>\n\nexport const handler: MutationHook<any> = {\n  fetchOptions: {\n    query: '',\n  },\n  async fetcher({ input, options, fetch }) {},\n  useHook:\n    ({ fetch }) =>\n    () => {\n      return async function removeItem(input) {\n        return {}\n      }\n    },\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/local/src\n  Changes: None\n*/\nimport { SWRHook, useSearch, UseSearch } from \"@plasmicpkgs/commerce\";\nimport data from \"../data.json\";\nimport { sortProduct } from \"../utils/sort-product\";\nconst useSearchTyped: UseSearch<typeof handler> = useSearch;\nexport default useSearchTyped;\n\nexport const handler: SWRHook<any> = {\n  fetchOptions: {\n    query: \"use-search\",\n  },\n  async fetcher({ input, options, fetch }) {\n    const { search, categoryId, brandId, sort, count } = input;\n\n    let products = data.products;\n\n    if (categoryId) {\n      const category = data.categories.find(\n        (category) => category.id === categoryId\n      );\n      products = data.products.filter((product) =>\n        category?.products?.includes(product.id)\n      );\n    }\n\n    if (brandId) {\n      products = products.filter(\n        (product) =>\n          product.vendor.replace(/\\s+/g, \"-\").toLowerCase() ===\n          `${brandId}`.toLowerCase()\n      );\n    }\n\n    if (search) {\n      products = products.filter(\n        (product) =>\n          product.name.toLowerCase().includes(`${search}`.toLowerCase()) ||\n          product.slug.toLowerCase().includes(`${search}`.toLowerCase())\n      );\n    }\n\n    if (sort) {\n      products = products.sort((a, b) => sortProduct(a, b, sort));\n    }\n\n    return {\n      products: products.slice(0, count),\n      found: products.length > 0,\n    };\n  },\n  useHook:\n    ({ useData }) =>\n    (input = {}) => {\n      return useData({\n        input: [\n          [\"search\", input.search],\n          [\"prefixSearch\", input.prefixSearch],\n          [\"categoryId\", input.categoryId],\n          [\"brandId\", input.brandId],\n          [\"sort\", input.sort],\n          [\"locale\", input.locale],\n          [\"count\", input.count],\n        ],\n        swrOptions: {\n          revalidateOnFocus: false,\n          ...input.swrOptions,\n        },\n      });\n    },\n};\n","import { SWRHook, useProduct, UseProduct } from \"@plasmicpkgs/commerce\";\nimport data from \"../data.json\";\nexport default useProduct as UseProduct<typeof handler>;\n\nexport const handler: SWRHook<any> = {\n  fetchOptions: {\n    query: \"use-product\",\n  },\n  async fetcher({ input, options, fetch }) {\n    const { id } = input;\n\n    return (\n      data.products.find((product) =>\n        [product.id, product.slug].includes(id)\n      ) ?? null\n    );\n  },\n  useHook: ({ useData }) => (input = {}) => {\n    return useData({\n      input: [[\"id\", input.id]],\n      swrOptions: {\n        revalidateOnFocus: false,\n        ...input.swrOptions,\n      },\n    });\n  },\n};\n","import { SWRHook, useCategories, UseCategories } from \"@plasmicpkgs/commerce\";\nimport React from \"react\";\nimport data from \"../data.json\";\nexport default useCategories as UseCategories<typeof handler>;\n\nexport const handler: SWRHook<any> = {\n  fetchOptions: {\n    query: \"use-categories\",\n  },\n  async fetcher({ input, options, fetch }) {\n    const { categoryId } = input;\n    if (!categoryId) {\n      return data.categories;\n    }\n    const category = data.categories.find(\n      (category) => category.id === categoryId\n    );\n    return category ? [category] : [];\n  },\n  useHook: ({ useData }) => (input) => {\n    const response = useData({\n      input: [[\"categoryId\", input?.categoryId]],\n      swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n    });\n    return React.useMemo(\n      () =>\n        Object.create(response, {\n          isEmpty: {\n            get() {\n              return (response.data?.length ?? 0) <= 0;\n            },\n            enumerable: true,\n          },\n        }),\n      [response]\n    );\n  },\n};\n","import { SWRHook, useBrands, UseBrands } from \"@plasmicpkgs/commerce\";\nimport React from \"react\";\nimport data from \"../data.json\";\nexport default useBrands as UseBrands<typeof handler>;\n\nexport const handler: SWRHook<any> = {\n  fetchOptions: {\n    query: \"use-brands\",\n  },\n  async fetcher({ input, options, fetch }) {\n    const vendorsStrings = data.products.map((product) => product.vendor);\n    return Array.from(new Set(vendorsStrings).values()).map((v) => {\n      const id = v.replace(/\\s+/g, \"-\").toLowerCase();\n      return {\n        entityId: id,\n        name: v,\n        path: `brands/${id}`,\n      };\n    });\n  },\n  useHook: ({ useData }) => (input) => {\n    const response = useData({\n      swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n    });\n    return React.useMemo(\n      () =>\n        Object.create(response, {\n          isEmpty: {\n            get() {\n              return (response.data?.length ?? 0) <= 0;\n            },\n            enumerable: true,\n          },\n        }),\n      [response]\n    );\n  },\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/local/src\n  Changes: Add export data\n*/\nexport * from \"./registerable\";\nexport { localProvider, data };\nexport type { LocalProvider };\nimport {\n  getCommerceProvider,\n  useCommerce as useCoreCommerce,\n} from \"@plasmicpkgs/commerce\";\nimport data from \"./data.json\";\nimport { localProvider, LocalProvider } from \"./provider\";\n\nexport const CommerceProvider = getCommerceProvider(localProvider);\n\nexport const useCommerce = () => useCoreCommerce<LocalProvider>();\n","import { GlobalContextMeta } from \"@plasmicapp/host\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport React from \"react\";\nimport { CommerceProvider } from \"./local\";\nimport { Registerable } from \"./registerable\";\n\ninterface CommerceProviderProps {\n  children?: React.ReactNode;\n}\n\nexport const commerceProviderMeta: GlobalContextMeta<CommerceProviderProps> = {\n  name: \"plasmic-commerce-local-provider\",\n  displayName: \"Local Provider\",\n  props: {},\n  importPath: \"@plasmicpkgs/commerce-local\",\n  importName: \"CommerceProviderComponent\",\n};\n\nfunction CommerceProviderComponent(props: CommerceProviderProps) {\n  return <CommerceProvider>{props.children}</CommerceProvider>;\n}\n\nexport function registerCommerceProvider(\n  loader?: Registerable,\n  customCommerceProviderMeta?: GlobalContextMeta<CommerceProviderProps>\n) {\n  const doRegisterComponent: typeof registerGlobalContext = (...args) =>\n    loader\n      ? loader.registerGlobalContext(...args)\n      : registerGlobalContext(...args);\n  doRegisterComponent(\n    CommerceProviderComponent,\n    customCommerceProviderMeta ?? commerceProviderMeta\n  );\n}\n","import { Registerable } from \"./registerable\";\nimport { registerCommerceProvider } from \"./registerCommerceProvider\";\nexport * from \"./registerable\";\n\nexport * from \"./local\";\n\nexport function registerAll(loader?: Registerable) {\n  registerCommerceProvider(loader);\n}\n\nexport { registerCommerceProvider };"],"names":["getCart","cartId","_cartId","Cookies","get","cartStr","cart","JSON","parse","undefined","id","createdAt","currency","code","taxesIncluded","lineItems","lineItemsSubtotalPrice","subtotalPrice","totalPrice","Date","now","toString","set","stringify","createCart","sortProduct","a","b","sortKey","price","value","localeCompare","localProvider","locale","cartCookie","fetcher","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","console","log","fetch","sent","ok","json","abrupt","data","stop","apply","arguments","useCart","fetchOptions","query","input","useHook","_ref2","useData","response","swrOptions","_extends","revalidateOnFocus","React","useMemo","Object","create","isEmpty","_response$data$lineIt","_response$data","length","enumerable","useAddItem","item","quantity","Number","isInteger","CommerceError","message","lineItem","variantId","_item$quantity","_iterator","_createForOfIteratorHelperLoose","products","_step","done","variant","product","variants","find","_item$quantity2","currencyCode","currentLineItem","push","newCart","mutate","useCallback","_addItem","_callee2","_context2","_x","useUpdateItem","useRemoveItem","_removeItem","useSearch","search","brandId","sort","count","categoryId","category","categories","filter","_category$products","includes","vendor","replace","toLowerCase","name","slug","slice","found","prefixSearch","useProduct","_data$products$find","site","useCategories","_response$data$length","useBrands","vendorsStrings","map","Array","from","Set","values","v","entityId","path","CommerceProvider","getCommerceProvider","commerceProviderMeta","displayName","props","importPath","importName","CommerceProviderComponent","children","registerCommerceProvider","loader","customCommerceProviderMeta","registerGlobalContext","doRegisterComponent","useCoreCommerce"],"mappings":"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"}