{"version":3,"file":"commerce-saleor.cjs.production.min.js","sources":["../src/utils/handle-fetch-response.ts","../src/utils/get-search-variables.ts","../src/utils/get-sort-variables.ts","../src/utils/get-checkout-id.ts","../src/const.ts","../src/utils/checkout-create.ts","../src/utils/normalize.ts","../src/utils/checkout-to-cart.ts","../src/utils/throw-user-errors.ts","../src/utils/queries/collection-many.ts","../src/utils/queries/collection-one.ts","../src/cart/use-cart.tsx","../src/cart/use-add-item.tsx","../src/cart/use-remove-item.tsx","../src/cart/use-update-item.tsx","../src/site/use-categories.tsx","../src/site/use-brands.tsx","../src/product/use-search.tsx","../src/utils/queries/product-one-by-id.ts","../src/product/use-product.tsx","../src/fetcher.ts","../src/utils/customer-token.ts","../src/saleor.tsx","../src/provider.ts","../src/registerCommerceProvider.tsx","../src/index.tsx"],"sourcesContent":["/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None \n*/\n\nimport { FetcherError } from '@plasmicpkgs/commerce';\n\nexport function getError(errors: any[], status: number) {\n  errors = errors ?? [{ message: 'Failed to fetch Saleor API' }]\n  return new FetcherError({ errors, status })\n}\n\nexport async function getAsyncError(res: Response) {\n  const data = await res.json()\n  return getError(data.errors, res.status)\n}\n\nconst handleFetchResponse = async (res: Response) => {\n  if (res.ok) {\n    const { data, errors } = await res.json()\n\n    if (errors && errors.length) {\n      throw getError(errors, res.status)\n    }\n\n    return data\n  }\n\n  throw await getAsyncError(res)\n}\n\nexport default handleFetchResponse\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None \n*/\n\nimport { getSortVariables } from './get-sort-variables'\nimport type { SearchProductsInput } from '../product/use-search'\n\nexport const getSearchVariables = ({ brandId, search, categoryId, sort, count }: SearchProductsInput) => {\n  const sortBy = {\n    field: 'NAME',\n    direction: 'ASC',\n    ...getSortVariables(sort, !!categoryId),\n    channel: 'default-channel',\n  }\n  return {\n    categoryId,\n    filter: { search },\n    sortBy,\n    first: count\n  }\n}\n\nexport default getSearchVariables\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None \n*/\n\nexport const getSortVariables = (sort?: string, isCategory: boolean = false) => {\n  let output = {}\n  switch (sort) {\n    case 'price-asc':\n      output = {\n        field: 'PRICE',\n        direction: 'ASC',\n      }\n      break\n    case 'price-desc':\n      output = {\n        field: 'PRICE',\n        direction: 'DESC',\n      }\n      break\n    case 'trending-desc': //default\n      output = {} \n      break\n    case 'latest-desc':\n      output = {\n        field: 'DATE',\n        direction: 'DESC',\n      }\n      break\n  }\n  return output\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None \n*/\n\nimport Cookies from 'js-cookie'\nimport { CHECKOUT_ID_COOKIE } from '../const'\n\nconst getCheckoutId = (id?: string) => {\n  const r = Cookies.get(CHECKOUT_ID_COOKIE)?.split(':') || []\n  return { checkoutId: r[0], checkoutToken: r[1] }\n}\n\nexport default getCheckoutId\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: Removed api_url \n*/\n\nexport const API_CHANNEL = 'default-channel'\nexport const CHECKOUT_ID_COOKIE = 'saleor.CheckoutID'\nexport const SALEOR_TOKEN = 'saleor.Token'\nexport const SALEOR_CRSF_TOKEN = 'saleor.CSRFToken'\n","import Cookies from 'js-cookie'\n\nimport * as mutation from './mutations'\nimport { CheckoutCreate } from '../schema'\nimport { CHECKOUT_ID_COOKIE } from '../const'\n\nexport const checkoutCreate = async (fetch: any): Promise<CheckoutCreate> => {\n  const data = await fetch({ query: mutation.CheckoutCreate })\n  const checkout = data.checkoutCreate?.checkout\n  const checkoutId = checkout?.id\n  const checkoutToken = checkout?.token\n\n  const value = `${checkoutId}:${checkoutToken}`\n\n  if (checkoutId) {\n    const options: Cookies.CookieAttributes = {\n      expires: 60 * 60 * 24 * 30,\n      sameSite: \"none\",\n      secure: true,\n    }\n    Cookies.set(CHECKOUT_ID_COOKIE, value, options)\n  }\n\n  return checkout\n}\n\nexport default checkoutCreate","/* eslint-disable */\n/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None\n*/\n\nimport { Product } from \"@plasmicpkgs/commerce\";\n\nimport {\n  Product as SaleorProduct,\n  Checkout,\n  CheckoutLine,\n  Money,\n  ProductVariant,\n  Collection,\n} from \"../schema\";\nimport { Category } from \"../types/site\";\nimport type { Cart, LineItem } from \"../types\";\n\n// TODO: Check nextjs-commerce bug if no images are added for a product\nconst placeholderImg = \"/product-img-placeholder.svg\";\n\nconst money = ({ amount, currency }: Money) => {\n  return {\n    value: +amount,\n    currencyCode: currency || \"USD\",\n  };\n};\n\nconst normalizeProductOptions = (options: ProductVariant[]) => {\n  return options\n    ?.map((option) => option?.attributes)\n    .flat(1)\n    .reduce<any>((acc, x) => {\n      if (\n        acc.find(({ displayName }: any) => displayName === x.attribute.name)\n      ) {\n        return acc.map((opt: any) => {\n          return opt.displayName === x.attribute.name\n            ? {\n                ...opt,\n                values: [\n                  ...opt.values,\n                  ...x.values.map((value: any) => ({\n                    label: value?.name,\n                  })),\n                ],\n              }\n            : opt;\n        });\n      }\n\n      return acc.concat({\n        __typename: \"MultipleChoiceOption\",\n        displayName: x.attribute.name,\n        variant: \"size\",\n        values: x.values.map((value: any) => ({\n          label: value?.name,\n        })),\n      });\n    }, []);\n};\n\nconst normalizeProductVariants = (variants: ProductVariant[]) => {\n  return variants?.map((variant) => {\n    const { id, sku, name, pricing } = variant;\n    const price = pricing?.price?.net && money(pricing.price.net)?.value;\n\n    return {\n      id,\n      name,\n      sku: sku ?? id,\n      price,\n      listPrice: price,\n      requiresShipping: true,\n      options: normalizeProductOptions([variant]),\n    };\n  });\n};\n\nexport function normalizeProduct(productNode: SaleorProduct): Product {\n  const {\n    id,\n    name,\n    media = [],\n    variants,\n    description,\n    slug,\n    pricing,\n    ...rest\n  } = productNode;\n\n  const product = {\n    id,\n    name,\n    vendor: \"\",\n    description: description\n      ? JSON.parse(description)?.blocks[0]?.data.text\n      : \"\",\n    path: `/${slug}`,\n    slug: slug?.replace(/^\\/+|\\/+$/g, \"\"),\n    price: (pricing?.priceRange?.start?.net &&\n      money(pricing.priceRange.start.net)) || {\n      value: 0,\n      currencyCode: \"USD\",\n    },\n    // TODO: Check nextjs-commerce bug if no images are added for a product\n    images: media?.length ? media : [{ url: placeholderImg }],\n    variants:\n      variants && variants.length > 0\n        ? normalizeProductVariants(variants as ProductVariant[])\n        : [],\n    options:\n      variants && variants.length > 0\n        ? normalizeProductOptions(variants as ProductVariant[])\n        : [],\n    ...rest,\n  };\n\n  return product as Product;\n}\n\nexport function normalizeCart(checkout: Checkout): Cart {\n  const lines = checkout.lines as CheckoutLine[];\n  const lineItems: LineItem[] =\n    lines.length > 0 ? lines?.map<LineItem>(normalizeLineItem) : [];\n\n  return {\n    id: checkout.id,\n    customerId: \"\",\n    email: \"\",\n    createdAt: checkout.created,\n    currency: {\n      code: checkout.totalPrice?.currency!,\n    },\n    taxesIncluded: false,\n    lineItems,\n    lineItemsSubtotalPrice: checkout.subtotalPrice?.gross?.amount!,\n    subtotalPrice: checkout.subtotalPrice?.gross?.amount!,\n    totalPrice: checkout.totalPrice?.gross.amount!,\n    discounts: [],\n  };\n}\n\nfunction normalizeLineItem({ id, variant, quantity }: CheckoutLine): LineItem {\n  return {\n    id,\n    variantId: String(variant?.id),\n    productId: String(variant?.product?.id),\n    name: `${variant.product.name}`,\n    quantity,\n    variant: {\n      id: String(variant?.id),\n      sku: variant?.sku ?? \"\",\n      name: variant?.name!,\n      image: {\n        url: variant?.media![0] ? variant?.media![0].url : placeholderImg,\n      },\n      requiresShipping: false,\n      price: variant?.pricing?.price?.gross.amount!,\n      listPrice: 0,\n    },\n    path: String(variant?.product?.slug),\n    discounts: [],\n    options: [],\n  };\n}\nexport const normalizeCategory = ({\n  name,\n  slug,\n  id,\n}: Collection): Category => ({\n  id,\n  name,\n  slug,\n  path: `/${slug}`,\n});\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None \n*/\n\nimport { Cart } from '../types'\nimport { CommerceError } from '@plasmicpkgs/commerce'\n\nimport {\n  CheckoutLinesAdd,\n  CheckoutLinesUpdate,\n  CheckoutCreate,\n  CheckoutError,\n  Checkout,\n  Maybe,\n  CheckoutLineDelete,\n} from '../schema'\n\nimport { normalizeCart } from './normalize'\nimport throwUserErrors from './throw-user-errors'\n\nexport type CheckoutQuery = {\n  checkout: Checkout\n  errors?: Array<CheckoutError>\n}\n\nexport type CheckoutPayload =\n  | CheckoutLinesAdd\n  | CheckoutLinesUpdate\n  | CheckoutCreate\n  | CheckoutQuery\n  | CheckoutLineDelete\n\nconst checkoutToCart = (checkoutPayload?: Maybe<CheckoutPayload>): Cart | undefined => {\n  if (!checkoutPayload) {\n    throw new CommerceError({\n      message: 'Missing checkout payload from response',\n    })\n  }\n\n  const checkout = checkoutPayload?.checkout\n  if (checkoutPayload?.errors?.length === 1 && checkoutPayload.errors[0].code === \"PRODUCT_UNAVAILABLE_FOR_PURCHASE\") {\n    console.error(checkoutPayload.errors[0]);\n    return undefined;\n  }\n\n  if (checkoutPayload?.errors) {\n    throwUserErrors(checkoutPayload?.errors)\n  }\n\n  if (!checkout) {\n    throw new CommerceError({\n      message: 'Missing checkout object from response',\n    })\n  }\n\n  return normalizeCart(checkout)\n}\n\nexport default checkoutToCart\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None \n*/\n\nimport { ValidationError } from '@plasmicpkgs/commerce';\nimport { CheckoutError, CheckoutErrorCode, AppError, AccountError, AccountErrorCode } from '../schema'\n\nexport type UserErrors = Array<CheckoutError | AccountError | AppError>\n\nexport type UserErrorCode = CheckoutErrorCode | AccountErrorCode | null | undefined\n\nexport const throwUserErrors = (errors?: UserErrors) => {\n  if (errors && errors.length) {\n    throw new ValidationError({\n      errors: errors.map(({ code, message }) => ({\n        code: code ?? 'validation_error',\n        message: message || '',\n      })),\n    })\n  }\n}\n\nexport default throwUserErrors\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None \n*/\n\nexport const CollectionMany = /* GraphQL */ `\n  query CollectionMany( $channel: String = \"default-channel\") {\n    collections(first:100, channel: $channel) {\n      edges {\n        node {\n          id\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None \n*/\n\nimport * as fragment from '../fragments'\n\nexport const CollectionOne = /* GraphQL */ `\n  query getProductsFromCollection($categoryId: ID!, $first: Int = 100, $channel: String = \"default-channel\") {\n    collection(id: $categoryId, channel: $channel) {\n      id\n      name\n      slug\n      products(first: $first) {\n        ...ProductConnection\n      }\n    }\n  }\n  ${fragment.ProductConnection}\n`\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes:None\n*/\n\nimport { useMemo } from \"react\";\nimport { useCart as useCommerceCart, UseCart } from \"@plasmicpkgs/commerce\";\n\nimport { SWRHook } from \"@plasmicpkgs/commerce\";\nimport { checkoutCreate, checkoutToCart, getCheckoutId } from \"../utils\";\nimport * as query from \"../utils/queries\";\nimport { GetCartHook } from \"../types/cart\";\n\nexport default useCommerceCart as UseCart<typeof handler>;\n\nexport const handler: SWRHook<GetCartHook> = {\n  fetchOptions: {\n    query: query.CheckoutOne,\n  },\n  async fetcher({ input: { cartId: checkoutId }, options, fetch }) {\n    let checkout;\n\n    if (checkoutId) {\n      const checkoutId = getCheckoutId().checkoutToken;\n      const data = await fetch({\n        ...options,\n        variables: { checkoutId },\n      });\n\n      checkout = data;\n    }\n\n    if (checkout?.completedAt || !checkoutId) {\n      checkout = await checkoutCreate(fetch);\n    }\n\n    return checkoutToCart(checkout);\n  },\n  useHook:\n    ({ useData }) =>\n    (input) => {\n      const response = useData({\n        swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n      });\n      return useMemo(\n        () =>\n          Object.create(response, {\n            isEmpty: {\n              get() {\n                return (response.data?.lineItems.length ?? 0) <= 0;\n              },\n              enumerable: true,\n            },\n          }),\n        [response]\n      );\n    },\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes:None\n*/\nimport { useCallback } from \"react\";\nimport type { MutationHook } from \"@plasmicpkgs/commerce\";\nimport { CommerceError } from \"@plasmicpkgs/commerce\";\nimport { useAddItem, UseAddItem } from \"@plasmicpkgs/commerce\";\nimport useCart from \"./use-cart\";\n\nimport * as mutation from \"../utils/mutations\";\n\nimport { getCheckoutId, checkoutToCart } from \"../utils\";\n\nimport { Mutation, MutationCheckoutLinesAddArgs } from \"../schema\";\nimport { AddItemHook } from \"../types/cart\";\n\nexport default useAddItem as UseAddItem<typeof handler>;\n\nexport const handler: MutationHook<AddItemHook> = {\n  fetchOptions: { query: mutation.CheckoutLineAdd },\n  async fetcher({ input: item, options, fetch }) {\n    if (\n      item.quantity &&\n      (!Number.isInteger(item.quantity) || item.quantity! < 1)\n    ) {\n      throw new CommerceError({\n        message: \"The item quantity has to be a valid integer greater than 0\",\n      });\n    }\n\n    const { checkoutLinesAdd } = await fetch<\n      Mutation,\n      MutationCheckoutLinesAddArgs\n    >({\n      ...options,\n      variables: {\n        checkoutId: getCheckoutId().checkoutId,\n        lineItems: [\n          {\n            variantId: item.variantId,\n            quantity: item.quantity ?? 1,\n          },\n        ],\n      },\n    });\n\n    return checkoutToCart(checkoutLinesAdd);\n  },\n  useHook:\n    ({ fetch }) =>\n    () => {\n      const { mutate } = useCart();\n\n      return useCallback(\n        async function addItem(input) {\n          const data = await fetch({ input });\n          if (data) {\n            await mutate(data, false);\n          } else {\n            await mutate();\n          }\n          return data;\n        },\n        [fetch, mutate]\n      );\n    },\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None\n*/\n\nimport type {\n  HookFetcherContext,\n  MutationHookContext,\n} from \"@plasmicpkgs/commerce\";\nimport { useRemoveItem, UseRemoveItem } from \"@plasmicpkgs/commerce\";\nimport { useCallback } from \"react\";\nimport { Mutation, MutationCheckoutLineDeleteArgs } from \"../schema\";\nimport { LineItem, RemoveItemHook } from \"../types/cart\";\nimport { checkoutToCart, getCheckoutId } from \"../utils\";\nimport * as mutation from \"../utils/mutations\";\nimport useCart from \"./use-cart\";\n\nexport default useRemoveItem as UseRemoveItem<typeof handler>;\n\nexport const handler = {\n  fetchOptions: { query: mutation.CheckoutLineDelete },\n  async fetcher({\n    input: { itemId },\n    options,\n    fetch,\n  }: HookFetcherContext<RemoveItemHook>) {\n    const data = await fetch<Mutation, MutationCheckoutLineDeleteArgs>({\n      ...options,\n      variables: {\n        checkoutId: getCheckoutId().checkoutId,\n        lineId: itemId,\n      },\n    });\n    return checkoutToCart(data.checkoutLineDelete);\n  },\n  useHook: ({ fetch }: MutationHookContext<RemoveItemHook>) => <\n    T extends LineItem | undefined = undefined\n  >() => {\n    const { mutate } = useCart();\n\n    return useCallback(\n      async function removeItem(input: { id: string }) {\n        const data = await fetch({ input: { itemId: input.id } });\n        await mutate(data, false);\n\n        return data;\n      },\n      [fetch, mutate]\n    );\n  },\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None\n*/\n\nimport type {\n  HookFetcherContext,\n  MutationHookContext,\n} from \"@plasmicpkgs/commerce\";\nimport {\n  useUpdateItem,\n  UseUpdateItem,\n  ValidationError,\n} from \"@plasmicpkgs/commerce\";\nimport debounce from \"debounce\";\nimport { useCallback } from \"react\";\n\nimport { Mutation, MutationCheckoutLinesUpdateArgs } from \"../schema\";\nimport type { LineItem } from \"../types/cart\";\nimport { checkoutToCart, getCheckoutId } from \"../utils\";\nimport useCart from \"./use-cart\";\nimport { handler as removeItemHandler } from \"./use-remove-item\";\n\nimport * as mutation from \"../utils/mutations\";\n\nimport type { UpdateItemHook } from \"../types/cart\";\n\nexport type UpdateItemActionInput<T = any> = T extends LineItem\n  ? Partial<UpdateItemHook[\"actionInput\"]>\n  : UpdateItemHook[\"actionInput\"];\n\nexport default useUpdateItem as UseUpdateItem<typeof handler>;\n\nexport const handler = {\n  fetchOptions: { query: mutation.CheckoutLineUpdate },\n  async fetcher({\n    input: { itemId, item },\n    options,\n    fetch,\n  }: HookFetcherContext<UpdateItemHook>) {\n    if (Number.isInteger(item.quantity)) {\n      // Also allow the update hook to remove an item if the quantity is lower than 1\n      if (item.quantity! < 1) {\n        return removeItemHandler.fetcher({\n          options: removeItemHandler.fetchOptions,\n          input: { itemId },\n          fetch,\n        });\n      }\n    } else if (item.quantity) {\n      throw new ValidationError({\n        message: \"The item quantity has to be a valid integer\",\n      });\n    }\n\n    const checkoutId = getCheckoutId().checkoutId;\n    const { checkoutLinesUpdate } = await fetch<\n      Mutation,\n      MutationCheckoutLinesUpdateArgs\n    >({\n      ...options,\n      variables: {\n        checkoutId,\n        lineItems: [\n          {\n            itemId,\n            quantity: item.quantity,\n          },\n        ],\n      },\n    });\n\n    return checkoutToCart(checkoutLinesUpdate);\n  },\n  useHook:\n    ({ fetch }: MutationHookContext<UpdateItemHook>) =>\n    <T extends LineItem | undefined = undefined>(\n      ctx: {\n        item?: T;\n        wait?: number;\n      } = {}\n    ) => {\n      const { item } = ctx;\n      const { mutate } = useCart() as any;\n\n      return useCallback(\n        debounce(async (input: UpdateItemActionInput<T>) => {\n          const itemId = input.id ?? item?.id;\n          if (!itemId) {\n            throw new ValidationError({\n              message: \"Invalid input used for this operation\",\n            });\n          }\n\n          const data = await fetch({\n            input: {\n              item: {\n                quantity: input.quantity,\n              },\n              itemId,\n            },\n          });\n          await mutate(data, false);\n          return data;\n        }, ctx.wait ?? 500),\n        [fetch, mutate]\n      );\n    },\n};\n","import { SWRHook } from \"@plasmicpkgs/commerce\";\nimport { UseCategories, useCategories } from \"@plasmicpkgs/commerce\";\nimport { useMemo } from \"react\";\nimport { CollectionCountableEdge } from \"../schema\";\nimport { GetCategoriesHook } from \"../types/site\";\nimport { CollectionMany, CollectionOne, normalizeCategory } from \"../utils\";\n\nexport default useCategories as UseCategories<typeof handler>;\n\nexport const handler: SWRHook<GetCategoriesHook> = {\n  fetchOptions: {\n    query: CollectionMany,\n  },\n  async fetcher({ input, options, fetch }) {\n    const { categoryId } = input;\n    if (!categoryId) {\n      const data = await fetch({\n        query: CollectionMany,\n        variables: {\n          first: 250,\n        },\n      })\n\n      return (\n        data.collections?.edges?.map(({ node }: CollectionCountableEdge) =>\n          normalizeCategory(node)\n        ) ?? []\n      );\n    } else {\n      const data = await fetch({\n        query: CollectionOne,\n        variables: { categoryId },\n      });\n      return !!data?.collection ? [normalizeCategory(data?.collection)] : [];\n    }\n  },\n  useHook:\n    ({ useData }) =>\n      (input) => {\n        const response = useData({\n          input: [[\"categoryId\", input?.categoryId]],\n          swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n        });\n        return useMemo(\n          () =>\n            Object.create(response, {\n              isEmpty: {\n                get() {\n                  return (response.data?.length ?? 0) <= 0;\n                },\n                enumerable: true,\n              },\n            }),\n          [response]\n        );\n      },\n};","import { SWRHook } from \"@plasmicpkgs/commerce\";\nimport { UseBrands, useBrands } from \"@plasmicpkgs/commerce\";\nimport { useMemo } from \"react\";\nimport {\n  GetAllProductPathsQuery,\n  GetAllProductPathsQueryVariables,\n} from \"../schema\";\nimport { GetBrandsHook } from \"../types/site\";\nimport { getAllProductVendors } from \"../utils\";\n\nexport default useBrands as UseBrands<typeof handler>;\n\nexport const handler: SWRHook<GetBrandsHook> = {\n  fetchOptions: {\n    query: getAllProductVendors,\n  },\n  async fetcher({ input, options, fetch }) {\n    return []; // brands it's not available on saleor\n  },\n  useHook:\n    ({ useData }) =>\n    (input) => {\n      const response = useData({\n        swrOptions: { revalidateOnFocus: false, ...input?.swrOptions },\n      });\n      return useMemo(\n        () =>\n          Object.create(response, {\n            isEmpty: {\n              get() {\n                return (response.data?.length ?? 0) <= 0;\n              },\n              enumerable: true,\n            },\n          }),\n        [response]\n      );\n    },\n};\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes:None\n*/\n\nimport { Product, SWRHook, useSearch, UseSearch } from \"@plasmicpkgs/commerce\";\n\nimport { ProductCountableEdge } from \"../schema\";\nimport { getSearchVariables, normalizeProduct } from \"../utils\";\n\nimport { SearchProductsHook } from \"@plasmicpkgs/commerce\";\nimport * as query from \"../utils/queries\";\n\nconst useSearchTyped: UseSearch<typeof handler> = useSearch;\nexport default useSearchTyped;\n\nexport type SearchProductsInput = {\n  search?: string;\n  categoryId?: string | number;\n  brandId?: string | number;\n  sort?: string;\n  count?: number;\n};\n\nexport type SearchProductsData = {\n  products: Product[];\n  found: boolean;\n};\n\nexport const handler: SWRHook<SearchProductsHook> = {\n  fetchOptions: {\n    query: query.ProductMany,\n  },\n  async fetcher({ input, options, fetch }) {\n    const { categoryId, brandId } = input;\n\n    const data = await fetch({\n      query: categoryId ? query.CollectionOne : options.query,\n      method: options?.method,\n      variables: getSearchVariables(input),\n    });\n\n    let edges;\n\n    if (categoryId) {\n      edges = data.collection?.products?.edges ?? [];\n      // FIXME @zaiste, no `vendor` in Saleor\n      // if (brandId) {\n      //   edges = edges.filter(\n      //     ({ node: { vendor } }: ProductCountableEdge) =>\n      //       vendor.replace(/\\s+/g, '-').toLowerCase() === brandId\n      //   )\n      // }\n    } else {\n      edges = data.products?.edges ?? [];\n    }\n\n    return {\n      products: edges.map(({ node }: ProductCountableEdge) =>\n        normalizeProduct(node)\n      ),\n      found: !!edges.length,\n    };\n  },\n  useHook:\n    ({ useData }) =>\n    (input = {}) => {\n      return useData({\n        input: [\n          [\"search\", input.search],\n          [\"categoryId\", input.categoryId],\n          [\"brandId\", input.brandId],\n          [\"sort\", input.sort],\n          [\"count\", input.count],\n        ],\n        swrOptions: {\n          revalidateOnFocus: false,\n          ...input.swrOptions,\n        },\n      });\n    },\n};\n","export const ProductOneById = /* GraphQL */ `\n  query ProductOneById($id: ID!, $channel: String = \"default-channel\") {\n    product(id: $id, channel: $channel) {\n\n      slug\n      name\n      description\n      pricing {\n        priceRange {\n          start {\n            net {\n              amount\n            }\n          }\n        }\n      }\n      variants {\n        id\n        name\n        attributes {\n          attribute {\n            name\n          }\n          values {\n            name\n          }\n        }\n        pricing {\n          price {\n            net {\n              amount\n              currency\n            }\n          }\n        }\n      }\n      media {\n        url\n        alt\n      }\n    }\n  }`","import { SWRHook } from \"@plasmicpkgs/commerce\";\nimport { useProduct, UseProduct } from \"@plasmicpkgs/commerce\";\n\nimport { normalizeProduct } from \"../utils\";\nimport type { GetProductHook } from \"@plasmicpkgs/commerce\";\n\nimport { ProductOneById } from \"../utils/queries/product-one-by-id\";\nimport { ProductOneBySlug } from '../utils/queries/product-one-by-slug';\n\nexport type GetProductInput = {\n  id?: string;\n  slug?: string\n};\n\nexport default useProduct as UseProduct<typeof handler>;\n\nexport const handler: SWRHook<GetProductHook> = {\n  fetchOptions: {\n    query: ProductOneById,\n  },\n  async fetcher({ input, options, fetch }) {\n    const { id } = input;\n    if (!id) {\n      return null;\n    }\n    const data = await fetch({\n      query: ProductOneById,\n      variables: { id },\n    });\n    if (!data.product) {\n      const response = await fetch({\n        query: ProductOneBySlug,\n        variables: { slug: id }\n      })\n      return response.product ? normalizeProduct(response.product) : null;\n    }\n    return data.product ? normalizeProduct(data.product) : null;\n  },\n  useHook:\n    ({ useData }) =>\n      (input = {}) => {\n        return useData({\n          input: [[\"id\", input.id]],\n          swrOptions: {\n            revalidateOnFocus: false,\n            ...input.swrOptions,\n          },\n        });\n      },\n};\n","\n/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: \n    - Before: The saleor_api_url was defined at build time. \n      So this file just implemented a fetcher with these parameters defined.\n    - Now: The saleor_api_url is defined at runtime. \n      So we have to get the fetcher using these parameters.\n*/\n\n\nimport { Fetcher } from '@plasmicpkgs/commerce'\nimport { getToken, handleFetchResponse } from './utils'\n\nexport const getFetcher:\n  (saleorApiUrl: string) => Fetcher =\n  (saleorApiUrl) => {\n    return async ({\n      url = saleorApiUrl,\n      method = 'POST',\n      query,\n      variables,\n    }) => {\n      const { locale, ...vars } = variables ?? {}\n      const token = getToken()\n      return handleFetchResponse(\n        await fetch(url, {\n          method,\n          body: JSON.stringify({ query, variables: vars }),\n          headers: {\n            Authorization: `JWT ${token}`,\n            'Content-Type': 'application/json',\n          },\n        })\n      )\n    }\n  }\n\n\n\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: None \n*/\n\nimport Cookies, { CookieAttributes } from 'js-cookie'\nimport * as Const from '../const'\n\nexport const getToken = () => Cookies.get(Const.SALEOR_TOKEN)\nexport const setToken = (token?: string, options?: CookieAttributes) => {\n  setCookie(Const.SALEOR_TOKEN, token, options)\n}\n\nexport const getCSRFToken = () => Cookies.get(Const.SALEOR_CRSF_TOKEN)\nexport const setCSRFToken = (token?: string, options?: CookieAttributes) => {\n  setCookie(Const.SALEOR_CRSF_TOKEN, token, options)\n}\n\nexport const getCheckoutToken = () => Cookies.get(Const.CHECKOUT_ID_COOKIE)\nexport const setCheckoutToken = (token?: string, options?: CookieAttributes) => {\n  setCookie(Const.CHECKOUT_ID_COOKIE, token, options)\n}\n\nconst setCookie = (name: string, token?: string, options?: CookieAttributes) => {\n  if (!token) {\n    Cookies.remove(name)\n  } else {\n    Cookies.set(name, token, options ?? { expires: 60 * 60 * 24 * 30 })\n  }\n}\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes: \n    - Added saleor_api_url parameter.\n*/\nimport {\n  getCommerceProvider as getCoreCommerceProvider,\n  useCommerce as useCoreCommerce,\n} from \"@plasmicpkgs/commerce\";\nimport { getSaleorProvider, SaleorProvider } from \"./provider\";\n\nexport type { SaleorProvider };\n\nexport const useCommerce = () => useCoreCommerce<SaleorProvider>();\nexport const getCommerceProvider = (saleorApiUrl: string) =>\n  getCoreCommerceProvider(getSaleorProvider(saleorApiUrl));\n","/*\n  Forked from https://github.com/vercel/commerce/tree/main/packages/saleor/src\n  Changes:\n    - Removed customer and auth hooks.\n    - Added saleor_api_url parameters.\n*/\n\nimport { CHECKOUT_ID_COOKIE } from './const'\nimport { handler as useCart } from './cart/use-cart'\nimport { handler as useAddItem } from './cart/use-add-item'\nimport { handler as useUpdateItem } from './cart/use-update-item'\nimport { handler as useRemoveItem } from './cart/use-remove-item'\nimport { handler as useCategories } from './site/use-categories'\nimport { handler as useBrands } from './site/use-brands'\nimport { handler as useSearch } from './product/use-search'\nimport { handler as useProduct } from './product/use-product'\nimport { Fetcher } from '@plasmicpkgs/commerce'\nimport { getFetcher } from './fetcher'\n\nexport const getSaleorProvider = (saleorApiUrl: string,) => ({\n  locale: 'en-us',\n  cartCookie: CHECKOUT_ID_COOKIE,\n  fetcher: getFetcher(saleorApiUrl),\n  cart: { useCart, useAddItem, useUpdateItem, useRemoveItem },\n  products: { useSearch, useProduct },\n  site: { useCategories, useBrands }\n})\n\n\n\n\n\nexport type SaleorProvider = {\n  locale: string;\n  cartCookie: string;\n  fetcher: Fetcher;\n  cart: {\n    useCart: typeof useCart;\n    useAddItem: typeof useAddItem;\n    useUpdateItem: typeof useUpdateItem;\n    useRemoveItem: typeof useRemoveItem\n  };\n  products: {\n    useSearch: typeof useSearch\n    useProduct: typeof useProduct\n  };\n  site: {\n    useCategories: typeof useCategories\n    useBrands: typeof useBrands\n  }\n}","import { GlobalContextMeta } from \"@plasmicapp/host\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  CartActionsProvider,\n  globalActionsRegistrations,\n} from \"@plasmicpkgs/commerce\";\nimport React from \"react\";\nimport { Registerable } from \"./registerable\";\nimport { getCommerceProvider } from \"./saleor\";\n\ninterface CommerceProviderProps {\n  children?: React.ReactNode;\n  saleorApiUrl: string;\n}\n\nconst globalContextName = \"plasmic-commerce-saleor-provider\";\n\nexport const commerceProviderMeta: GlobalContextMeta<CommerceProviderProps> = {\n  name: globalContextName,\n  displayName: \"Saleor Provider\",\n  props: {\n    saleorApiUrl: {\n      type: \"string\",\n      defaultValue: \"https://vercel.saleor.cloud/graphql/\",\n    },\n  },\n  ...{ globalActions: globalActionsRegistrations },\n  importPath: \"@plasmicpkgs/commerce-saleor\",\n  importName: \"CommerceProviderComponent\",\n};\n\nexport function CommerceProviderComponent(props: CommerceProviderProps) {\n  const { saleorApiUrl, children } = props;\n\n  const CommerceProvider = React.useMemo(\n    () => getCommerceProvider(saleorApiUrl),\n    [saleorApiUrl]\n  );\n\n  return (\n    <CommerceProvider>\n      <CartActionsProvider globalContextName={globalContextName}>\n        {children}\n      </CartActionsProvider>\n    </CommerceProvider>\n  );\n}\n\nexport function registerCommerceProvider(\n  loader?: Registerable,\n  customCommerceProviderMeta?: GlobalContextMeta<CommerceProviderProps>\n) {\n  const doRegisterComponent: typeof registerGlobalContext = (...args) =>\n    loader\n      ? loader.registerGlobalContext(...args)\n      : registerGlobalContext(...args);\n  doRegisterComponent(\n    CommerceProviderComponent,\n    customCommerceProviderMeta ?? commerceProviderMeta\n  );\n}\n","import { Registerable } from \"./registerable\";\nimport {\n  registerCommerceProvider,\n  CommerceProviderComponent,\n} from \"./registerCommerceProvider\";\nexport * from \"./registerable\";\n\nexport * from \"./saleor\";\n\nexport function registerAll(loader?: Registerable) {\n  registerCommerceProvider(loader);\n}\n\nexport { registerCommerceProvider, CommerceProviderComponent };\n"],"names":["getError","errors","status","_errors","message","FetcherError","getAsyncError","_x","_getAsyncError","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","res","wrap","_context2","prev","next","json","abrupt","sent","stop","handleFetchResponse","_ref","_callee","_yield$res$json","data","_context","ok","length","_x2","getSearchVariables","count","categoryId","filter","search","sortBy","_extends","field","direction","sort","isCategory","output","getSortVariables","channel","first","getCheckoutId","id","r","_Cookies$get","Cookies","get","split","checkoutId","checkoutToken","checkoutCreate","fetch","_data$checkoutCreate","checkout","value","query","token","set","expires","sameSite","secure","money","amount","currencyCode","currency","normalizeProductOptions","options","map","option","attributes","flat","reduce","acc","x","find","_ref2","displayName","attribute","name","opt","values","concat","label","__typename","variant","normalizeProductVariants","variants","sku","pricing","price","_pricing$price","net","_money","listPrice","requiresShipping","normalizeProduct","productNode","_productNode$media","media","description","slug","rest","_objectWithoutPropertiesLoose","_excluded","vendor","_JSON$parse","JSON","parse","blocks","text","path","replace","_pricing$priceRange","priceRange","start","images","url","normalizeLineItem","_ref3","quantity","variantId","String","productId","_variant$product","product","_variant$sku","image","_variant$pricing","gross","_variant$product2","discounts","normalizeCategory","_ref4","checkoutToCart","checkoutPayload","CommerceError","_checkoutPayload$erro","code","ValidationError","throwUserErrors","lines","lineItems","customerId","email","createdAt","created","_checkout$totalPrice","totalPrice","taxesIncluded","lineItemsSubtotalPrice","_checkout$subtotalPri","subtotalPrice","_checkout$subtotalPri2","_checkout$totalPrice2","normalizeCart","console","error","CollectionMany","CollectionOne","handler","fetchOptions","fetcher","input","cartId","variables","_checkout","completedAt","useHook","useData","response","swrOptions","revalidateOnFocus","useMemo","Object","create","isEmpty","_response$data$lineIt","_response$data","enumerable","item","Number","isInteger","_item$quantity","checkoutLinesAdd","mutate","useCart","useCallback","_addItem","itemId","lineId","checkoutLineDelete","_removeItem","_ref$input","removeItemHandler","checkoutLinesUpdate","ctx","debounce","_input$id","_ctx$wait","wait","_data$collections$edg","_data$collections","collections","edges","node","collection","_response$data$length","method","_data$collection$prod","_data$collection","products","_data$products$edges","_data$products","found","brandId","ProductOneById","getFetcher","saleorApiUrl","_ref$url","_ref$method","vars","locale","t0","body","stringify","headers","Authorization","Content-Type","t1","getCommerceProvider","getCoreCommerceProvider","cartCookie","cart","useAddItem","useUpdateItem","useRemoveItem","useSearch","useProduct","site","useCategories","useBrands","getSaleorProvider","commerceProviderMeta","props","type","defaultValue","globalActions","globalActionsRegistrations","importPath","importName","CommerceProviderComponent","children","CommerceProvider","React","CartActionsProvider","globalContextName","registerCommerceProvider","loader","customCommerceProviderMeta","registerGlobalContext","doRegisterComponent","useCoreCommerce"],"mappings":"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"}