{"version":3,"file":"react-youtube.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\nimport YouTubeImpl, { YouTubeProps as YouTubeImplProps } from \"react-youtube\";\nimport type { Options } from \"youtube-player/dist/types\";\n\ntype PlayerVars = Exclude<Options[\"playerVars\"], undefined>;\nexport type YouTubeProps = YouTubeImplProps &\n  {\n    [prop in keyof PlayerVars]:\n      | PlayerVars[prop]\n      | (prop extends typeof booleanParams[number] ? boolean : never);\n  } & { mute?: boolean };\nconst playerParams = [\n  \"autoplay\",\n  \"cc_load_policy\",\n  \"color\",\n  \"controls\",\n  \"disablekb\",\n  \"enablejsapi\",\n  \"end\",\n  \"fs\",\n  \"hl\",\n  \"iv_load_policy\",\n  \"list\",\n  \"listType\",\n  \"loop\",\n  \"modestbranding\",\n  \"origin\",\n  \"playlist\",\n  \"playsinline\",\n  \"rel\",\n  \"start\",\n] as const;\n\nconst booleanParams = [\n  \"autoplay\",\n  \"cc_load_policy\",\n  \"controls\",\n  \"disablekb\",\n  \"fs\",\n  \"loop\",\n  \"modestbranding\",\n  \"playsinline\",\n  \"rel\",\n] as const;\n\nconst booleanParamsSet = new Set<string>(booleanParams);\n\nconst YouTube = React.forwardRef<YouTubeImpl, YouTubeProps>(\n  (props: YouTubeProps, ref) => {\n    const internalRef = React.useRef<YouTubeImpl | null>(null);\n\n    const onRef = React.useCallback(\n      (player: YouTubeImpl | null) => {\n        internalRef.current = player;\n        if (ref) {\n          if (typeof ref === \"function\") {\n            ref(player);\n          } else {\n            ref.current = player;\n          }\n        }\n      },\n      [ref]\n    );\n\n    React.useEffect(() => {\n      if (props.mute !== undefined) {\n        if (props.mute) {\n          internalRef.current?.getInternalPlayer()?.mute();\n        } else {\n          internalRef.current?.getInternalPlayer()?.unMute();\n        }\n      }\n    }, [props.mute, internalRef]);\n\n    const finalProps = { ...props };\n    for (const prop of playerParams) {\n      if (prop in finalProps) {\n        const value = finalProps[prop];\n        delete finalProps[prop];\n        if (!finalProps.opts) {\n          finalProps.opts = {};\n        }\n        if (!finalProps.opts.playerVars) {\n          finalProps.opts.playerVars = {};\n        }\n        if (booleanParamsSet.has(prop)) {\n          if (prop === \"cc_load_policy\" || prop === \"modestbranding\") {\n            // undefined or 1\n            if (value) {\n              finalProps.opts.playerVars[prop] = 1;\n            } else {\n              delete finalProps.opts.playerVars[prop];\n            }\n          } else {\n            // 0 or 1\n            finalProps.opts.playerVars[prop] = (value ? 1 : 0) as any;\n          }\n        } else {\n          finalProps.opts.playerVars[prop] = value as any;\n        }\n      }\n    }\n    return (\n      <YouTubeImpl\n        ref={onRef}\n        {...finalProps}\n        iframeClassName={props.className}\n      />\n    );\n  }\n);\n\nexport const youtubeMeta: ComponentMeta<YouTubeProps> = {\n  name: \"hostless-youtube\",\n  displayName: \"YouTube\",\n  importName: \"YouTube\",\n  importPath: \"@plasmicpkgs/react-youtube\",\n  props: {\n    videoId: {\n      type: \"string\",\n      defaultValue: \"R6MeLqRQzYw\",\n      displayName: \"Video ID\",\n      description: \"The ID for the YouTube video\",\n    },\n    autoplay: {\n      type: \"boolean\",\n      displayName: \"Auto Play\",\n      description:\n        \"Whether the video should automatically start playing when the player loads\",\n      defaultValueHint: false,\n      hidden: (props) => !props.mute,\n    },\n    cc_load_policy: {\n      type: \"boolean\",\n      displayName: \"Show Captions\",\n      description:\n        \"Whether the captions should be shown by default, even if the user has turned captions off\",\n      defaultValueHint: false,\n    },\n    start: {\n      type: \"number\",\n      displayName: \"Start\",\n      description:\n        \"The video should begin at this amount of seconds from the start of the video\",\n      defaultValueHint: 0,\n    },\n    end: {\n      type: \"number\",\n      displayName: \"End\",\n      description:\n        \"Stop playing the video after this amount of seconds (measured from the start of the video)\",\n    },\n    color: {\n      type: \"choice\",\n      displayName: \"Color\",\n      options: [\"red\", \"white\"],\n      description:\n        \"The color used in the display bar to highlight how much of the video the viewer has already seen\",\n      defaultValueHint: \"red\",\n    },\n    controls: {\n      type: \"boolean\",\n      displayName: \"Show Controls\",\n      description:\n        \"Whether the YouTube video player controls should be displayed\",\n      defaultValueHint: true,\n    },\n    disablekb: {\n      type: \"boolean\",\n      displayName: \"Disable Keyboard\",\n      description: \"Whether the keyboard controls should be disabled\",\n      defaultValueHint: false,\n    },\n    fs: {\n      type: \"boolean\",\n      displayName: \"FullScreen Button\",\n      description: \"Whether the fullscreen button should be displayed\",\n      defaultValueHint: true,\n    },\n    loop: {\n      type: \"boolean\",\n      displayName: \"Loop\",\n      description: \"Whether the video should be played again after it finishes\",\n      defaultValueHint: false,\n    },\n    modestbranding: {\n      type: \"boolean\",\n      displayName: \"Hide Logo\",\n      description: \"Hide the YouTube logo in the control bar\",\n      defaultValueHint: false,\n    },\n    mute: {\n      type: \"boolean\",\n      displayName: \"Mute\",\n      description: \"Whether the video should be muted\",\n      defaultValueHint: false,\n    },\n    playsinline: {\n      type: \"boolean\",\n      displayName: \"Play Inline\",\n      description:\n        \"Whether the video should be played inline or fullscreen on iOS\",\n      defaultValueHint: false,\n    },\n    rel: {\n      type: \"boolean\",\n      displayName: \"Related Videos\",\n      description:\n        \"Whether it should show related videos when the video ends (if false, it shows other videos from the same channel)\",\n      defaultValueHint: true,\n    },\n  },\n  isDefaultExport: true,\n  defaultStyles: {\n    height: \"390px\",\n    width: \"640px\",\n    maxHeight: \"100%\",\n    maxWidth: \"100%\",\n  },\n};\n\nexport function registerYouTube(\n  loader?: { registerComponent: typeof registerComponent },\n  customYouTubeMeta?: ComponentMeta<YouTubeProps>\n) {\n  if (loader) {\n    loader.registerComponent(YouTube, customYouTubeMeta ?? youtubeMeta);\n  } else {\n    registerComponent(YouTube, customYouTubeMeta ?? youtubeMeta);\n  }\n}\n\nexport default YouTube;\n"],"names":["playerParams","booleanParams","booleanParamsSet","Set","YouTube","React","forwardRef","props","ref","internalRef","useRef","onRef","useCallback","player","current","useEffect","mute","undefined","_internalRef$current","getInternalPlayer","_internalRef$current2","unMute","finalProps","_extends","_i","_playerParams","length","prop","value","opts","playerVars","has","YouTubeImpl","iframeClassName","className","youtubeMeta","name","displayName","importName","importPath","videoId","type","defaultValue","description","autoplay","defaultValueHint","hidden","cc_load_policy","start","end","color","options","controls","disablekb","fs","loop","modestbranding","playsinline","rel","isDefaultExport","defaultStyles","height","width","maxHeight","maxWidth","registerYouTube","loader","customYouTubeMeta","registerComponent"],"mappings":"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"}