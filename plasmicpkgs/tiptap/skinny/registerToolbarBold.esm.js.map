{"version":3,"file":"registerToolbarBold.esm.js","sources":["../src/toolbar/registerToolbarBold.tsx"],"sourcesContent":["import { useCurrentEditor } from \"@tiptap/react\";\nimport React from \"react\";\nimport { useTiptapContext } from \"../contexts\";\nimport { TIPTAP_COMPONENT_NAME } from \"../registerTiptap\";\nimport { Registerable, registerComponentHelper } from \"../utils\";\n\nexport interface ToolbarBoldProps {\n  className: string;\n  children: React.ReactNode;\n  selectedClassName: string;\n  toolbarBoldScopeClassName: string;\n}\n\nexport function ToolbarBold(props: ToolbarBoldProps) {\n  const { editor } = useCurrentEditor();\n  const { bold } = useTiptapContext();\n\n  const { className, children, toolbarBoldScopeClassName } = props;\n\n  if (!editor || !bold) return null;\n\n  return (\n    <div\n      // data-active attribute is used here to increase the priority/specificity of the selectedClassName prop styles\n      data-active={editor.isActive(\"bold\") ? true : false}\n      className={`${className} ${toolbarBoldScopeClassName}`}\n      style={{ cursor: \"pointer\" }}\n      role=\"button\"\n      onClick={() => editor.chain().focus().toggleMark(\"bold\").run()}\n    >\n      {children}\n    </div>\n  );\n}\nToolbarBold.displayName = \"ToolbarBold\";\n\nexport function registerToolbarBold(loader?: Registerable) {\n  registerComponentHelper(loader, ToolbarBold, {\n    name: `${TIPTAP_COMPONENT_NAME}-toolbar-bold`,\n    displayName: \"Tiptap Bold Toolbar Option\",\n    defaultStyles: {\n      width: \"hug\",\n      padding: \"5px\",\n    },\n    props: {\n      children: {\n        type: \"slot\",\n        hidePlaceholder: true,\n        defaultValue: [\n          {\n            type: \"img\",\n            src: \"https://static1.plasmic.app/bold.svg\",\n          },\n        ],\n      },\n      toolbarBoldScopeClassName: {\n        type: \"styleScopeClass\",\n        scopeName: \"toolbarBold\",\n      } as any,\n      selectedClassName: {\n        type: \"class\",\n        displayName: \"Tool Selected\",\n        selectors: [\n          {\n            selector: \":toolbarBold[data-active=true]\",\n            label: \"Base\",\n          },\n        ],\n      },\n    },\n    importName: \"ToolbarBold\",\n    importPath: \"@plasmicpkgs/tiptap/skinny/registerToolbarBold\",\n    parentComponentName: TIPTAP_COMPONENT_NAME,\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAaO,SAAS,YAAY,KAAyB,EAAA;AACnD,EAAM,MAAA,EAAE,MAAO,EAAA,GAAI,gBAAiB,EAAA,CAAA;AACpC,EAAM,MAAA,EAAE,IAAK,EAAA,GAAI,gBAAiB,EAAA,CAAA;AAElC,EAAA,MAAM,EAAE,SAAA,EAAW,QAAU,EAAA,yBAAA,EAA8B,GAAA,KAAA,CAAA;AAE3D,EAAI,IAAA,CAAC,UAAU,CAAC,IAAA;AAAM,IAAO,OAAA,IAAA,CAAA;AAE7B,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MAEC,aAAa,EAAA,MAAA,CAAO,QAAS,CAAA,MAAM,IAAI,IAAO,GAAA,KAAA;AAAA,MAC9C,SAAA,EAAW,GAAG,SAAa,CAAA,CAAA,EAAA,yBAAA,CAAA,CAAA;AAAA,MAC3B,KAAA,EAAO,EAAE,MAAA,EAAQ,SAAU,EAAA;AAAA,MAC3B,IAAK,EAAA,QAAA;AAAA,MACL,OAAA,EAAS,MAAM,MAAA,CAAO,KAAM,EAAA,CAAE,OAAQ,CAAA,UAAA,CAAW,MAAM,CAAA,CAAE,GAAI,EAAA;AAAA,KAAA;AAAA,IAE5D,QAAA;AAAA,GACH,CAAA;AAEJ,CAAA;AACA,WAAA,CAAY,WAAc,GAAA,aAAA,CAAA;AAEnB,SAAS,oBAAoB,MAAuB,EAAA;AACzD,EAAA,uBAAA,CAAwB,QAAQ,WAAa,EAAA;AAAA,IAC3C,MAAM,CAAG,EAAA,qBAAA,CAAA,aAAA,CAAA;AAAA,IACT,WAAa,EAAA,4BAAA;AAAA,IACb,aAAe,EAAA;AAAA,MACb,KAAO,EAAA,KAAA;AAAA,MACP,OAAS,EAAA,KAAA;AAAA,KACX;AAAA,IACA,KAAO,EAAA;AAAA,MACL,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,MAAA;AAAA,QACN,eAAiB,EAAA,IAAA;AAAA,QACjB,YAAc,EAAA;AAAA,UACZ;AAAA,YACE,IAAM,EAAA,KAAA;AAAA,YACN,GAAK,EAAA,sCAAA;AAAA,WACP;AAAA,SACF;AAAA,OACF;AAAA,MACA,yBAA2B,EAAA;AAAA,QACzB,IAAM,EAAA,iBAAA;AAAA,QACN,SAAW,EAAA,aAAA;AAAA,OACb;AAAA,MACA,iBAAmB,EAAA;AAAA,QACjB,IAAM,EAAA,OAAA;AAAA,QACN,WAAa,EAAA,eAAA;AAAA,QACb,SAAW,EAAA;AAAA,UACT;AAAA,YACE,QAAU,EAAA,gCAAA;AAAA,YACV,KAAO,EAAA,MAAA;AAAA,WACT;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAAA,IACA,UAAY,EAAA,aAAA;AAAA,IACZ,UAAY,EAAA,gDAAA;AAAA,IACZ,mBAAqB,EAAA,qBAAA;AAAA,GACtB,CAAA,CAAA;AACH;;;;"}