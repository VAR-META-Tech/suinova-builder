{"version":3,"file":"plasmic-giphy.cjs.development.js","sources":["../src/hooks/useFetch.ts","../src/giphy.tsx","../src/index.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\ninterface HookProps {\n    keyword: string\n}\nexport const useFetch = ({ keyword }: HookProps) => {\n    const [giphyId, setGiphyId] = useState(\"\");\n\n    useEffect(() => {\n        if (keyword) fetchGiphy();\n    }, [keyword]);\n\n    const fetchGiphy = async () => {\n        try {\n            const response = await fetch(\n                `https://api.giphy.com/v1/gifs/search?api_key=X1q3afkDR9WHSZJhLS6H9yYTQMPIWOTK&q=${keyword\n                    .split(\" \")\n                    .join(\"\")}&limit=1`\n            );\n\n            const { data } = await response.json();\n\n            setGiphyId(data[0]?.id);\n        } catch (error) {\n            console.log(\"Error in gif api retrieval: \", error);\n            setGiphyId(\"\");\n        }\n    };\n    return giphyId;\n};\n","import { GiphyFetch } from \"@giphy/js-fetch-api\";\nimport { IGif } from \"@giphy/js-types\";\nimport { ComponentMeta } from \"@plasmicapp/host\";\nimport React, { useEffect, useState } from \"react\";\nimport { useFetch } from \"./hooks/useFetch\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-giphy\";\n\ninterface GiphyProps {\n  searchTerm: string;\n  className: string;\n  noLayout?: boolean;\n}\n\nexport const GiphyMeta: ComponentMeta<GiphyProps> = {\n  name: \"hostless-giphy\",\n  displayName: \"Giphy\",\n  importName: \"Giphy\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Fetches Giphy data and render it\",\n  props: {\n    searchTerm: {\n      type: \"string\",\n      displayName: \"Search Term\",\n      description: \"Search term for fetching gif \",\n      defaultValue: \"Cat\",\n    },\n  },\n};\n\nexport function Giphy({ searchTerm, className }: GiphyProps) {\n  const id = useFetch({ keyword: searchTerm });\n  const [gif, setGif] = useState<IGif | null>(null);\n\n  const gf = new GiphyFetch(\"X1q3afkDR9WHSZJhLS6H9yYTQMPIWOTK\");\n  useEffect(() => {\n    const fetchGif = async () => {\n      if (!id) {\n        return null;\n      }\n      const { data } = await gf.gif(id);\n      setGif(data);\n      return data;\n    };\n    fetchGif();\n  }, [id]);\n\n  return (\n    <img\n      src={gif?.images.downsized_medium.url}\n      alt=\"Gif\"\n      className={className}\n    />\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\n\nimport { Giphy, GiphyMeta } from \"./giphy\";\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  _registerComponent(Giphy, GiphyMeta);\n}\n\nexport * from \"./giphy\";\n"],"names":["useFetch","_ref","keyword","_useState","useState","giphyId","setGiphyId","useEffect","fetchGiphy","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$","response","_yield$response$json","data","wrap","_callee$","_context","prev","next","fetch","split","join","sent","json","id","t0","console","log","stop","apply","arguments","ensure","x","undefined","Error","modulePath","GiphyMeta","name","displayName","importName","importPath","providesData","description","props","searchTerm","type","defaultValue","Giphy","className","gif","setGif","gf","GiphyFetch","fetchGif","_yield$gf$gif","abrupt","React","src","images","downsized_medium","url","alt","registerAll","loader","_registerComponent","Component","defaultMeta","registerComponent"],"mappings":"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"}