{"version":3,"file":"react-scroll-parallax.cjs.development.js","sources":["../src/ParallaxWrapper.tsx","../src/ParallaxProvider.tsx"],"sourcesContent":["import { PlasmicCanvasContext } from \"@plasmicapp/host\";\nimport registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React, { useContext } from \"react\";\nimport { Parallax, ParallaxContext } from \"react-scroll-parallax\";\n\nexport interface ParallaxWrapperProps {\n  speed?: number;\n  disabled?: boolean;\n  previewInEditor?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport default function ParallaxWrapper({\n  speed,\n  disabled,\n  previewInEditor,\n  children,\n  className,\n}: ParallaxWrapperProps) {\n  const inEditor = useContext(PlasmicCanvasContext);\n  const hasContext = useContext(ParallaxContext) != null;\n  const isServer = typeof window === \"undefined\";\n  if (!hasContext && !isServer) {\n    throw new Error(\n      \"Scroll Parallax can only be instantiated somewhere inside the Parallax Provider\"\n    );\n  }\n  return (\n    <Parallax\n      disabled={disabled || (inEditor && !previewInEditor)}\n      speed={speed}\n      className={className}\n    >\n      {children}\n    </Parallax>\n  );\n}\n\n/**\n * We're keeping the old registration without attachments to avoid confusion\n * due to the parallax custom behavior not working in old projects that didn't\n * make use of global contexts (so simply adding the custom behavior would\n * break it and it wouldn't be clear that the user should also add a\n * `ParallaxProvider`).\n */\nexport const deprecated_parallaxWrapperMeta: ComponentMeta<ParallaxWrapperProps> =\n  {\n    name: \"hostless-scroll-parallax\",\n    displayName: \"Scroll Parallax\",\n    importName: \"ParallaxWrapper\",\n    importPath: \"@plasmicpkgs/react-scroll-parallax\",\n    props: {\n      children: {\n        type: \"slot\",\n        defaultValue: {\n          type: \"img\",\n          src: \"https://placekitten.com/300/200\",\n          styles: {\n            maxWidth: \"100%\",\n          },\n        },\n      },\n      speed: {\n        type: \"number\",\n        description:\n          \"How much to speed up or slow down this element while scrolling. Try -20 for slower, 20 for faster.\",\n        defaultValue: 20,\n      },\n      disabled: {\n        type: \"boolean\",\n        description: \"Disables the parallax effect.\",\n      },\n      previewInEditor: {\n        type: \"boolean\",\n        description: \"Enable the parallax effect in the editor.\",\n      },\n    },\n    defaultStyles: {\n      maxWidth: \"100%\",\n    },\n  };\n\nexport function deprecated_registerParallaxWrapper(\n  loader?: { registerComponent: typeof registerComponent },\n  customParallaxWrapperMeta?: ComponentMeta<ParallaxWrapperProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      ParallaxWrapper,\n      customParallaxWrapperMeta ?? deprecated_parallaxWrapperMeta\n    );\n  } else {\n    registerComponent(\n      ParallaxWrapper,\n      customParallaxWrapperMeta ?? deprecated_parallaxWrapperMeta\n    );\n  }\n}\n\n/**\n * The new registration is only setting `isAttachment: true`.\n */\nexport const parallaxWrapperMeta: ComponentMeta<ParallaxWrapperProps> = {\n  ...deprecated_parallaxWrapperMeta,\n  isAttachment: true,\n};\n\nexport function registerParallaxWrapper(\n  loader?: { registerComponent: typeof registerComponent },\n  customParallaxWrapperMeta?: ComponentMeta<ParallaxWrapperProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      ParallaxWrapper,\n      customParallaxWrapperMeta ?? parallaxWrapperMeta\n    );\n  } else {\n    registerComponent(\n      ParallaxWrapper,\n      customParallaxWrapperMeta ?? parallaxWrapperMeta\n    );\n  }\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext, {\n  GlobalContextMeta,\n} from \"@plasmicapp/host/registerGlobalContext\";\nimport React, { useEffect, useRef } from \"react\";\nimport { ParallaxProvider, useController } from \"react-scroll-parallax\";\nimport { ParallaxProviderProps } from \"react-scroll-parallax/dist/components/ParallaxProvider/types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n/**\n * A safe wrapper around `useController()` to prevent errors when\n * `ParallaxProvider` is missing. If the context is unavailable,\n * `useController()` will throw an error, which we catch and handle\n * gracefully by returning `null` instead of crashing the component.\n */\nfunction useSafeController() {\n  try {\n    return useController();\n  } catch {\n    return null; // Return null instead of throwing an error\n  }\n}\n\n/**\n * This is required to ensure the parallax scrolling works correctly, since if\n * (for instance) images load after the parallax wrapper has calculated the\n * dimensions of the space, it will result in incorrect parallax scrolling\n * amounts.\n *\n * This is not great since we need to mutation-observe the whole section of the\n * document (which may be large), but we can probably optimize this in the\n * future.\n */\nfunction ParallaxCacheUpdate({ children }: React.PropsWithChildren<{}>) {\n  const parallaxController = useSafeController();\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (ref.current?.parentElement) {\n      const targetNode = ref.current.parentElement;\n      const observer = new ResizeObserver(() => {\n        if (parallaxController) {\n          parallaxController.update();\n        }\n      });\n      observer.observe(targetNode);\n      return () => {\n        observer.disconnect();\n      };\n    }\n    return () => {};\n  }, [ref.current]);\n\n  return (\n    <div style={{ display: \"contents\" }} ref={ref}>\n      {children}\n    </div>\n  );\n}\n\nexport function ParallaxProviderWrapper({\n  children,\n  ...props\n}: React.PropsWithChildren<ParallaxProviderProps>) {\n  return (\n    <ParallaxProvider {...props}>\n      <ParallaxCacheUpdate>{children}</ParallaxCacheUpdate>\n    </ParallaxProvider>\n  );\n}\n\n/**\n * @deprecated use `globalParallaxProviderMeta` instead.\n */\nexport const parallaxProviderMeta: ComponentMeta<ParallaxProviderProps> = {\n  name: \"hostless-parallax-provider\",\n  displayName: \"Parallax Provider\",\n  importName: \"ParallaxProviderWrapper\",\n  importPath: \"@plasmicpkgs/react-scroll-parallax\",\n  props: {\n    children: {\n      type: \"slot\",\n      defaultValue: {\n        type: \"vbox\",\n        children: [\n          {\n            type: \"text\",\n            value:\n              \"Wrap any element in a Scroll Parallax component. Ensure they're all inside this Parallax Provider. Example:\",\n            styles: {\n              marginBottom: \"20px\",\n            },\n          },\n          {\n            type: \"component\",\n            name: \"hostless-scroll-parallax\",\n          },\n        ],\n      },\n    },\n    scrollAxis: {\n      type: \"choice\",\n      description: \"Scroll axis for setting horizontal/vertical scrolling\",\n      options: [\"vertical\", \"horizontal\"],\n      displayName: \"Scroll Axis\",\n    },\n  },\n};\n\n/**\n * @deprecated use `registerGlobalParallaxProvider` instead.\n */\nexport function registerParallaxProvider(\n  loader?: { registerComponent: typeof registerComponent },\n  customParallaxProviderMeta?: ComponentMeta<ParallaxProviderProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      ParallaxProviderWrapper,\n      customParallaxProviderMeta ?? parallaxProviderMeta\n    );\n  } else {\n    registerComponent(\n      ParallaxProviderWrapper,\n      customParallaxProviderMeta ?? parallaxProviderMeta\n    );\n  }\n}\n\nexport const globalParallaxProviderMeta: GlobalContextMeta<ParallaxProviderProps> =\n  {\n    name: \"global-parallax-provider\",\n    displayName: \"Parallax Provider\",\n    importName: \"ParallaxProviderWrapper\",\n    importPath: \"@plasmicpkgs/react-scroll-parallax\",\n    props: {\n      scrollAxis: {\n        type: \"choice\",\n        description: \"Scroll axis for setting horizontal/vertical scrolling\",\n        options: [\"vertical\", \"horizontal\"],\n        displayName: \"Scroll Axis\",\n      },\n    },\n  };\n\nexport function registerGlobalParallaxProvider(\n  loader?: { registerGlobalContext: typeof registerGlobalContext },\n  customParallaxProviderMeta?: GlobalContextMeta<ParallaxProviderProps>\n) {\n  if (loader) {\n    loader.registerGlobalContext(\n      ParallaxProviderWrapper,\n      customParallaxProviderMeta ?? globalParallaxProviderMeta\n    );\n  } else {\n    registerGlobalContext(\n      ParallaxProviderWrapper,\n      customParallaxProviderMeta ?? globalParallaxProviderMeta\n    );\n  }\n}\n"],"names":["ParallaxWrapper","_ref","speed","disabled","previewInEditor","children","className","inEditor","useContext","PlasmicCanvasContext","hasContext","ParallaxContext","isServer","window","Error","React","Parallax","deprecated_parallaxWrapperMeta","name","displayName","importName","importPath","props","type","defaultValue","src","styles","maxWidth","description","defaultStyles","deprecated_registerParallaxWrapper","loader","customParallaxWrapperMeta","registerComponent","parallaxWrapperMeta","_extends","isAttachment","registerParallaxWrapper","useSafeController","useController","_unused","ParallaxCacheUpdate","parallaxController","ref","useRef","useEffect","_ref$current","current","parentElement","targetNode","observer","ResizeObserver","update","observe","disconnect","style","display","ParallaxProviderWrapper","_ref2","_objectWithoutPropertiesLoose","_excluded","ParallaxProvider","parallaxProviderMeta","value","marginBottom","scrollAxis","options","registerParallaxProvider","customParallaxProviderMeta","globalParallaxProviderMeta","registerGlobalParallaxProvider","registerGlobalContext"],"mappings":"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"}